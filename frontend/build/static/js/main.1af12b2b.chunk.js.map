{"version":3,"sources":["Components/GeneralComponents/NavigationBar.js","Components/Home/HomeLoginBox.js","Pages/Home.js","Components/Appointments/WhichFacility.js","Components/Appointments/WhichDoctor.js","Components/Appointments/CompleteNewAppointment.js","Components/Appointments/NewAppointmentForm.js","Components/Appointments/AddDiagnosis.js","Components/Appointments/ShowDiagnosis.js","Components/Appointments/ShowPrescriptions.js","Components/Appointments/AddPrescription.js","Components/Appointments/AddSpecilaistReccomendation.js","Components/Appointments/PatientMedicalHistory.js","Components/Appointments/AppointmentHistory.js","Pages/Appointments.js","Components/Registration/BasicInformation.js","Components/Registration/BasicInformationPtTwo.js","Components/Registration/RegistrationForm.js","Pages/Registration.js","Components/Profile/MedicalInformation.js","Components/Profile/ProfileInfo.js","Components/Profile/ProfileInfoTest.js","Pages/Profile.js","Components/Scheduling/ModifyFacility.js","Components/Scheduling/WhichDay.js","Components/Scheduling/AddNewDay.js","Components/Scheduling/DaySchedule.js","Pages/Scheduling.js","Components/Report/FacilityReports.js","Components/Report/DoctorsReport.js","Components/Report/InsuranceReport.js","Components/Report/ReportsGenerator.js","Pages/Report.js","Pages/DoctorRegistration.js","Components/Locator/MapGen.js","Components/Locator/TryingToWorkMap.js","Pages/Locator.js","Paths.js","serviceWorker.js","index.js"],"names":["NavigationBar","state","loggedIn","userid","userType","currentTab","_this","props","Tab","AppointmentPageRedirect","window","location","replace","ProfilePageRedirect","SchedulePageRedirect","ReportPageRedirect","DocRegistrationRedirect","LocatorPageRedirect","logout","setState","localStorage","setItem","storageLoggedIn","getItem","userID","this","_this$props","classes","title","react_default","a","createElement","className","root","AppBar_default","bar","position","Toolbar_default","Typography_default","variant","BarTitle","index_es","textColor","value","label","onClick","React","Component","withStyles","flexGrow","marginTop","backgroundColor","minHeight","height","MenuIcon","marginLeft","marginRight","HomeLoginBox","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","defineProperty","target","name","handleRegistration","handleLocator","login","fetch","concat","Username","then","result","json","res","data","length","Password","password","LoginTableID","setUserType","catch","err","console","log","firstName","bind","assertThisInitialized","_this2","RoleID","EmployeeID","updateAppTimes","PatientID","Paper_default","elevation","component","form","FormControl_default","margin","fullWidth","required","htmlFor","autoFocus","onChange","type","submitButton","color","size","theme","width","alignItems","display","flexDirection","padding","spacing","unit","Home","GeneralComponents_NavigationBar","Home_HomeLoginBox","WhichFacility","id","select","val","FacilityID","Facilities","map","option","key","FacilityName","WhichDoctor","DoctorID","Doctors","FirstName","Reason","inputProps","maxLength","material_ui_pickers_esm","utils","DateFnsUtils","minDate","Date","AppointmentDate","AppointmentDateChange","container","flexWrap","textField","AppointmentTimeID","AppointmentTimes","TimeSlotID","AppointmentTime","NewAppointmentForm","componentDidMount","uploadFacilities","handleClickOpen","openForm","handleClose","step","DBFormattedDate","d","ApptDate","FormatDate","date","getFullYear","fixMonth","getDate","getMonth","Response","uploadDoctors","Specialist","uploadTimes","method","headers","Content-Type","body","JSON","stringify","AppDate","handleNextStep","handleSubmit","TimeID","setTimeout","handleBackStep","Appointments_WhichFacility","Button_default","disabled","Appointments_WhichDoctor","Appointments_CompleteNewAppointment","Button","ControlPointOutlined_default","icon","Dialog_default","open","onClose","DialogTitle_default","DialogContent_default","DialogContentText_default","getStepInfo","DialogActions_default","fontSize","&:hover","AddDiagnosis","handleDiagnosisAdd","AppointmentID","Diagnosis","AppID","ShowDiagnosis","uploadDiagnosis","maxWidth","Table_default","table","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","Each","DiagnosisID","scope","overflowX","minWidth","ShowPrescriptions","uploadPrescriptions","Prescriptions","PrescriptionIssueID","RefillLeft","DueDate","substr","Medicine","AddPrescription","uploadMedicineTypes","PrescriptionID","DBDueDate","Refills","DueDateChange","MedicineTypes","_this3","AddSpecialistReccomendation","handleSpecialistAdd","Specialists","uploadSpecialists","LastName","PatientMedicalHistory","getMedicalRecord","allergies","Allergies","immunizationRecord","ImmunizationRecord","medicalCondition","MedicalCondition","procedureRecord","ProcedureRecord","error","editing","editMode","saveChange","patientID","lastUpdatedBy","updateMedicalRecord","ChromeReaderMode_default","fullScreen","dialog","item","sm","multiline","rows","button","dense","menu","AppointmentHistory","grabAppointments","UserType","UserID","Appointments","panel","event","expanded","handleAppointmentCancel","handleClickOpenCancellation","apptID","selectedAppt","handleCloseCancellation","cancelApptShow","page","idAppointment","ExpansionPanel_default","square","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","heading","Patient","Doctor","currentStatus","ExpansionPanelDetails_default","secondaryHeading","Street","City","State","ZipCode","xs","Appointments_AddDiagnosis","AddSpecilaistReccomendation","Appointments_AddPrescription","Appointments_ShowDiagnosis","Appointments_PatientMedicalHistory","Appointments_ShowPrescriptions","Appointments_NewAppointmentForm","AdditionButton","typography","pxToRem","flexBasis","flexShrink","iconHistory","palette","text","secondary","Appointments_AppointmentHistory","validatePassword","BasicInformation","username","helperText","roles","RoleTitle","Email","TextMaskCustom","other","esm_extends","reactTextMask_default","assign","guide","mask","placeholderChar","showMask","DateMaskCustom","SSNMaskCustom","BasicInformationPtTwo","AddressStreet","AddressCity","AddressState","states","StateID","StateString","AddressZip","placeholder","DateOfBirth","inputComponent","Sex","sexes","SexID","Gender","raceID","races","RaceID","Race","SSN","CellNumber","RegistrationForm","registerUser","homeRedirect","stepNext","registrationStep","uploadStates","uploadSexes","uploadRoles","uploadRaces","IconButton_default","icons_Home_default","style","paperForm","Registration_BasicInformation","Registration_BasicInformationPtTwo","EmptyEntries","TextField","middleInitial","Registration","Registration_RegistrationForm","MedicalInformation","editImmunizationRecord","editMedicalCondition","editAllergies","editProcedureRecord","margine","handleChangeImmunizationRecord","handleChangeMedicalCondition","handleChangeAllergies","handleChangeProcedureRecord","ProfileInfo","retrieveUserInfo","first","last","user","pass","email","insuranceID","InsuranceClientID","dob","DOB","ssn","sex","cellnumber","streetaddr","cityaddr","stateaddr","AddressStateID","zipaddr","updateUserInfo","InsuranceID","_","saveChanges","revertChanges","usern","noValidate","autoComplete","defaultValue","substring","PhoneMaskCustom","validateUsername","editerButtons","Save_default","Cancel_default","Edit_default","ProfileInfoTest","Deductible","deduct","Name","company","ContactNumber","insuranceContact","getInsurance","Profile","Profile_ProfileInfoTest","Profile_MedicalInformation","ModifyFacility","selectedFacility","handleDoneSelected","i","WorkSchedule","WeekDayID","Sub_DayID","getFacilityIDFromName","UpdateDayID","NewFacilityID","Sub_FacilityID","lookUpName","WhichDay","DayID","OpenDays","WeekDay","AddNewDay","getOpenDaysList","handleConfirmChange","newDayList","shouldAddNew","Weekdays","k","push","Scheduling_WhichDay","DaySchedule","grabWorkSchedule","getFacilities","getWeekday","dayID","selectedDayID","handleConfirmRemove","RemoveDayID","Scheduling_ModifyFacility","getDayName","Scheduling_AddNewDay","Scheduling","Scheduling_DaySchedule","FacilityReports","MinDateChange","MinimumDateDB","MinimumDate","MaxDateChange","MaximumDateDB","MaximumDate","handlechoseChange","_this$setState2","checked","fetchFacilityReport","checkAllDates","ChosenFacility","Report","DoctorsCount","Count","_this4","control","DoctorsWorking","UpcomingApps","CancelledApps","CompletedApps","totalApps","DoctorsReport","fetchDoctorReport","ChosenDoctor","Apps","Diagnoses","DaysWorking","fetchInsurances","ReportsGenerator","Report_FacilityReports","Report_DoctorsReport","InsuranceReport","marginBottom","Report_ReportsGenerator","DoctorRegistration","MapGen","_React$Component","onMarkerClick","marker","selectedPlace","activeMarker","showingInfoWindow","_this$props$initialCe","initialCenter","lat","lng","currentLocation","isCurrMarkerShown","inherits","createClass","navigator","geolocation","getCurrentPosition","prevState","objectSpread","currentLatLng","coords","latitude","longitude","facility","geocoder","Geocoder","plat","plng","address","geocode","results","status","geometry","dist","google","zoom","center","onInfoWindowClose","geo","getGeocode","defaultProps","centerAroundCurrentLocation","visible","GoogleApiWrapper","apiKey","TryingToWorkMap","FacilitiesGeoCode","Geocode","setApiKey","coordinates","fromAddress","response","phoneIcon","Locator","apply","arguments","mapContainer","Locator_TryingToWorkMap","redirect","KeyboardArrowLeftRounded_default","background","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","Paths","react_router_dom","react_router","path","exact","Boolean","hostname","match","ReactDOM","render","src_Paths","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1af12b2b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { Tab, Tabs, CssBaseline } from '@material-ui/core';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  BarTitle: {\n    flexGrow: 1,\n    marginTop: \"1%\"\n  },\n  bar: {\n    backgroundColor: \"#e0e0e0\",\n    minHeight: 100,\n    height: '100%',\n\n  },\n  MenuIcon: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n};\n\n  class NavigationBar extends React.Component {\n    state = {\n      loggedIn: null,\n      userid: null,\n      userType: null,\n      currentTab: this.props.Tab,\n    };\n\n    logInSet(storageLoggedIn) {\n      return localStorage.getItem(storageLoggedIn) === 'true' ? true : false;\n    }\n    AppointmentPageRedirect = () =>{\n      window.location.replace('/Appointments');\n    }\n    ProfilePageRedirect = () =>{\n      window.location.replace('/Profile');\n    }\n    SchedulePageRedirect = () =>{\n      window.location.replace('/Scheduling');\n    }\n    ReportPageRedirect = () =>{\n      window.location.replace('/Reports');\n    }\n    DocRegistrationRedirect = () =>{\n      window.location.replace('/DoctorRegistration');\n    }\n    LocatorPageRedirect = () =>{\n      window.location.replace('/Locator')\n    }\n    logout = () =>{\n      this.setState({loggedIn:false,userid:null,userType:null})\n      localStorage.setItem(\"userID\", null);\n      localStorage.setItem(\"userType\", null);\n      localStorage.setItem(\"LoginTableID\", null);\n      localStorage.setItem(\"loggedIn\", false);\n      window.location.replace('/')\n    }\n    componentDidMount() {\n      if(localStorage.userID !== null){\n        this.setState({loggedIn: true, userType: localStorage.userType});\n      }\n      else{\n        this.setState({loggedIn:false,userid:null,userType:null})\n      }\n      //HardCoding\n      //Query to see if the user is an employee or a Patient then\n      \n    }\n    render() {\n      const { classes, title } = this.props;\n      return (\n        <div className={classes.root}>\n          <AppBar className={classes.bar} position=\"static\">\n            <Toolbar>\n              {window.localStorage.loggedIn === \"true\" ? (\n                <div>\n                  <Toolbar >\n                    <Typography variant=\"h3\" className={classes.BarTitle}>\n                      {title}\n                    </Typography>\n                    <CssBaseline/>\n                  </Toolbar>\n                  <Tabs textColor=\"primary\" value={this.state.currentTab}>\n                      <Tab label=\"Appointments\" onClick={this.AppointmentPageRedirect}></Tab>\n                      <Tab label=\"My Profile\" onClick={this.ProfilePageRedirect}></Tab>\n                      {window.localStorage.userType !== \"2\" && window.localStorage.userType !== \"3\" ? (\n                        <Tab label=\"My Schedule\" onClick={this.SchedulePageRedirect}></Tab>\n                      ):(\n                        <div></div>\n                      )}\n                      {window.localStorage.userType === \"3\" ? (\n                          <Tab label=\"Reports\" onClick={this.ReportPageRedirect}></Tab>\n                          //<Tab label=\"Register A Doctor\" onClick={this.DocRegistrationRedirect}></Tab>\n\n                      ):(\n                        <div></div>\n                      )}\n                      {window.localStorage.userType === \"3\" ? (\n                          <Tab label=\"Register A New User\" onClick={this.DocRegistrationRedirect}></Tab>\n\n                      ):(\n                        <div></div>\n                      )}\n                      <Tab label=\"Facilities\" onClick={this.LocatorPageRedirect}></Tab>\n                      <Tab label=\"Logout\" onClick={this.logout}></Tab>\n                  </Tabs>\n                  \n                </div>\n              ):(\n                <Typography variant=\"h3\"className={classes.BarTitle}>\n                  {title}\n                </Typography>\n              )}\n            </Toolbar>\n          </AppBar>\n        </div>\n      );\n    }\n}\n\nNavigationBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(NavigationBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport {Input, InputLabel, Button} from '@material-ui/core';\n\nconst styles = theme =>({\n  root: {\n    width: '25%',\n    marginLeft: '65%',\n    marginTop: '10%',\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: 'column',\n    backgroundColor: \"#e0e0e0\",\n    padding: theme.spacing.unit*3\n\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing.unit\n  },\n  submitButton: {\n      marginTop: '20px'\n  }\n});\n\nclass HomeLoginBox extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            userType: null,\n            firstName:null,\n            Username: \"\",\n            password: \"\",\n            loggedIn: false,\n        };\n        this.handleChange=this.handleChange.bind(this);\n    }\n    \n    handleChange = e =>{\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n        \n    }\n    handleRegistration = () => {\n        window.location.replace('/Registration');\n    }\n    handleLocator = () => {\n        window.location.replace('/Locator');\n    }\n    login = () => {\n        fetch(`http://162.243.165.50:4000/login/${this.state.Username}`)\n        .then(result => result.json())\n        .then(res => {\n            if(res.data.length === 1){\n                if(res.data[0].Password === this.state.password){\n                    window.localStorage.setItem(\"loggedIn\", 'true');\n                    window.localStorage.setItem(\"LoginTableID\", res.data[0].LoginTableID);\n                    this.setUserType();                }\n                else{\n                    window.localStorage.setItem(\"loggedIn\", 'false');\n                }\n            }\n            else{\n                window.localStorage.setItem(\"loggedIn\", 'false');\n            }\n        })\n        .catch(err => console.log(err))\n    }\n    \n    setUserType(){\n        fetch(`http://162.243.165.50:4000/Employee/${window.localStorage.LoginTableID}`)\n        .then(result => result.json())\n        .then(res => {\n            if(res.data.length === 1){\n                window.localStorage.setItem(\"userType\", res.data[0].RoleID); \n                window.localStorage.setItem(\"userID\", res.data[0].EmployeeID);  \n                this.setState({loggedIn:true});      \n                this.updateAppTimes();\n            }\n            else{  \n                fetch(`http://162.243.165.50:4000/Patient/${window.localStorage.LoginTableID}`)\n                .then(result => result.json())\n                .then(res => {\n                    if(res.data.length === 1){\n                        window.localStorage.setItem(\"userType\", 2); \n                        window.localStorage.setItem(\"userID\", res.data[0].PatientID);   \n                        this.setState({loggedIn:true});   \n                        this.updateAppTimes();          \n                    }\n                })\n                .catch(err => console.log(err))\n            }\n        })\n        .catch(err => console.log(err))\n    }\n    updateAppTimes(){\n        if(window.localStorage.userType !== \"3\"){\n            if(window.localStorage.userType === \"2\"){\n                fetch(`http://162.243.165.50:4000/EmployeeAppUpdate/${window.localStorage.LoginTableID}`)\n                .then(result => result.json())\n            }\n            else{\n                fetch(`http://162.243.165.50:4000/PatientAppUpdate/${window.localStorage.LoginTableID}`)\n                .then(result => result.json())\n            }\n        }\n    }\n    componentDidMount() {\n        window.localStorage.setItem(\"userID\", null);\n        window.localStorage.setItem(\"userType\", null);\n        window.localStorage.setItem(\"LoginTableID\", null);\n        window.localStorage.setItem(\"loggedIn\", false);\n    }\n  render(){\n    const {classes}=this.props;\n    if(this.state.loggedIn === false){\n        return(\n            <Paper elevation={15} className={classes.root}>\n              <Typography component=\"h1\" variant=\"h4\">\n                  Log In\n              </Typography>\n              <form className={classes.form}>\n                  <FormControl margin=\"normal\" fullWidth required>\n                      <InputLabel htmlFor=\"Username\">Username</InputLabel>\n                      <Input name=\"Username\" autoFocus value={this.state.Username} onChange={this.handleChange}></Input>\n                  </FormControl>\n                  <FormControl margin=\"normal\" fullWidth required>\n                      <InputLabel htmlFor=\"Password\">Password</InputLabel>\n                      <Input type =\"password\" value={this.state.password} name=\"password\" onChange={this.handleChange}></Input>\n                  </FormControl>\n                  <FormControl fullWidth className={classes.submitButton}>\n                      <Button\n                      variant=\"contained\"\n                      onClick={this.login}\n                      color=\"primary\">\n                          Log In\n                      </Button>\n                  </FormControl>\n                  <FormControl  className={classes.submitButton}>\n                      <Button\n                      size=\"small\"\n                      onClick={this.handleRegistration}\n                      color=\"primary\">\n                          Dont have an Account? Click here to Register\n                      </Button>\n                  </FormControl>\n                  <FormControl  className={classes.submitButton}>\n                      <Button\n                      size=\"small\"\n                      onClick={this.handleLocator}\n                      color=\"primary\">\n                          Need to find one of our Clinics?\n                      </Button>\n                  </FormControl>\n              </form>\n            </Paper>\n        );\n    }\n    else return(\n        <div>{window.location.replace('/Appointments')}</div>\n    );\n    \n  }\n}\n\nHomeLoginBox.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n  \n  export default withStyles(styles)(HomeLoginBox);","import React, { Component } from 'react';\nimport './Home.css';\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\nimport HomeLoginBox from '../Components/Home/HomeLoginBox';\n\n\nclass Home extends Component {\n  render() { \n    return (\n      <div className='Home-image'>\n        <div className='Home-overlay'>\n          <NavigationBar title={\"Team 7 Medical Database Project\"}/>\n            <HomeLoginBox/>\n        </div>\n      </div>\n    );\n  } \n}\n\nexport default Home;\n","import { TextField, MenuItem } from \"@material-ui/core\";\nimport React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\n\n\nfunction WhichFacility(props){\n    \n    return(\n        <div>\n            <FormControl margin=\"normal\" fullWidth>\n                    <TextField\n                        id=\"FacilityID\"\n                        select\n                        label=\"Please Choose A Facility\"\n                        name=\"FacilityID\"\n                        variant=\"standard\"\n                        onChange={props.handleChange}\n                        value={props.val.FacilityID}   \n                        required                   \n                    >\n                        {props.val.Facilities.map(option => (\n                            <MenuItem key={option.FacilityID} value={option.FacilityID}>\n                                {option.FacilityName}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                </FormControl>\n        </div>\n    );\n}\n\nexport default WhichFacility;","import { TextField, MenuItem } from \"@material-ui/core\";\nimport React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\n\nfunction WhichDoctor(props){\n    return(\n        <div>\n            <FormControl margin=\"normal\" fullWidth>\n                    <TextField\n                        id=\"DoctorID\"\n                        select\n                        label=\"Please Choose A Doctor\"\n                        name=\"DoctorID\"\n                        variant=\"standard\"\n                        onChange={props.handleChange}\n                        value={props.val.DoctorID}   \n                        required                   \n                    >\n                    {props.val.Doctors.map(option => (\n                        <MenuItem key={option.EmployeeID} value={option.EmployeeID}>\n                            Dr. {option.FirstName}\n                        </MenuItem>\n                    ))}\n                    </TextField>\n                    <TextField \n                        name=\"Reason\"\n                        label=\"Reason for Appointment\" \n                        variant=\"standard\"\n                        onChange={props.handleChange}\n                        value={props.val.Reason}\n                        inputProps={{ maxLength: 100 }}\n                    />\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DatePicker\n                            minDate={new Date()}\n                            label=\"Appointment Date\"\n                            name=\"AppointmentDate\"\n                            value={props.val.AppointmentDate}\n                            onChange={props.AppointmentDateChange}\n                        />\n                    </MuiPickersUtilsProvider>\n                </FormControl>\n        </div>\n    );\n}\n\nexport default WhichDoctor;\n","import React from 'react';\nimport { TextField, MenuItem } from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst styles = theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      width: 200,\n    },\n  });\n\n\n  //This function should allow the user to select a time for the appointment \nfunction CompleteNewAppointment(props){\n    return(\n        <div>\n            <FormControl fullWidth>\n                    <TextField\n                        id=\"AppointmentTimeID\"\n                        select\n                        label=\"Please Choose A Time\"\n                        name=\"AppointmentTimeID\"\n                        variant=\"standard\"\n                        onChange={e=>props.handleChange(e)}\n                        value={props.val.AppointmentTimeID}   \n                        required                   \n                    >\n                    {props.val.AppointmentTimes.map(option => (\n                        <MenuItem key={option.TimeSlotID} value={option.TimeSlotID}>\n                            {option.AppointmentTime}\n                        </MenuItem>\n                    ))}\n                    </TextField>\n                </FormControl>\n        </div>\n    );\n}\n\nCompleteNewAppointment.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n  \n  export default withStyles(styles)(CompleteNewAppointment);","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport WhichFacility from './WhichFacility';\nimport WhichDoctor from './WhichDoctor';\nimport CompleteNewAppointment from './CompleteNewAppointment';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddButton from '@material-ui/icons/ControlPointOutlined';\nimport { withStyles } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n    icon: {\n      fontSize: 25,\n      color: \"#f5f5f5\",\n      '&:hover': {\n        color: '#e0e0e0',\n      },\n    },\n    Button: {\n        marginTop: \".5%\"\n    }\n});\n\nclass NewAppointmentForm extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            openForm: false,\n            step: 0,\n            FacilityID: \"\",\n            DoctorID: \"\",\n            AppointmentTimeID:\"\",\n            Facilities: [],\n            Doctors: [],\n            AppointmentTimes: [],\n            Reason: null,\n            AppointmentDate: null,\n            DBFormattedDate: null,\n        };\n        this.uploadDoctors=this.uploadDoctors.bind(this);\n    }\n\n    componentDidMount = () => {\n        this.setState({\n            AppointmentTimes: [{\n                TimeSlotID: -1,\n                AppointmentTime: \"No Appointment Times for the chosen Date\"\n            }]\n        })\n        this.uploadFacilities();\n    };\n\n    handleClickOpen = () => {\n        this.setState({ openForm: true });\n    };\n\n    handleClose = () => {\n        this.uploadFacilities();\n        this.setState({ \n            openForm: false,\n            step: 0,\n            FacilityID: \"\",\n            DoctorID: \"\",\n            AppointmentTimeID:\"\",\n            Facilities: [],\n            Doctors: [],\n            AppointmentTimes: [],\n            Reason: null,\n            AppointmentDate: null,\n            DBFormattedDate: null,\n        });\n    };\n\n    AppointmentDateChange = (d) =>{\n        let ApptDate=new Date(d)\n        ApptDate = this.FormatDate(ApptDate);\n        this.setState({DBFormattedDate:ApptDate});\n        this.setState({\n            AppointmentDate: d\n        })\n    }\n\n    FormatDate=(date)=>{\n        date = date.getFullYear() + '-' + (this.fixMonth(date)) + '-' + date.getDate();\n        return date;\n    }\n\n    fixMonth=(date)=>{\n        if(date.getMonth() + 1 < 10){\n            return \"0\" +(date.getMonth() +1);\n        }\n        else{\n            return date.getMonth()+1;\n        }\n    }\n\n    handleChange = e =>{\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n\n    getStepInfo(step){\n        switch(step){\n            case 0:\n                return (<div>\n                            <WhichFacility val={this.state} handleChange={this.handleChange}/>\n                            <Button onClick={this.handleNextStep} disabled={this.state.FacilityID===\"\"} color=\"primary\">\n                                Next\n                            </Button>\n                        </div>)\n            case 1:\n            \n                return (<div>\n                            <WhichDoctor val={this.state} handleChange={this.handleChange}  AppointmentDateChange={this.AppointmentDateChange}/>\n                            <Button onClick={this.handleBackStep} color=\"primary\">\n                                Back\n                            </Button>\n                            <Button onClick={this.handleNextStep} disabled={this.state.DoctorID===\"\" || this.state.AppointmentDate===\"\"} color=\"primary\">\n                                Next\n                            </Button>\n                        </div>)\n            case 2:\n                \n                return (<div>\n                            <CompleteNewAppointment  val={this.state} AppointmentDateChange={this.AppointmentDateChange} handleChange={this.handleChange}/>\n                            <Button onClick={this.handleBackStep} color=\"primary\">\n                                Back\n                            </Button>\n                            <Button onClick={this.handleSubmit} disabled={this.state.AppointmentTimeID=== \"\" || this.state.AppointmentTimeID=== -1} color=\"primary\">\n                                Submit\n                            </Button>\n\n                        </div>) \n            default:\n                return \"Cannot Find Appointment Step\"\n        }\n    };\n    uploadFacilities=()=> {\n        fetch(`http://162.243.165.50:4000/Facilities`)\n        .then(result => result.json())\n        .then(Response => this.setState({ Facilities:Response.data }))\n        .catch(err => console.log(err))\n    };\n    uploadDoctors=()=> {\n        var Specialist=\"1\";//0 is false and 1 is true\n        if(window.localStorage.userType !== \"3\"){\n            Specialist=\"0\";\n        }\n        fetch(`http://162.243.165.50:4000/Doctors/${this.state.FacilityID}/${Specialist}`)\n        .then(result => result.json())\n        .then(Response => this.setState({ Doctors:Response.data }))\n        .catch(err => console.log(err))\n    };\n    uploadTimes=()=> {\n        fetch(`http://162.243.165.50:4000/AppointmentTimes/`, {\n            method:\"POST\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n            },\n            body: JSON.stringify({\n                DoctorID: this.state.DoctorID,\n                FacilityID: this.state.FacilityID,\n                AppDate: this.state.DBFormattedDate,\n            })\n        })\n        .then(result => result.json())\n        .then(Response => \n            {if(Response.data.length !== 0) {\n                this.setState({ AppointmentTimes:Response.data})\n            }})\n        .catch(err => console.log(err));\n    };\n    handleNextStep= () =>{\n        this.uploadDoctors();\n        this.uploadTimes();\n        this.setState({step: this.state.step+1})\n    };\n    handleSubmit= () =>{\n        this.setState({openForm:false})\n        fetch(`http://162.243.165.50:4000/AddAppointment`, {\n            method:\"POST\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n            },\n            body: JSON.stringify({\n                FacilityID: this.state.FacilityID,\n                DoctorID:   this.state.DoctorID,\n                PatientID:  this.props.PatientID,\n                Reason:     this.state.Reason,\n                TimeID:     this.state.AppointmentTimeID,\n                AppDate:    this.state.DBFormattedDate\n            })\n        })\n        .catch(err => console.log(err))\n        //.then(window.location.replace('/Appointments'));\n        setTimeout(function(){\n            window.location.replace('/Appointments')\n        }, 200);\n    };\n    handleBackStep= () =>{\n        this.setState({\n            step: this.state.step-1,\n            AppointmentTimeID: \"\"\n        })\n    };\n    render(){\n        const {classes}=this.props;\n        return(\n            <div>\n                {window.localStorage.userType === \"2\" ? (\n                    <Button variant=\"filled\" fullWidth className={classes.Button} onClick={this.handleClickOpen}>\n                        <AddButton className={classes.icon}/>New Appointment\n                    </Button>\n                ) : (\n                    <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.Button} onClick={this.handleClickOpen}>\n                        <AddButton className={classes.icon}/>New Appointment\n                    </Button>\n                )}\n                <Dialog open={this.state.openForm} onClose={this.handleClose}>\n                    <DialogTitle id=\"form-dialog-title\">Book an Appointment</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Please fill out the information to add a new Appointment\n                        </DialogContentText>\n                        {this.getStepInfo(this.state.step)}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n    \n}\n\nNewAppointmentForm.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  export default withStyles(styles)(NewAppointmentForm);","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles, TextField } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n    icon: {\n      margin: theme.spacing.unit,\n      fontSize: 32,\n    },\n});\n\nclass AddDiagnosis extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            AppointmentID: this.props.AppID,\n            Diagnosis: \"\",\n            openForm: false,\n        };\n    }\n\n    handleDiagnosisAdd= () =>{\n        this.setState({openForm:false});\n        fetch(`http://162.243.165.50:4000/AddDiagnosis`, {\n            method:\"POST\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n            },\n            body: JSON.stringify({\n                AppointmentID: this.state.AppointmentID,\n                Diagnosis:   this.state.Diagnosis,\n            })\n        })\n        .catch(err => console.log(err));\n    };\n    handleClickOpen = () => {\n        this.setState({ \n            Diagnosis: \"\",\n            openForm: true \n        });\n    };\n\n    handleClose = () => {\n        this.setState({ openForm: false });\n    };\n\n    handleChange = e =>{\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n    render(){\n        return(\n            <div>\n                <Button variant=\"contained\" color=\"primary\" fullWidth className={this.props.Button} onClick={this.handleClickOpen}>\n                    Add a Diagnosis\n                </Button>\n                <Dialog open={this.state.openForm} onClose={this.handleClose}>\n                    <DialogTitle id=\"form-dialog-title\">Add A Appointment</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Please fill out the information to add a new Diagnosis\n                        </DialogContentText>\n                        <TextField \n                            name=\"Diagnosis\"\n                            label=\"What is the Diagnosis\" \n                            variant=\"standard\"\n                            onChange={this.handleChange}\n                            value={this.state.Diagnosis}\n                            inputProps={{ maxLength: 45 }}\n                            fullWidth\n                        />\n                        <Button onClick={this.handleDiagnosisAdd} disabled={this.state.Diagnosis=== \"\"}>\n                            Add Diagnosis\n                        </Button>\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n    \n}\n\nAddDiagnosis.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  export default withStyles(styles)(AddDiagnosis);\n\n\n\n  //Split show and add for Prescription and Diagnosis","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles';\n\n\n//Seperate Prescription and Diagnosis Tables\n\nconst styles = theme => ({\n    icon: {\n      margin: theme.spacing.unit,\n      fontSize: 32,\n    },\n    root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n      },\n      table: {\n        minWidth: 800,\n      },\n});\n\nclass ShowDiagnosis extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            openForm: false,\n            Diagnosis: [],\n        };\n    }\n    componentDidMount(){\n        this.uploadDiagnosis();\n    }\n    uploadDiagnosis(){\n        fetch(`http://162.243.165.50:4000/Diagnosis/${this.props.AppID}`)\n        .then(result => result.json())\n        .then(Response => this.setState({ Diagnosis: Response.data }))\n        .catch(err => console.log(err))\n    }\n    handleClickOpen = () => {\n        this.uploadDiagnosis();\n        this.setState({ openForm: true });\n    };\n\n    handleClose = () => {\n        this.setState({ openForm: false });\n    };\n\n    render(){\n        const {classes}=this.props;\n        return(\n            <div>\n                <Button variant=\"contained\" color=\"inherit\" className={this.props.Button} fullWidth onClick={this.handleClickOpen}>\n                    Show Diagnosis\n                </Button>\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\n                    <DialogTitle id=\"form-dialog-title\">Here are the Doctor's Diagnoses</DialogTitle>\n                    <DialogContent>\n                        {this.state.Diagnosis.length>=1 ? (\n                            <div>\n                                <DialogContentText>\n                                    These are the Diagnoses Assosciated with your Appointment\n                                </DialogContentText>\n                                <Table className={classes.table}>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>Diagnosis</TableCell>\n                                            <TableCell align=\"right\">DiagnosisID</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {this.state.Diagnosis.map(Each => (\n                                            <TableRow key={Each.DiagnosisID}>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                {Each.Diagnosis}\n                                            </TableCell>\n                                            <TableCell align=\"right\">{Each.DiagnosisID}</TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </div>\n                        ):(\n                            <DialogContentText>\n                                There are no Diagnoses Assosciated with your Appointment\n                            </DialogContentText>\n                        )}\n                        \n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n    \n}\n\nShowDiagnosis.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  export default withStyles(styles)(ShowDiagnosis);\n                 ","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n\n//Seperate Prescription and Diagnosis Tables\n\nconst styles = theme => ({\n    icon: {\n      margin: theme.spacing.unit,\n      fontSize: 32,\n    },\n    root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n      },\n      table: {\n        minWidth: 800,\n      },\n});\n\nclass ShowPrescriptions extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            openForm: false,\n            Prescriptions: [],\n        };\n    }\n    componentDidMount(){\n        this.uploadPrescriptions();\n    }\n    uploadPrescriptions(){\n        fetch(`http://162.243.165.50:4000/Prescriptions/${this.props.AppID}`)\n        .then(result => result.json())\n        .then(Response => this.setState({ Prescriptions: Response.data }))\n        .catch(err => console.log(err))\n    }\n    handleClickOpen = () => {\n        this.setState({ openForm: true });\n        this.uploadPrescriptions();\n    };\n\n    handleClose = () => {\n        this.setState({ openForm: false });\n    };\n\n    render(){\n        const {classes}=this.props;\n        return(\n            <div>\n                <Button variant=\"contained\" color=\"inherit\" className={this.props.Button} fullWidth onClick={this.handleClickOpen}>\n                    Show Prescriptions\n                </Button>\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\n                    <DialogTitle id=\"form-dialog-title\">Here are your issued Prescriptions</DialogTitle>\n                    <DialogContent>\n                        {this.state.Prescriptions.length>=1 ? (\n                            <div>\n                                 <DialogContentText>\n                                    These are the Prescriptions Assosciated with your Appointment\n                                </DialogContentText>\n                                <Table className={classes.table}>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>Prescription Issue ID</TableCell>\n                                            <TableCell align=\"right\">Refills</TableCell>\n                                            <TableCell align=\"right\">Due Date</TableCell>\n                                            <TableCell align=\"right\">Medicine</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {this.state.Prescriptions.map(Each => (\n                                            <TableRow key={Each.PrescriptionIssueID}>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                {Each.PrescriptionIssueID}\n                                            </TableCell>\n                                            <TableCell align=\"right\">{Each.RefillLeft}</TableCell>\n                                            <TableCell align=\"right\">{Each.DueDate.substr(0,10)}</TableCell>\n                                            <TableCell align=\"right\">{Each.Medicine}</TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </div>\n                        ):(\n                            <DialogContentText>\n                                There are no Prescriptions Assosciated with your Appointment\n                            </DialogContentText>\n                        )}\n                       \n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n    \n}\n\nShowPrescriptions.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  export default withStyles(styles)(ShowPrescriptions);\n                 ","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles, TextField, FormControl, MenuItem } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nconst styles = theme => ({\n    icon: {\n      margin: theme.spacing.unit,\n      fontSize: 32,\n    },\n});\n\nclass AddPrescription extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            AppointmentID: this.props.AppID,\n            PrescriptionID: \"\",\n            Refills:\"\",\n            MedicineTypes: [],\n            DueDate: null,\n            DBDueDate: null,\n            openForm: false,\n        };\n    }\n\n    componentDidMount = () => {\n        this.uploadMedicineTypes()\n    };\n\n    uploadMedicineTypes(){\n        fetch(`http://162.243.165.50:4000/AllMedicines/`)\n        .then(result => result.json())\n        .then(Response => this.setState({ MedicineTypes:Response.data}))\n        .catch(err => console.log(err));\n    }\n\n    handleSubmit= () =>{\n        this.setState({openForm:false});\n        fetch(`http://162.243.165.50:4000/AddPrescription`, {\n            method:\"POST\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n            },\n            body: JSON.stringify({\n                AppointmentID: this.state.AppointmentID,\n                PrescriptionID:   this.state.PrescriptionID,\n                DueDate:  this.state.DBDueDate,\n                Refills:     this.state.Refills,\n            })\n        })\n        .catch(err => console.log(err));\n    };\n    handleClickOpen = () => {\n        this.setState({ \n            openForm: true,\n            AppointmentID: this.props.AppID,\n            PrescriptionID: \"\",\n            Refills:\"\",\n            DueDate: null,\n            DBDueDate: null, \n        });\n    };\n\n    handleClose = () => {\n        this.setState({ openForm: false });\n    };\n\n    DueDateChange = (d) =>{\n        let DueDate=new Date(d)\n        DueDate = this.FormatDate(DueDate);\n        \n        this.setState({DBDueDate:DueDate});\n        this.setState({\n            DueDate: d\n        })\n    }\n\n    FormatDate=(date)=>{\n        date = date.getFullYear() + '-' + (this.fixMonth(date)) + '-' + date.getDate();\n        return date;\n    }\n\n    fixMonth=(date)=>{\n        if(date.getMonth() + 1 < 10){\n            return \"0\" +(date.getMonth() +1);\n        }\n        else{\n            return date.getMonth()+1;\n        }\n    }\n\n    handleChange = e =>{\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n    render(){\n        return(\n            <div>\n                <Button variant=\"contained\" color=\"primary\" fullWidth className={this.props.Button} onClick={this.handleClickOpen}>\n                    Add a Prescription\n                </Button>\n                <Dialog open={this.state.openForm} onClose={this.handleClose}>\n                    <DialogTitle id=\"form-dialog-title\">Add A Appointment</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Please fill out the information to add a new Diagnosis\n                        </DialogContentText>\n                        <FormControl margin=\"normal\" fullWidth>\n                            <TextField\n                                id=\"PrescriptionID\"\n                                select\n                                label=\"Please Choose A Prescription\"\n                                name=\"PrescriptionID\"\n                                variant=\"standard\"\n                                onChange={e=>this.handleChange(e)}\n                                value={this.state.PrescriptionID}   \n                                required                   \n                            >\n                            {this.state.MedicineTypes.map(option => (\n                                <MenuItem key={option.PrescriptionID} value={option.PrescriptionID}>\n                                    {option.Medicine}\n                                </MenuItem>\n                            ))}\n                            </TextField>\n                            <TextField \n                                name=\"Refills\"\n                                label=\"Number of Total Refills\" \n                                type=\"number\"\n                                variant=\"standard\"\n                                onChange={this.handleChange}\n                                value={this.state.Refills}\n                            />\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                <DatePicker\n                                    minDate={new Date()}\n                                    label=\"Due Date\"\n                                    name=\"DueDate\"\n                                    value={this.state.DueDate}\n                                    onChange={this.DueDateChange}\n                                />\n                            </MuiPickersUtilsProvider>\n                            <Button onClick={this.handleSubmit} disabled={this.state.Refills=== \"\" || this.state.PrescriptionID=== \"\" || this.state.DBDueDate=== null} color=\"primary\">\n                                Submit\n                            </Button>\n                        </FormControl>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n    \n}\n\nAddPrescription.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  export default withStyles(styles)(AddPrescription);","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles, TextField, MenuItem } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst styles = theme => ({\n    icon: {\n      margin: theme.spacing.unit,\n      fontSize: 32,\n    },\n});\n\nclass AddSpecialistReccomendation extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            AppointmentID: this.props.AppID,\n            Specialist: \"\",\n            Specialists: [],\n            openForm: false,\n        };\n    }\n    componentDidMount(){\n        this.uploadSpecialists()\n    }\n    uploadSpecialists(){\n        fetch(`http://162.243.165.50:4000/AllDoctors`)\n        .then(result => result.json())\n        .then(res => this.setState({ Specialists: res.data }))\n        .catch(err => console.log(err))\n    }\n    handleSpecialistAdd= () =>{\n        this.setState({openForm:false});\n        fetch(`http://162.243.165.50:4000/AddSpecialist`, {\n            method:\"POST\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n            },\n            body: JSON.stringify({\n                AppointmentID: this.state.AppointmentID,\n                Specialist:   this.state.Specialist,\n            })\n        })\n        .then(window.location.replace('/Appointments'))\n        .catch(err => console.log(err));\n    };\n    handleClickOpen = () => {\n        this.setState({ \n            Specialist: \"\",\n            openForm: true \n        });\n    };\n\n    handleClose = () => {\n        this.setState({ openForm: false });\n    };\n\n    handleChange = e =>{\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n    render(){\n        return(\n            <div>\n                <Button variant=\"contained\" color=\"primary\" fullWidth className={this.props.Button} onClick={this.handleClickOpen}>\n                    Add a Specialist Reccomendation\n                </Button>\n                <Dialog open={this.state.openForm} onClose={this.handleClose}>\n                    <DialogTitle id=\"form-dialog-title\">Add A Specialist Reccomendation</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Please select a Doctor (Specialist or General) that you reccomend for the patiet\n                        </DialogContentText>\n                        <FormControl margin=\"normal\" fullWidth>\n                            <TextField\n                                id=\"Specialist\"\n                                select\n                                label=\"Please Choose A Doctor to Reccomend\"\n                                name=\"Specialist\"\n                                variant=\"standard\"\n                                onChange={this.handleChange}\n                                value={this.state.Specialist}   \n                                required                   \n                            >\n                                {this.state.Specialists.map(option => (\n                                    <MenuItem key={option.EmployeeID} value={option.FirstName}>\n                                        Dr.{option.FirstName} {option.LastName}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </FormControl>\n                        <Button onClick={this.handleSpecialistAdd}>\n                            Add Specialist\n                        </Button>\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n    \n}\n\nAddSpecialistReccomendation.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  export default withStyles(styles)(AddSpecialistReccomendation);\n\n\n\n  //Split show and add for Prescription and Diagnosis","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport InfoIcon from '@material-ui/icons/ChromeReaderMode';\nimport { withStyles, Typography } from '@material-ui/core';\nimport {Paper, TextField, Grid,} from '@material-ui/core';\n\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n    icon: {\n      fontSize: 25,\n      color: \"#f5f5f5\",\n      '&:hover': {\n        color: '#e0e0e0',\n      },\n    },\n    dialog: {\n        margin: 'normal',\n    },\n    Button: {\n        marginTop: \".5%\"\n    },\n    root: {\n        width: '100%',\n        backgroundColor: \"#e0e0e0\",\n        padding: theme.spacing.unit*15,\n        height: '100%',\n        margin:\"auto\",\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField:{\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    dense: {\n        marginTop: 19,\n    },\n    menu: {\n        width: 200,\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n});\n\nclass PatientMedicalHistory extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            openForm: false,    \n            editing: false,   \n            allergies: '',\n            immunizationRecord: '',\n            medicalCondition: '',\n            procedureRecord: '',\n        };\n        this.handleChange=this.handleChange.bind(this);\n        this.saveChange=this.saveChange.bind(this);\n    }\n    getMedicalRecord=()=>{\n        fetch(`http://162.243.165.50:4000/GetMedicalHistory/${this.props.PatientID}`)\n        .then(result => result.json())\n        .then(result => \n            {if(result.data.length !== 0){\n                this.setState({\n                    allergies: result.data[0].Allergies,\n                    immunizationRecord: result.data[0].ImmunizationRecord,\n                    medicalCondition: result.data[0].MedicalCondition,\n                    procedureRecord: result.data[0].ProcedureRecord,\n                })\n            }})\n        .catch(err => console.error(err))\n    };\n    updateMedicalRecord(){\n        fetch(`http://162.243.165.50:4000/UpdateMedicalHistory`, {\n          method:\"POST\",\n          headers: {\n            \"Content-Type\":\"application/json\",\n          },\n          body: JSON.stringify({\n            patientID: this.props.PatientID,\n            lastUpdatedBy: window.localStorage.userID,\n            immunizationRecord: this.state.immunizationRecord,\n            allergies: this.state.allergies,\n            procedureRecord: this.state.procedureRecord,\n            medicalCondition: this.state.medicalCondition,\n          })\n        })\n        .then(this.getMedicalRecord())\n        .catch(err => console.log(err))\n    }\n    saveChange(){\n        this.updateMedicalRecord();\n        this.getMedicalRecord();\n        this.setState({\n            editing: false\n        });\n    }\n    handleClickOpen = () => {\n        this.getMedicalRecord();\n        this.setState({openForm:true})\n    };\n    handleClose = () => {\n        this.setState({ \n            openForm: false,    \n            editing: false,   \n            allergies: '',\n            immunizationRecord: '',\n            medicalCondition: '',\n            procedureRecord: '',\n        });\n    };\n    editMode = () => {\n        this.setState({\n          editing: true\n        });\n    }\n    handleChange = e =>{\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n    \n    render(){\n        const {classes}=this.props;\n        return(\n            <div>\n                <Button variant=\"contained\" color=\"inherit\" className={this.props.Button} onClick={this.handleClickOpen} fullWidth >\n                    <InfoIcon/> Patient's Medical History\n                </Button>\n                <Dialog fullScreen className={classes.dialog} open={this.state.openForm} onClose={this.handleClose}>\n                    <Paper className={classes.root} elevation={2}>\n                        <Typography variant=\"h3\" >Patient Medical Record</Typography>\n                        <br />\n                        <Typography variant=\"h4\" >Summary</Typography>\n                        <TextField\n                            label=\"Patient ID\"\n                            margin=\"normal\"\n                            disabled\n                            className={classes.textField}\n                            value={this.props.PatientID}\n                        />\n                        <br/>\n                        <Grid container spacing={24}>\n                            <Grid item sm>\n                                <TextField\n                                    name=\"immunizationRecord\"\n                                    label=\"Immunization Record\"\n                                    className={classes.textField}\n                                    value={this.state.immunizationRecord}\n                                    margin=\"normal\"\n                                    multiline\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    rows=\"8\"\n                                    inputProps={{ maxLength: 45 }}\n                                    disabled={!this.state.editing}\n                                    onChange={this.handleChange}\n                                />\n                            </Grid>\n                            <Grid item sm>\n                                <TextField\n                                    name=\"medicalCondition\"\n                                    label=\"Medical Condition\"\n                                    className={classes.textField}\n                                    value={this.state.medicalCondition}\n                                    margin=\"normal\"\n                                    fullWidth\n                                    multiline\n                                    variant=\"outlined\"\n                                    rows=\"8\"\n                                    inputProps={{ maxLength: 45 }}\n                                    disabled={!this.state.editing}\n                                    onChange={this.handleChange}\n                                />\n                            </Grid>\n                        </Grid>\n                        \n                        <Grid container spacing={24}>\n                            <Grid item sm>\n                                <TextField\n                                    name=\"allergies\"\n                                    label=\"Allergies\"\n                                    className={classes.textField}\n                                    value={this.state.allergies}\n                                    margin=\"normal\"\n                                    multiline\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    rows=\"8\"\n                                    inputProps={{ maxLength: 45 }}\n                                    disabled={!this.state.editing}\n                                    onChange={this.handleChange}\n                                />\n                            </Grid>\n                            <Grid item sm>\n                                <TextField\n                                    name=\"procedureRecord\"\n                                    label=\"Procedures Record\"\n                                    className={classes.textField}\n                                    value={this.state.procedureRecord}\n                                    margin=\"normal\"\n                                    multiline\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    rows=\"8\"\n                                    inputProps={{ maxLength: 100 }}\n                                    disabled={!this.state.editing}\n                                    onChange={this.handleChange}\n                                />\n                            </Grid>\n                        </Grid>\n                            {!this.state.editing ? (\n                                <div>\n                                        <Button variant=\"contained\" fullWidth color=\"primary\" className={classes.button} onClick={this.editMode}> Edit </Button>\n                                </div>\n                            ):(\n                                <div>\n                                    <Button variant=\"contained\" fullWidth color=\"secondary\" className={classes.button} onClick={this.saveChange}> Save </Button>\n                                </div>\n                            )}\n                            <Button variant=\"contained\" fullWidth color=\"primary\" className={classes.button} onClick={this.handleClose}> Close </Button>\n                    </Paper>\n                </Dialog>\n            </div>\n        );\n    }\n    \n}\n\nPatientMedicalHistory.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  export default withStyles(styles)(PatientMedicalHistory);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport NewAppointmentForm from './NewAppointmentForm';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { FormControl, Grid } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport AddDiagnosis from './AddDiagnosis';\nimport ShowDiagnosis from './ShowDiagnosis';\nimport ShowPrescriptions from './ShowPrescriptions';\nimport AddPrescription from './AddPrescription';\nimport AddSpecialistReccomendation from './AddSpecilaistReccomendation';\nimport './AppointmentPage.css';\nimport PatientMedicalHistory from './PatientMedicalHistory';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst styles = theme =>({\n    root: {\n        width: '75%',\n        alignItems: \"center\",\n        display: \"flex\",\n        flexDirection: 'column',\n        padding: theme.spacing.unit*3,\n        margin:\"auto\"\n  \n    },\n    page: {\n        padding: theme.spacing.unit*3,\n        margin:\"auto\"\n  \n    },\n    AdditionButton: {\n        display: \"flex\",\n        flexDirection: 'column',\n        padding: theme.spacing.unit,\n  \n    },\n    Button: {\n        marginTop: '.5%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '19%',\n        flexShrink: 0,\n    },\n    iconHistory: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '3%',\n        flexShrink: 10,\n    },\n    secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n    flexBasis: '100%',\n    margin: 'auto'\n    },\n});\n\n\nclass AppointmentHistory extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            expanded: null,\n            Appointments: [],\n            Diagnosis: [],\n            cancelApptShow: false,\n\t\t\tselectedAppt: \"\",\n\t\t\topenForm: false\n        };\n    }\n    componentDidMount(){\n        this.grabAppointments();\n    }\n    grabAppointments=()=>{\n        //backend call to grab the appointments for the user\n        fetch(`http://162.243.165.50:4000/Appointments/`, {\n            method:\"POST\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n            },\n            body: JSON.stringify({\n                UserType: window.localStorage.userType,\n                UserID: window.localStorage.userID,\n            })\n        })\n        .then(result => result.json())\n        .then(Response => this.setState({ Appointments:Response.data}))\n        .catch(err => console.log(err));\n        \n    }\n    handleChange = panel => (event, expanded) => {\n        this.setState({\n            expanded: expanded ? panel : false,\n        });\n    }\n\n    placeDiagnosis(){\n        this.state.Diagnosis.map(option => (\n            <FormControl>\n                <Typography>Diagnosis: {option.Diagnosis}</Typography>\n                <Typography>Number of Refills:  {option.RefillLeft}</Typography>\n                <Typography>Due Date: {option.DueDate.substr(0,10)}</Typography>\n                <Typography>Medicine: {option.Medicine}</Typography>\n            </FormControl>\n        ))\n    }\n    handleAppointmentCancel = (AppID) => {\n        fetch(`http://162.243.165.50:4000/CancelAppointment/`, {\n            method:\"POST\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n            },\n            body: JSON.stringify({\n                AppointmentID: AppID,\n            })\n        })\n        .then(this.grabAppointments)\n        .catch(err => console.log(err));\n\t\tsetTimeout(function(){\n\t\t\twindow.location.replace('/Appointments')\n\t\t}, 200);\n    };\n\t\n\thandleClickOpenCancellation = (apptID) => {\n\t\tthis.setState({ selectedAppt: apptID });\n        this.setState({ openForm: true });\n    };\n\n    handleCloseCancellation = () => {\n        this.setState({ openForm: false });\n    };\n\t\n    render(){\n        const{classes}=this.props;\n        const { expanded } = this.state;\n        return(\n            <div className={classes.page}>\n                <div className='AppointmentPage-SmallBoxOverLay'>\n                <div className={classes.root}>\n                <h1 className='AppointmentHistory-h1'>Upcoming Appointments</h1>\n                    {this.state.Appointments.map(option => (\n                            <FormControl key={option.idAppointment} fullWidth>\n                                <ExpansionPanel square expanded={expanded === option.idAppointment}  onChange={this.handleChange(option.idAppointment)}>\n                                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                                        <Typography className={classes.heading}>Patient: {option.Patient}</Typography>\n                                        <Typography className={classes.heading}>Doctor: Dr. {option.Doctor}</Typography>\n                                        <Typography className={classes.heading}>Date: {option.AppointmentDate.substr(0,10)}</Typography>\n                                        <Typography className={classes.heading}>Time: {option.AppointmentTime.substr(0,5)}</Typography>\n                                        <Typography className={classes.heading}>Status: {option.currentStatus}</Typography>\n                                    </ExpansionPanelSummary>\n                                    <ExpansionPanelDetails>\n                                        <Typography className={classes.secondaryHeading}>\n                                            Reason:{option.Reason === \"null\" ? (<text> No Reason Specified</text>):(<text>{option.Reason}</text>)} <br/>\n                                            AppointmentID: {option.idAppointment} <br/>\n                                            Facility: {option.FacilityName} <br/>\n                                            Address: {option.Street}, {option.City}, {option.State} {option.ZipCode}<br/>\n                                            Doctor Reccomentation: {option.Specialist === null || option.Specialist === \"\" ? (<text>No Doctor Reccomendations</text>):(<text>Dr. {option.Specialist}</text>)}<br/>\n                                            {(window.localStorage.userType !== \"2\" &&  window.localStorage.userType !== \"3\")? (\n                                                <Grid container spacing={8}>\n                                                    <Grid item xs={12} sm={4}>  \n                                                        <AddDiagnosis Button={classes.Button} AppID={option.idAppointment}/>\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={4}>\n                                                        <AddSpecialistReccomendation  Button={classes.Button} AppID={option.idAppointment}/>\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={4}>  \n                                                        <AddPrescription Button={classes.Button} AppID={option.idAppointment}/>\n                                                    </Grid>\n                                                </Grid>\n                                            ):(\n                                                <div>\n                                                </div>\n                                            )}\n                                            {window.localStorage.userType !==\"2\" ? (\n                                                <Grid container spacing={8}>\n                                                    <Grid item xs={12} sm={4}>\n                                                        <ShowDiagnosis  Button={classes.Button} AppID={option.idAppointment}/>\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={4}>\n                                                        <PatientMedicalHistory Button={classes.Button} PatientID={option.PatientID}/>\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={4}>\n                                                        <ShowPrescriptions  Button={classes.Button} AppID={option.idAppointment}/>\n                                                    </Grid>\n                                                </Grid>\n                                            ):(\n                                                <Grid container spacing={8}>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <ShowDiagnosis  Button={classes.Button} AppID={option.idAppointment}/>\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <ShowPrescriptions  Button={classes.Button} AppID={option.idAppointment}/>\n                                                    </Grid>\n                                                </Grid>\n                                            )}\n                                            \n                                            {window.localStorage.userType === \"3\" ? (\n                                                    <Grid container spacing={8}>\n                                                        <Grid item xs={12} sm={6}>  \n                                                            <NewAppointmentForm PatientID={option.PatientID}/>                                                        \n                                                        </Grid>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <Button variant=\"raised\" fullWidth  className={classes.Button} color=\"secondary\"  onClick={() =>  this.handleClickOpenCancellation(option.idAppointment) } marginTop=\"10%\">\n                                                                Cancel Appointment\n                                                            </Button>  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleCloseCancellation}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogTitle id=\"form-dialog-title\"></DialogTitle>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogContentText>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAre you sure you want to cancel appointment {this.state.selectedAppt}?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DialogContentText>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button className={classes.Button} onClick={this.handleCloseCancellation} color=\"primary\" variant=\"contained\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNo\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button className={classes.Button} onClick={() => this.handleAppointmentCancel(this.state.selectedAppt)} color=\"secondary\" variant=\"contained\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tYes\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n                                                        </Grid>\n                                                    </Grid>\n                                            ):(\n                                                <div></div>\n                                            )}\n                                            \n                                            {window.localStorage.userType === \"2\" ? (\n                                                <div>\n                                                    <Button variant=\"raised\" fullWidth  className={classes.Button} color=\"secondary\"  onClick={() =>  this.handleClickOpenCancellation(option.idAppointment) } marginTop=\"10%\">\n                                                        Cancel Appointment\n                                                    </Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleCloseCancellation}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogTitle id=\"form-dialog-title\"></DialogTitle>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogContentText>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAre you sure you want to cancel appointment {this.state.selectedAppt}?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DialogContentText>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button className={classes.Button} onClick={this.handleCloseCancellation} color=\"primary\" variant=\"contained\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNo\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button className={classes.Button} onClick={() => this.handleAppointmentCancel(this.state.selectedAppt)} color=\"secondary\" variant=\"contained\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tYes\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n                                                </div>\n                                                \n                                            ):(\n                                                <div></div>\n                                            )}\n\n                                            \n                                            \n                                        </Typography>\n                                        \n                                    </ExpansionPanelDetails>\n                                </ExpansionPanel>\n                            </FormControl>\n                            \n                    ))}\n                    {window.localStorage.userType === \"2\" ? (\n                        <div className={classes.AdditionButton}>\n                            <NewAppointmentForm PatientID={window.localStorage.userID}/>\n                        </div>\n                    ):(\n                        <div></div>\n                    )}\n                    \n                    \n                </div>\n                </div>\n            </div>\n        );\n    }\n    \n}\n\nAppointmentHistory.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  \nexport default withStyles(styles)(AppointmentHistory);\n","import React, { Component } from 'react';\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\nimport AppointmentHistory from '../Components/Appointments/AppointmentHistory';\nimport '../Components/Appointments/AppointmentPage.css';\n\nclass Appointments extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n        firstName: \"\",\n        Facilities: []\n    };\n  }\n  componentDidMount(){\n    this.FirstName();\n  }\n\n  FirstName(){\n    if(window.localStorage.userType === \"2\"){\n      fetch(`http://162.243.165.50:4000/Patient/${window.localStorage.LoginTableID}`)\n      .then(result => result.json())\n      .then(res => {\n          this.setState(  { firstName: res.data[0].FirstName  } )\n        })\n      .catch(err => console.log(err))\n    }\n  \n    else{\n      fetch(`http://162.243.165.50:4000/Employee/${window.localStorage.LoginTableID}`)\n      .then(result => result.json())\n      .then(res => {this.setState(  { firstName: res.data[0].FirstName  } )})\n      .catch(err => console.log(err))\n    }\n  }\n\n  \n  render() {\n    return (\n      <div className='AppointmentPage-image'>\n        <div className='AppointmentPage-overlay'>\n          <NavigationBar title={'Welcome, '+this.state.firstName} Tab={0}/>\n          <AppointmentHistory val={this.state}/>\n        </div>\n      </div>\n        \n    );\n  }\n}\n\nexport default Appointments;\n","import { TextField,  MenuItem, Typography } from \"@material-ui/core\";\nimport React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport {Input, InputLabel} from '@material-ui/core';  \n\n\nfunction validateUsername(){\n    return true;\n};\nfunction validatePassword(props){\n    if(props.val.password.length >=6 || props.val.password.length <=1 ){\n        return true;\n    }\n    return false;\n};\nfunction BasicInformation(props){\n    \n    return(\n        <div>\n             <Typography>Registration Information</Typography>\n                <FormControl margin=\"normal\" fullWidth required>\n                    <InputLabel htmlFor=\"FirstName\">First Name</InputLabel>\n                    <Input name=\"FirstName\" autoFocus value={props.val.FirstName} onChange={props.handleChange}></Input>\n                </FormControl>\n                <FormControl margin=\"auto\" fullWidth required>\n                    <InputLabel htmlFor=\"LastName\">Last Name</InputLabel>\n                    <Input name=\"LastName\" value={props.val.LastName} onChange={props.handleChange}></Input>\n                </FormControl>\n                <FormControl margin=\"normal\" fullWidth>\n                    <TextField \n                        required\n                        name=\"username\" \n                        label=\"Username\" \n                        variant=\"standard\"\n                        onChange={props.handleChange}\n                        value={props.val.username}\n                        error={!validateUsername()}\n                        helperText={validateUsername() ? \"\":\"Username is not valid\"}\n                    />\n                </FormControl>\n                <FormControl margin=\"auto\" fullWidth required>\n                    <TextField \n                        name=\"password\"\n                        type=\"password\" \n                        label=\"Password\" \n                        variant=\"standard\"\n                        error={!validatePassword(props)}\n                        onChange={props.handleChange}\n                        value={props.val.password}\n                        required\n                    />\n                </FormControl>\n                {(window.localStorage.userType === \"3\") ? (\n                    <FormControl margin=\"auto\" fullWidth>\n                        <TextField\n                            id=\"userType\"\n                            select\n                            label=\"Type of User\"\n                            name=\"userType\"\n                            variant=\"standard\"\n                            onChange={props.handleChange}\n                            value={props.val.userType}   \n                            required                   \n                        >\n                            {props.val.roles.map(option => (\n                                <MenuItem key={option.RoleID} value={option.RoleID}>\n                                    {option.RoleTitle}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    </FormControl>\n                ):(\n                    <div></div>\n                )}\n                    \n                <FormControl margin=\"auto\" fullWidth required>\n                    <TextField \n                        name=\"Email\" \n                        label=\"Email\" \n                        variant=\"standard\"\n                        type=\"email\"\n                        onChange={props.handleChange}\n                        value={props.val.Email}\n                        required\n                    />\n                </FormControl>\n        </div>\n    );\n}\n\nexport default BasicInformation;","import {  TextField, MenuItem, Typography, Grid, Input, InputLabel } from \"@material-ui/core\";\nimport React from 'react';\nimport FormControl from '@material-ui/core/FormControl';  \nimport MaskedInput from 'react-text-mask';\nimport PropTypes from 'prop-types'; \n\n\nfunction TextMaskCustom(props) {\n    const {...other } = props;\n  \n    return (\n      <MaskedInput\n        {...other}\n        guide={false}\n        mask={[/[1-9]/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n        placeholderChar={'\\u2000'}\n        showMask\n      />\n    );\n}\n\nTextMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n};\nfunction DateMaskCustom(props) {\n    const {...other } = props;\n  \n    return (\n      <MaskedInput\n        guide={false}\n        {...other}\n        mask={[/\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/,'-', /\\d/, /\\d/]}\n        placeholderChar={'\\u2000'}\n        showMask\n      />\n    );\n}\n\nfunction SSNMaskCustom(props) {\n    const {...other } = props;\n\n  \n    return (\n      <MaskedInput\n        guide={false}\n        {...other}\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n        placeholderChar={'\\u2000'}\n        showMask\n      />\n    );\n}\n\nfunction BasicInformationPtTwo(props){\n    \n    return(\n        <div>\n            <Typography>Personal Information</Typography>\n            <FormControl margin=\"auto\" fullWidth required>\n                <InputLabel htmlFor=\"AddressStreet\">Street Address</InputLabel>\n                <Input name=\"AddressStreet\" autoFocus value={props.val.AddressStreet} onChange={props.handleChange}></Input>\n            </FormControl>\n            <Grid container spacing={8}>\n                <Grid item xs={12} sm={5}>\n                    <FormControl margin=\"normal\" fullWidth required>\n                        <InputLabel htmlFor=\"AddressCity\">City</InputLabel>\n                        <Input name=\"AddressCity\" autoFocus value={props.val.AddressCity} onChange={props.handleChange}></Input>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={2}>\n                    <FormControl margin=\"normal\" fullWidth>\n                        <TextField\n                            id=\"State\"\n                            select\n                            label=\"State\"\n                            name=\"AddressState\"\n                            variant=\"standard\"\n                            onChange={props.handleChange}\n                            value={props.val.AddressState}   \n                            required                   \n                        >\n                            {props.val.states.map(option => (\n                                <MenuItem key={option.StateID} value={option.StateID}>\n                                    {option.StateString}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={5}>\n                    <FormControl margin=\"normal\" fullWidth required>\n                        <InputLabel htmlFor=\"AddressZip\">Zip Code</InputLabel>\n                        <Input name=\"AddressZip\" autoFocus value={props.val.AddressZip} onChange={props.handleChange}></Input>\n                    </FormControl>\n                </Grid>\n            </Grid>\n            <FormControl margin=\"normal\" fullWidth required>\n                <InputLabel htmlFor=\"DateOfBirth\">Date Of Birth</InputLabel>\n                <Input name=\"DateOfBirth\" placeholder=\"YYYY-MM-DD\" value={props.val.DateOfBirth}  inputComponent={DateMaskCustom} onChange={props.handleChange}></Input>\n            </FormControl>\n            <FormControl margin=\"auto\" fullWidth>\n                <TextField\n                    id=\"Sex\"\n                    select\n                    label=\"Gender\"\n                    name=\"Sex\"\n                    variant=\"standard\"\n                    onChange={props.handleChange}\n                    value={props.val.Sex}   \n                    required                   \n                >\n                    {props.val.sexes.map(option => (\n                        <MenuItem key={option.SexID} value={option.SexID}>\n                            {option.Gender}\n                        </MenuItem>\n                    ))}\n                </TextField>\n            </FormControl>\n            <FormControl margin=\"auto\" fullWidth>\n                <TextField\n                    id=\"Race\"\n                    select\n                    label=\"Race\"\n                    name=\"raceID\"\n                    variant=\"standard\"\n                    onChange={props.handleChange}\n                    value={props.val.raceID}   \n                    required                   \n                >\n                    {props.val.races.map(option => (\n                        <MenuItem key={option.RaceID} value={option.RaceID}>\n                            {option.Race}\n                        </MenuItem>\n                    ))}\n                </TextField>\n            </FormControl>\n            <FormControl margin=\"normal\" fullWidth required>\n                <InputLabel htmlFor=\"SSN\">Social Security</InputLabel>\n                <Input name=\"SSN\" placeholder=\"XXX-XX-XXXX\" inputComponent={SSNMaskCustom} value={props.val.SSN} onChange={props.handleChange}></Input>\n            </FormControl>\n            <FormControl margin=\"normal\" required>\n                <InputLabel htmlFor=\"CellNuber\">Contact Number</InputLabel>\n                <Input\n                    onChange={props.handleChange}\n                    name=\"CellNumber\"\n                    id=\"Contact Number\"\n                    value={props.val.CellNumber}\n                    inputComponent={TextMaskCustom}\n                />\n            </FormControl>\n            \n                \n        </div>\n    );\n}\n\nexport default BasicInformationPtTwo;","import { Paper, Typography } from \"@material-ui/core\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport HomeLogo  from '@material-ui/icons/Home';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControl from '@material-ui/core/FormControl';\nimport {Button} from '@material-ui/core';    \nimport BasicInformation from '../Registration/BasicInformation';\nimport BasicInformationPtTwo from '../Registration/BasicInformationPtTwo';\n\n\nconst styles = theme => ({\n    paperForm: {\n        width: '25%',\n        marginLeft: '7%',\n        marginTop: '-15%',\n        padding: theme.spacing.unit*2,\n        flexDirection: 'column',\n        backgroundColor: \"#e0e0e0\",\n    },\n    icon: {\n        margin: theme.spacing.unit,\n        fontSize: \"150%\",\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap'\n    },\n    TextField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        margin: theme.spacing.unit*2,\n    },\n    middleInitial: {\n        width:\"15%\",\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        margin: theme.spacing.unit*2\n    },\n    heading: {\n        margin: theme.spacing.unit,\n        marginLeft: \"70%\",\n        marginTop: \"10%\",\n        color: \"white\",\n    },\n});\n\nclass RegistrationForm extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            FirstName: \"\",\n            LastName: \"\",\n            Sex: \"\",\n            Email:\"\",\n            username: \"\",\n            password: \"\",\n            CellNumber: \"\",\n            AddressStreet: \"\",\n            AddressCity:\"\",\n            AddressState: \"\",\n            AddressZip: \"\",\n            DateOfBirth:\"\",\n            SSN: \"\",\n            userType: \"\",\n            registrationStep: 0,\n            raceID: \"\",\n            states:[],\n            sexes:[],\n            roles:[],\n            races:[],\n\n        };\n        this.handleChange=this.handleChange.bind(this);\n    }\n    EmptyEntries(){\n        return  this.state.FirstName === \"\"||\n                this.state.LastName === \"\" ||\n                this.state.Sex === \"\" ||\n                this.state.Email === \"\" ||\n                this.state.username === \"\" ||\n                this.state.password === \"\" ||\n                this.state.CellNumber === \"\" ||\n                this.state.AddressStreet === \"\" ||\n                this.state.AddressCity === \"\" ||\n                this.state.AddressState === \"\" ||\n                this.state.AddressZip === \"\" ||\n                this.state.DateOfBirth !== 10 ||\n                this.state.SSN.length !== 11 ||\n                this.state.registrationStep === 0\n    }\n    componentDidMount(){\n        this.uploadStates();\n        this.uploadSexes();\n        this.uploadRoles();\n        this.uploadRaces();\n    }\n    handleChange = e =>{\n        console.log(this.state.userType)\n        if(window.localStorage.loggedIn !== \"true\"){\n            this.setState({ userType:2})\n        }\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n    registerUser=()=>{\n        //backend call to add the user to the backend\n        fetch(`http://162.243.165.50:4000/RegisterUser`, {\n            method:\"POST\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n            },\n            body: JSON.stringify({\n                FirstName: this.state.FirstName,\n                LastName: this.state.LastName,\n                Sex: this.state.Sex,\n                Email: this.state.Email,\n                username: this.state.username,\n                password: this.state.password,\n                CellNumber: this.state.CellNumber,\n                AddressStreet: this.state.AddressStreet,\n                AddressCity: this.state.AddressCity,\n                AddressState: this.state.AddressState,\n                AddressZip: this.state.AddressZip,\n                DateOfBirth: this.state.DateOfBirth,\n                SSN: this.state.SSN,\n                userType:this.state.userType,\n                raceID: this.state.raceID\n            })\n        })\n        .then(console.log('done'))\n        .catch(err => console.log(err))\n        setTimeout(function(){\n\t\t\tif(window.localStorage.loggedIn === \"true\"){\n                window.location.replace('/Appointments')\n            }\n            else{\n                window.location.replace('/')\n            }\n\t\t}, 200);\n        \n    }\n    homeRedirect = () =>{\n        if(window.localStorage.loggedIn === \"true\"){\n            window.location.replace('/Appointments')\n        }\n        else{\n            window.location.replace('/')\n        }\n        \n    }\n    \n    stepNext=()=>{\n        this.setState(state => ({\n            registrationStep:state.registrationStep+1\n        }))\n    }\n\n    uploadStates=()=> {\n        fetch(`http://162.243.165.50:4000/states`)\n        .then(result => result.json())\n        .then(Response => this.setState({ states:Response.data }))\n        .catch(err => console.log(err))\n    }\n    uploadSexes=()=> {\n        fetch(`http://162.243.165.50:4000/sexes`)\n        .then(result => result.json())\n        .then(Response => this.setState({ sexes:Response.data }))\n        .catch(err => console.log(err))\n    }\n    uploadRoles=()=> {\n        fetch(`http://162.243.165.50:4000/roles`)\n        .then(result => result.json())\n        .then(Response => this.setState({ roles:Response.data }))\n        .catch(err => console.log(err))\n    }\n    uploadRaces=()=> {\n        fetch(`http://162.243.165.50:4000/races`)\n        .then(result => result.json())\n        .then(Response => this.setState({ races:Response.data }))\n        .catch(err => console.log(err))\n    }\n    render(){\n        const {classes}=this.props;\n        return(\n            <div>\n                <IconButton onClick={this.homeRedirect}>\n                    <HomeLogo style={{color: \"#212121\"}} className={classes.icon} />\n                </IconButton>\n                <Typography variant=\"h3\" className={classes.heading}>Medical Center Registration</Typography>\n                <Paper elevation={10} className={classes.paperForm}>\n                    {this.state.registrationStep===0 ? (\n                        <div>\n                            <BasicInformation handleChange={this.handleChange} val={this.state}/>\n                            <FormControl margin=\"normal\" fullWidth >\n                                <Button onClick={this.stepNext}>\n                                    Next\n                                </Button>\n                            </FormControl>\n                        </div>\n                    ):(\n                        <div>\n                            <BasicInformationPtTwo handleChange={this.handleChange} val={this.state}/>\n                            <FormControl margin=\"normal\" fullWidth >\n                                <Button disabled={!this.EmptyEntries()} onClick={this.registerUser}>\n                                    Register\n                                </Button>\n                            </FormControl>\n                        </div>\n\n                    )}\n                    \n                </Paper>\n            </div>\n        );\n    }\n    \n}\n\nRegistrationForm.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n  \n  export default withStyles(styles)(RegistrationForm);","import React from 'react';\nimport RegistrationForm from '../Components/Registration/RegistrationForm';\nimport './Home.css';\n\nclass Registration extends React.Component{\n    render() {\n        return(\n            <div className='Home-image'>\n                <div className='Home-overlay'>\n                    <RegistrationForm/>\n                </div>\n            </div>\n            \n        );\n    }\n}\n\n\n\nexport default Registration;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport {Paper, Typography, TextField, Divider, Grid} from '@material-ui/core';\n\n\n\n//Define the looks\nconst styles = theme => ({\n  root: {\n    width: '75%',\n    backgroundColor: \"white\",\n    padding: theme.spacing.unit*3,\n    height: '98%',\n    margin:\"auto\",\n    marginTop: '2%',\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField:{\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  dense: {\n    marginTop: 19,\n  },\n  menu: {\n    width: 200,\n  },\n  button: {\n    margin: theme.spacing.unit,\n  },\n});\n\n\nclass MedicalInformation extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      patientID: '',\n      editImmunizationRecord: '',\n      editMedicalCondition: '',\n      editAllergies: '',\n      editProcedureRecord: '',\n\n    };\n  }\n\ncomponentDidMount(){\n  this.getMedicalRecord();\n};\n\ngetMedicalRecord=()=>{\n  fetch(`http://162.243.165.50:4000/GetMedicalHistory/${window.localStorage.userID}`)\n  .then(result => result.json())\n  .then(res => this.setState({\n    patientID: res.data[0].PatientID,\n    editImmunizationRecord: res.data[0].ImmunizationRecord,\n    editMedicalCondition: res.data[0].MedicalCondition,\n    editAllergies: res.data[0].Allergies,\n    editProcedureRecord: res.data[0].ProcedureRecord\n  }))\n  .catch(err => console.error(err))\n};\n\n  render() {\n    const {classes} = this.props;\n    return (\n      <div>\n          <Paper className={classes.root} elevation={2}>\n              <Typography variant=\"h3\" >Patient Medical Record</Typography>\n              <br />\n              <Typography variant=\"h4\" >Summary</Typography>\n              <TextField\n                label=\"Patient ID\"\n                margin=\"normal\"\n                className={classes.textField}\n                value={this.state.patientID}\n                disabled\n                onChange={this.handleChange}\n              />\n              <br/>\n              <Grid container spacing={24}>\n                <Grid item sm>\n                <TextField\n                  label=\"Immunization Record\"\n                  className={classes.textField}\n                  value={this.state.editImmunizationRecord}\n                  margine=\"normal\"\n                  multiline\n                  variant=\"outlined\"\n                  fullWidth\n                  rows=\"8\"\n                  disabled\n                  onChange={this.handleChangeImmunizationRecord}\n                />\n              </Grid>\n                <Grid item sm>\n                  <TextField\n                  label=\"Medical Condition\"\n                  className={classes.textField}\n                  value={this.state.editMedicalCondition}\n                  margine=\"normal\"\n                  multiline\n                  variant=\"outlined\"\n                  fullWidth\n                  rows=\"8\"\n                  disabled\n                  onChange={this.handleChangeMedicalCondition}\n                  />\n                </Grid>\n              </Grid>\n              \n              <Grid container spacing={24}>\n                <Grid item sm>\n                <TextField\n                  label=\"Allergies\"\n                  className={classes.textField}\n                  value={this.state.editAllergies}\n                  margine=\"normal\"\n                  multiline\n                  variant=\"outlined\"\n                  fullWidth\n                  rows=\"8\"\n                  disabled\n                  onChange={this.handleChangeAllergies}\n                />\n              </Grid>\n                <Grid item sm>\n                  <TextField\n                  label=\"Procedures Record\"\n                  className={classes.textField}\n                  value={this.state.editProcedureRecord}\n                  margine=\"normal\"\n                  multiline\n                  variant=\"outlined\"\n                  fullWidth\n                  rows=\"8\"\n                  disabled\n                  onChange={this.handleChangeProcedureRecord}\n                  />\n                </Grid>\n              </Grid>\n              <Divider variant=\"middle\"/>\n          </Paper>\n      </div>\n    );\n  }\n}\n\nMedicalInformation.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MedicalInformation);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Paper, Divider, Button, TextField, Typography, FormControl, withStyles, Grid } from \"@material-ui/core\";\nimport MaskedInput from 'react-text-mask';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst styles = theme => ({\n\tpaperForm: {\n\t\twidth: '75%',\n        display: \"flex\",\n        backgroundColor: \"white\",\n\t\tpadding: theme.spacing.unit*3,\n\t\theight: '98%',\n\t\tmargin:\"auto\",\n\t\tmarginTop: '2%',\n\t},\n  \tcontainer: {\n\t\tdisplay: 'flex',\n    \tflexDirection: 'column',\n  \t},\n\t  editerButtons: {\n\t\tmargin: theme.spacing.unit,\n\t\tfontSize: 16,\n\t},\n});\n\n\nclass ProfileInfo extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n        this.state = {\n            first: \"\",\n            last: \"\",\n            user: \"\",\n\t\t\tpass: \"\",\n\t\t\temail:\"\",\n\t\t\tcellnumber: \"\",\n            streetaddr: \"\",\n            cityaddr:\"\",\n            stateaddr: \"\",\n            zipaddr: \"\",\n            dob:\"\",\n\t\t\tssn: \"\",\n\t\t\tsex: \"\",\n\t\t\tinsuranceID: 0,\n\t\t\tediting: false\n\t\t};\n\t\tthis.handleChange=this.handleChange.bind(this);\n\t}\n\tretrieveUserInfo=()=> {\n\t\tif(window.localStorage.userType === \"2\"){\n\t\t\tfetch(`http://162.243.165.50:4000/Patient/${window.localStorage.LoginTableID}`)\n\t\t\t.then(result => result.json())\n\t\t\t.then(res => this.setState( {\tfirst: res.data[0].FirstName,\n\t\t\t\t\t\t\t\t\t\t\tlast: res.data[0].LastName,\n\t\t\t\t\t\t\t\t\t\t\tuser: res.data[0].Username, \n\t\t\t\t\t\t\t\t\t\t\tpass: res.data[0].Password, \n\t\t\t\t\t\t\t\t\t\t\temail: res.data[0].Email,\n\t\t\t\t\t\t\t\t\t\t\tinsuranceID: res.data[0].InsuranceClientID,\n\t\t\t\t\t\t\t\t\t\t\tdob: res.data[0].DOB,\n\t\t\t\t\t\t\t\t\t\t\tssn: res.data[0].SSN, \n\t\t\t\t\t\t\t\t\t\t\tsex: res.data[0].SexID, \n\t\t\t\t\t\t\t\t\t\t\tcellnumber: res.data[0].CellNumber,\n\t\t\t\t\t\t\t\t\t\t\tstreetaddr:res.data[0].AddressStreet,\n\t\t\t\t\t\t\t\t\t\t\tcityaddr: res.data[0].AddressCity,\n\t\t\t\t\t\t\t\t\t\t\tstateaddr: res.data[0].AddressStateID,\n\t\t\t\t\t\t\t\t\t\t\tzipaddr: res.data[0].AddressZip}))\n\t\t\t.catch(err => console.log(err));\n\t    }\n\t    else{\n\t\t\tfetch(`http://162.243.165.50:4000/Employee/${window.localStorage.LoginTableID}`)\n\t\t\t.then(result => result.json())\n\t\t\t.then(res => this.setState( {\tfirst: res.data[0].FirstName,\n\t\t\t\t\t\t\t\t\t\t\tlast: res.data[0].LastName,\n\t\t\t\t\t\t\t\t\t\t\tuser: res.data[0].Username, \n\t\t\t\t\t\t\t\t\t\t\tpass: res.data[0].Password, \n\t\t\t\t\t\t\t\t\t\t\temail: res.data[0].Email,\n\t\t\t\t\t\t\t\t\t\t\tdob: res.data[0].DOB,\n               \t\t\t\t\t\t\t\tssn: res.data[0].SSN,\n\t\t\t\t\t\t\t\t\t\t\tsex: res.data[0].SexID, \n\t\t\t\t\t\t\t\t\t\t\tcellnumber: res.data[0].CellNumber,\n\t\t\t\t\t\t\t\t\t\t\tstreetaddr:res.data[0].AddressStreet,\n\t\t\t\t\t\t\t\t\t\t\tcityaddr: res.data[0].AddressCity,\n\t\t\t\t\t\t\t\t\t\t\tstateaddr: res.data[0].AddressStateID,\n\t\t\t\t\t\t\t\t\t\t\tzipaddr: res.data[0].AddressZip}))\n\t\t\t.catch(err => console.log(err))\n\t    }\n\t}\n\tupdateUserInfo=()=>{\n        //backend call to add the user to the backend\n        fetch(`http://162.243.165.50:4000/UpdateUser`, {\n            method:\"POST\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n            },\n            body: JSON.stringify({\n\t\t\t\tUserID: window.localStorage.userID,\n\t\t\t\tInsuranceID: this.state.insuranceID,\n                FirstName:this.state.first,\n                LastName:this.state.last,\n                Sex: this.state.sex,\n                Email: this.state.email,\n                username: this.state.user,\n                password: this.state.pass,\n                CellNumber: this.state.cellnumber,\n                AddressStreet: this.state.streetaddr,\n                AddressCity: this.state.cityaddr,\n                AddressState: this.state.stateaddr,\n                AddressZip: this.state.zipaddr,\n                userType: window.localStorage.userType,\n                LoginTableID: window.localStorage.LoginTableID,\n            })\n\t\t})\n        .catch(err => console.log(err))\n        \n    }\n\tEmptyEntries(){\n        return  this.state.first === \"\"||\n                this.state.last === \"\" ||\n                this.state.sex === \"\" ||\n                this.state.email === \"\" ||\n                this.state.usern === \"\" ||\n                this.state.pass === \"\" ||\n                this.state.cellnumber === \"\" ||\n                this.state.streetaddr=== \"\" ||\n                this.state.cityaddr === \"\" ||\n                this.state.stateaddr === \"\" ||\n\t\t\t\tthis.state.zipaddr === \"\" ||\n\t\t\t\tthis.state.dob.length !== 10 ||\n                this.state.ssn.length !== 11 \n    }\n\tvalidateUsername(){\n\t\tif(this.state.user.length >=6 || this.state.user.length <=1 ){\n        \treturn true\n    \t}\n    \treturn false\n\t}\n\tvalidatePassword(){\n    \tif(this.state.pass.length >=6 || this.state.pass.length <=1 ){\n        \treturn true\n    \t}\n    \treturn false\n\t}\n\tSSNMaskCustom(props) {\n\t\tconst {...other } = props;\n\t\treturn (\n\t\t  <MaskedInput\n\t\t\tguide={false}\n\t\t\t{...other}\n\t\t\tmask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n\t\t\tplaceholderChar={'\\u2000'}\n\t\t\tshowMask\n\t\t  />\n\t\t);\n\t}\n\tPhoneMaskCustom(props) {\n\t\tconst {...other } = props;\n\t  \n\t\treturn (\n\t\t  <MaskedInput\n\t\t\t{...other}\n\t\t\tguide={false}\n\t\t\tmask={[/[1-9]/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n\t\t\tplaceholderChar={'\\u2000'}\n\t\t\tshowMask\n\t\t  />\n\t\t);\n\t}\n\tcomponentDidMount(){\n        this.retrieveUserInfo();\n    }\n    handleChange = e =>{\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n    editMode = _ => {\n        this.setState({\n            editing: true\n        });\n    }\n    saveChanges = _ => {\n\t\tthis.updateUserInfo();\n\t\tthis.retrieveUserInfo();\n    \tthis.setState({\n\t\t\tediting: false\n\t\t});\n    }\n    revertChanges = _ => {\n\t\tthis.retrieveUserInfo();\n        this.setState({\n            editing: false\n\t\t});\n    }\n//for implementation of user menu, Paper className will be removed and\n// user menu will define css styles. \n  render() { \n\t  const {classes}=this.props;\n    return (\n      <div>\n          <Paper className={classes.paperForm}>\n            <form  noValidate autoComplete=\"off\">\n\t\t\t\t<div>\n\t\t\t\t\t{window.localStorage.userType=== \"2\" ? (\n\t\t\t\t\t\t<Typography variant=\"h5\">Welcome {this.state.first}</Typography>\n\t\t\t\t\t):(\n\t\t\t\t\t\t<Typography variant=\"h5\">Welcome Dr. {this.state.last}</Typography>\t\t\n\t\t\t\t\t)}\n\t\t\t\t\t<Divider variant=\"middle\" />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Typography variant=\"h6\" >User Information</Typography>\n\t\t\t\t\t<Grid container spacing={8}>\n\t\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t\t<FormControl  margin=\"dense\" fullWidth>\n\t\t\t\t\t\t\t\t<TextField disabled={!this.state.editing}\n\t\t\t\t\t\t\t\t\tname=\"first\"\n\t\t\t\t\t\t\t\t\tlabel=\"First Name\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.first}\n\t\t\t\t\t\t\t\t\tdefaultValue={this.state.first}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t\t<FormControl  margin=\"dense\" fullWidth>\n\t\t\t\t\t\t\t\t<TextField disabled={!this.state.editing}\n\t\t\t\t\t\t\t\t\tname=\"last\"\n\t\t\t\t\t\t\t\t\tlabel=\"Last Name\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.last}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12} sm={5}>\n\t\t\t\t\t\t\t<FormControl  margin=\"dense\" fullWidth>\n\t\t\t\t\t\t\t\t<TextField disabled={!this.state.editing}\n\t\t\t\t\t\t\t\t\tname=\"streetaddr\"\n\t\t\t\t\t\t\t\t\tlabel=\"Street Address\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.streetaddr}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12} sm={4}>\n\t\t\t\t\t\t\t<FormControl  margin=\"dense\" fullWidth>\n\t\t\t\t\t\t\t\t<TextField disabled={!this.state.editing}\n\t\t\t\t\t\t\t\t\tname=\"cityaddr\"\n\t\t\t\t\t\t\t\t\tlabel=\"City\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.cityaddr}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12} sm={1}>\n\t\t\t\t\t\t\t<FormControl  margin=\"dense\" fullWidth>\n\t\t\t\t\t\t\t\t<TextField disabled={!this.state.editing}\n\t\t\t\t\t\t\t\t\tname=\"stateaddr\"\n\t\t\t\t\t\t\t\t\tlabel=\"State\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.stateaddr}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12} sm={2}>\n\t\t\t\t\t\t\t<FormControl  margin=\"dense\" fullWidth>\n\t\t\t\t\t\t\t\t<TextField disabled={!this.state.editing}\n\t\t\t\t\t\t\t\t\tname=\"zipaddr\"\n\t\t\t\t\t\t\t\t\tlabel=\"Zip Code\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.zipaddr}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12} sm={12}>\n\t\t\t\t\t\t\t<FormControl  margin=\"dense\">\n\t\t\t\t\t\t\t\t<TextField disabled\n\t\t\t\t\t\t\t\t\tname=\"dob\"\n\t\t\t\t\t\t\t\t\tlabel=\"Birthdate\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.dob.substring(0,10)}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12} sm={12}>\n\t\t\t\t\t\t\t<FormControl  margin=\"dense\" >\n\t\t\t\t\t\t\t\t<TextField disabled={!this.state.editing}\n\t\t\t\t\t\t\t\t\tname=\"cellnumber\"\n\t\t\t\t\t\t\t\t\tlabel=\"Contact Phone\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.cellnumber}\n\t\t\t\t\t\t\t\t\tinputComponent={this.PhoneMaskCustom(classes)}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12} sm={12}>\n\t\t\t\t\t\t\t<FormControl  margin=\"dense\" >\n\t\t\t\t\t\t\t\t<TextField disabled={!this.state.editing}\n\t\t\t\t\t\t\t\t\tname=\"ssn\"\n\t\t\t\t\t\t\t\t\tlabel=\"SSN\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tvalue={ \"***-\"+\"**-\"+this.state.ssn.substring(7,11)}\n\t\t\t\t\t\t\t\t\tinputComponent={this.SSNMaskCustom(classes)}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{ window.localStorage.userType === \"2\" &&\n\t\t\t\t\t\t<Grid item xs={12} sm={12}>\n\t\t\t\t\t\t\t<FormControl  margin=\"dense\" >\n\t\t\t\t\t\t\t\t<TextField disabled={!this.state.editing}\n\t\t\t\t\t\t\t\t\tname=\"insuranceID\"\n\t\t\t\t\t\t\t\t\tlabel=\"Insurance ID\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.insuranceID}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Divider variant=\"middle\" />\n\t\t\t\t</div> \n\t\t\t\t{/* //OPENHERE */}\n\t\t\t\t<div>\n\t\t\t\t\t<Typography variant=\"h6\">Account Information</Typography>\n\t\t\t\t\t<Grid container spacing={8}>\n\t\t\t\t\t\t<Grid item xs={12} sm={5}>\n\t\t\t\t\t\t\t<FormControl  margin=\"dense\" fullWidth>\n\t\t\t\t\t\t\t\t<TextField disabled={!this.state.editing}\n\t\t\t\t\t\t\t\t\tname=\"user\" \n\t\t\t\t\t\t\t\t\tlabel=\"Username\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\tvalue={this.state.user}\n\t\t\t\t\t\t\t\t\terror={!this.validateUsername()}\n\t\t\t\t\t\t\t\t\thelperText={this.validateUsername() ? \"\":\"Username is not valid\"}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t\t<FormControl margin=\"dense\" fullWidth>\n\t\t\t\t\t\t\t\t<TextField disabled={!this.state.editing}\n\t\t\t\t\t\t\t\t\tname=\"email\" \n\t\t\t\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t\t<FormControl  margin=\"dense\" fullWidth>\n\t\t\t\t\t\t\t\t<TextField disabled={!this.state.editing}\n\t\t\t\t\t\t\t\t\tname=\"pass\"\n\t\t\t\t\t\t\t\t\ttype=\"password\" \n\t\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\tvalue={this.state.pass}\n\t\t\t\t\t\t\t\t\terror={!this.validatePassword()}\n\t\t\t\t\t\t\t\t\thelperText={this.validatePassword() ? \"\":\"Password is not valid\"}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Divider variant=\"middle\"/>\n\t\t\t\t</div>\n                {!this.state.editing ? (\n\t                <div>\n\t\t\t\t\t\t{this.retrieveUserInfo}\n\t\t\t\t\t\t<FormControl margin=\"none\">\n\t\t\t\t\t\t <Button variant=\"contained\" size=\"small\" className={classes.editerButtons} onClick={this.editMode}>\n\t\t\t        \t\t<EditIcon />\n\t\t\t        \t\t\tEdit\n\t\t\t      \t\t</Button>\n\t\t\t\t\t\t</FormControl>\n\t\t      \t\t</div>\n\t      \t\t):(\n\t\t      \t\t<div>\n\t\t\t      \t\t<FormControl margin=\"right\">\n\t\t\t\t\t\t \t<Button disabled={this.EmptyEntries()} variant=\"contained\" size=\"small\" className={classes.editerButtons} onClick={this.saveChanges}>\n\t\t\t        \t\t\t<SaveIcon />\n\t\t\t        \t\t\t\tSave\n\t\t\t      \t\t\t</Button>\n\t\t\t\t\t\t\t  </FormControl>\n\t\t\t\t\t\t\t  <FormControl margin=\"left\">\n\t\t\t\t\t\t \t<Button variant=\"contained\" size=\"small\" className={classes.editerButtons} onClick={this.revertChanges} >\n\t\t\t        \t\t\t<CancelIcon />\n\t\t\t        \t\t\t\tRevert\n\t\t\t      \t\t\t</Button>\n\t\t\t      \t\t</FormControl>\n\t\t      \t\t</div>\n\t\t      \t)}  \n\t\t\t\t\t\t{/* //CLOSE HERER */}\n\t\t\t</form>\n          </Paper>\n      </div>\n    );\n  }\n}\n\nProfileInfo.propTypes={\n\tclasses: PropTypes.object.isRequired\n};\n//PhoneMaskCustom.propTypes = {\n//\tinputRef: PropTypes.func.isRequired,\n//};\nexport default withStyles (styles)(ProfileInfo);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Paper, Divider, Button, TextField, Typography, FormControl, withStyles, Grid } from \"@material-ui/core\";\nimport MaskedInput from 'react-text-mask';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst styles = theme => ({\n    paperForm: {\n        width: '75%',\n        display: \"flex\",\n        backgroundColor: \"#e0e0e0\",\n        padding: theme.spacing.unit*3,\n        height: '98%',\n        margin:\"auto\",\n        marginTop: '2%',\n    },\n      container: {\n        display: 'flex',\n        flexDirection: 'column',\n      },\n      editerButtons: {\n        margin: theme.spacing.unit,\n        fontSize: 16,\n    },\n});\n\n\nclass ProfileInfoTest extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            first: \"\",\n            last: \"\",\n            user: \"\",\n            pass: \"\",\n            email:\"\",\n            cellnumber: \"\",\n            streetaddr: \"\",\n            cityaddr:\"\",\n            stateaddr: \"\",\n            zipaddr: \"\",\n            dob:\"\",\n            ssn: \"\",\n            sex: \"\",\n            insuranceID: \"\",\n            insuranceContact: \"\",\n            deduct: \"\",\n            company: \"\",\n            editing: false\n        };\n        this.handleChange=this.handleChange.bind(this);\n    }\n    retrieveUserInfo=()=> {\n        if(window.localStorage.userType === \"2\"){\n            fetch(`http://162.243.165.50:4000/Patient/${window.localStorage.LoginTableID}`)\n            .then(result => result.json())\n            .then(res => this.setState( {    first: res.data[0].FirstName,\n                                            last: res.data[0].LastName,\n                                            user: res.data[0].Username, \n                                            pass: res.data[0].Password, \n                                            email: res.data[0].Email,\n                                            dob: res.data[0].DOB,\n                                            ssn: res.data[0].SSN, \n                                            sex: res.data[0].SexID, \n                                            cellnumber: res.data[0].CellNumber,\n                                            streetaddr:res.data[0].AddressStreet,\n                                            cityaddr: res.data[0].AddressCity,\n                                            stateaddr: res.data[0].AddressStateID,\n                                            zipaddr: res.data[0].AddressZip}))\n            .catch(err => console.log(err));\n        }\n        else{\n            fetch(`http://162.243.165.50:4000/Employee/${window.localStorage.LoginTableID}`)\n            .then(result => result.json())\n            .then(res => this.setState( {    first: res.data[0].FirstName,\n                                            last: res.data[0].LastName,\n                                            user: res.data[0].Username, \n                                            pass: res.data[0].Password, \n                                            email: res.data[0].Email,\n                                            dob: res.data[0].DOB,\n                                               ssn: res.data[0].SSN,\n                                            sex: res.data[0].SexID, \n                                            cellnumber: res.data[0].CellNumber,\n                                            streetaddr:res.data[0].AddressStreet,\n                                            cityaddr: res.data[0].AddressCity,\n                                            stateaddr: res.data[0].AddressStateID,\n                                            zipaddr: res.data[0].AddressZip}))\n            .catch(err => console.log(err))\n        }\n    }\n    getInsurance(){\n            if(window.localStorage.userType === \"2\") {\n                fetch(`http://162.243.165.50:4000/Insurance/69558070`)\n                .then(result => result.json())\n                .then(res => this.setState({\n                    deduct:res.data[0].Deductible,\n                    insuranceID: res.data[0].InsuranceClientID,\n                    insuranceContact: res.data[0].ContactNumber,\n                    company: res.data[0].Name,\n\n                }))\n                .catch(err => console.log(err))\n        }\n\n    }\n    updateUserInfo=()=>{\n        //backend call to add the user to the backend\n        fetch(`http://162.243.165.50:4000/UpdateUser`, {\n            method:\"POST\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n            },\n            body: JSON.stringify({\n                UserID: window.localStorage.userID,\n                InsuranceID: this.state.insuranceID,\n                FirstName:this.state.first,\n                LastName:this.state.last,\n                Sex: this.state.sex,\n                Email: this.state.email,\n                username: this.state.user,\n                password: this.state.pass,\n                CellNumber: this.state.cellnumber,\n                AddressStreet: this.state.streetaddr,\n                AddressCity: this.state.cityaddr,\n                AddressState: this.state.stateaddr,\n                AddressZip: this.state.zipaddr,\n                userType: window.localStorage.userType,\n                LoginTableID: window.localStorage.LoginTableID,\n                Deductible: this.state.deduct,\n                Name: this.state.company,\n                ContactNumber: this.state.insuranceContact\n            })\n        })\n        .catch(err => console.log(err))\n        \n    }\n    EmptyEntries(){\n        return  this.state.first === \"\"||\n                this.state.last === \"\" ||\n                this.state.sex === \"\" ||\n                this.state.email === \"\" ||\n                this.state.user === \"\" ||\n                this.state.pass === \"\" ||\n                this.state.cellnumber === \"\" ||\n                this.state.streetaddr=== \"\" ||\n                this.state.cityaddr === \"\" ||\n                this.state.stateaddr === \"\" ||\n                this.state.zipaddr === \"\"\n    }\n    validateUsername(){\n        if(this.state.user.length >=6 || this.state.user.length <=1 ){\n            return true\n        }\n        return false\n    }\n    validatePassword(){\n        if(this.state.pass.length >=6 || this.state.pass.length <=1 ){\n            return true\n        }\n        return false\n    }\n    SSNMaskCustom(props) {\n        const {...other } = props;\n        return (\n          <MaskedInput\n            guide={false}\n            {...other}\n            mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n            placeholderChar={'\\u2000'}\n            showMask\n          />\n        );\n    }\n    PhoneMaskCustom(props) {\n        const {...other } = props;\n      \n        return (\n          <MaskedInput\n            {...other}\n            guide={false}\n            mask={[/[1-9]/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n            placeholderChar={'\\u2000'}\n            showMask\n          />\n        );\n    }\n    componentDidMount(){\n        this.retrieveUserInfo();\n        this.getInsurance();\n    }\n    handleChange = e =>{\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n    editMode = _ => {\n        console.log(this.state)\n        this.setState({\n            editing: true\n        });\n    }\n    saveChanges = _ => {\n        console.log(this.state)\n        this.updateUserInfo();\n        this.retrieveUserInfo();\n        this.setState({\n            editing: false\n        });\n    }\n    revertChanges = _ => {\n        this.retrieveUserInfo();\n        this.setState({\n            editing: false\n        });\n    }\n//for implementation of user menu, Paper className will be removed and\n// user menu will define css styles. \n  render() { \n      const {classes}=this.props;\n    return (\n      <div>\n          {this.getInsurance}\n          <Paper className={classes.paperForm}>\n            <form  noValidate autoComplete=\"off\">\n                <div>\n                    {window.localStorage.userType=== \"2\" ? (\n                        <Typography variant=\"h5\">Welcome {this.state.first}</Typography>\n                    ):(\n                        <Typography variant=\"h5\">Welcome Dr. {this.state.last}</Typography>        \n                    )}\n                    <Divider variant=\"middle\" />\n                </div>\n                <div>\n                    <Typography variant=\"h6\" >User Information</Typography>\n                    <Grid container spacing={8}>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl  margin=\"dense\" fullWidth>\n                                <TextField disabled={!this.state.editing}\n                                    name=\"first\"\n                                    label=\"First Name\"\n                                    variant=\"outlined\"\n                                    value={this.state.first}\n                                    defaultValue={this.state.first}\n                                    onChange={this.handleChange}\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl  margin=\"dense\" fullWidth>\n                                <TextField disabled={!this.state.editing}\n                                    name=\"last\"\n                                    label=\"Last Name\"\n                                    variant=\"outlined\"\n                                    value={this.state.last}\n                                    onChange={this.handleChange}\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={5}>\n                            <FormControl  margin=\"dense\" fullWidth>\n                                <TextField disabled={!this.state.editing}\n                                    name=\"streetaddr\"\n                                    label=\"Street Address\"\n                                    variant=\"outlined\"\n                                    value={this.state.streetaddr}\n                                    onChange={this.handleChange}\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={4}>\n                            <FormControl  margin=\"dense\" fullWidth>\n                                <TextField disabled={!this.state.editing}\n                                    name=\"cityaddr\"\n                                    label=\"City\"\n                                    variant=\"outlined\"\n                                    value={this.state.cityaddr}\n                                    onChange={this.handleChange}\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={1}>\n                            <FormControl  margin=\"dense\" fullWidth>\n                                <TextField disabled={!this.state.editing}\n                                    name=\"stateaddr\"\n                                    label=\"State\"\n                                    variant=\"outlined\"\n                                    value={this.state.stateaddr}\n                                    onChange={this.handleChange}\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={2}>\n                            <FormControl  margin=\"dense\" fullWidth>\n                                <TextField disabled={!this.state.editing}\n                                    name=\"zipaddr\"\n                                    label=\"Zip Code\"\n                                    variant=\"outlined\"\n                                    value={this.state.zipaddr}\n                                    onChange={this.handleChange}\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={12}>\n                            <FormControl  margin=\"dense\">\n                                <TextField disabled\n                                    name=\"dob\"\n                                    label=\"Birthdate\"\n                                    variant=\"outlined\"\n                                    value={this.state.dob.substring(0,10)}\n                                    onChange={this.handleChange}\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={12}>\n                            <FormControl  margin=\"dense\" >\n                                <TextField disabled={!this.state.editing}\n                                    name=\"cellnumber\"\n                                    label=\"Contact Phone\"\n                                    variant=\"outlined\"\n                                    value={this.state.cellnumber}\n                                    inputComponent={this.PhoneMaskCustom(classes)}\n                                    onChange={this.handleChange}\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={12}>\n                            <FormControl  margin=\"dense\" >\n                                <TextField disabled={!this.state.editing}\n                                    name=\"ssn\"\n                                    label=\"SSN\"\n                                    variant=\"outlined\"\n                                    value={ \"***-\"+\"**-\"+this.state.ssn.substring(7,11)}\n                                    inputComponent={this.SSNMaskCustom(classes)}\n                                    onChange={this.handleChange}\n                                />\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                    <Divider variant=\"middle\" />\n                </div> \n                { window.localStorage.userType === \"2\" &&\n                    <div>\n                        <Typography variant=\"h6\">Insurance Information</Typography>\n                            <Grid container spacing= {8}>\n                                <Grid item xs={12} sm={6}>\n                                    <FormControl  margin=\"dense\" >\n                                        <TextField disabled={!this.state.editing}\n                                            name=\"company\"\n                                            label=\"Network\"\n                                            variant=\"outlined\"\n                                            value={this.state.company}\n                                            onChange={this.handleChange}\n                                        />\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <FormControl  margin=\"dense\" >\n                                        <TextField disabled={!this.state.editing}\n                                            name=\"insuranceID\"\n                                            label=\"Insurance ID\"\n                                            variant=\"outlined\"\n                                            value={this.state.insuranceID}\n                                            onChange={this.handleChange}\n                                        />\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={12} sm={4}>\n                                    <FormControl  margin=\"dense\" >\n                                        <TextField disabled={!this.state.editing}\n                                            name=\"deduct\"\n                                            label=\"Deductible\"\n                                            variant=\"outlined\"\n                                            value={this.state.deduct}\n                                            onChange={this.handleChange}\n                                        />\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={12} sm={8}>\n                                    <FormControl  margin=\"dense\" >\n                                        <TextField disabled={!this.state.editing}\n                                            name=\"insuranceContact\"\n                                            label=\"Insurance Contact Number\"\n                                            variant=\"outlined\"\n                                            value={this.state.insuranceContact}\n                                            inputComponent={this.PhoneMaskCustom(classes)}\n                                            onChange={this.handleChange}\n                                        />\n                                    </FormControl>\n                                </Grid>\n                            </Grid>\n                        <Divider variant=\"middle\" />\n                    </div>\n                }\n\n                <div>\n                    <Typography variant=\"h6\">Account Information</Typography>\n                    <Grid container spacing={8}>\n                        <Grid item xs={12} sm={5}>\n                            <FormControl  margin=\"dense\" fullWidth>\n                                <TextField disabled={!this.state.editing}\n                                    name=\"user\" \n                                    label=\"Username\"\n                                    variant=\"outlined\"\n                                    onChange={this.handleChange}\n                                    value={this.state.user}\n                                    error={!this.validateUsername()}\n                                    helperText={this.validateUsername() ? \"\":\"Username is not valid\"}\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl margin=\"dense\" fullWidth>\n                                <TextField disabled={!this.state.editing}\n                                    name=\"email\" \n                                    label=\"Email\"\n                                    variant=\"outlined\"\n                                    onChange={this.handleChange}\n                                    value={this.state.email}\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl  margin=\"dense\" fullWidth>\n                                <TextField disabled={!this.state.editing}\n                                    name=\"pass\"\n                                    type=\"password\" \n                                    label=\"Password\"\n                                    variant=\"outlined\"\n                                    onChange={this.handleChange}\n                                    value={this.state.pass}\n                                    error={!this.validatePassword()}\n                                    helperText={this.validatePassword() ? \"\":\"Password is not valid\"}\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Divider variant=\"middle\"/>\n\n\n                    </Grid>\n                    <Divider variant=\"middle\"/>\n                </div>\n                {!this.state.editing ? (\n                    <div>\n                        {this.retrieveUserInfo}\n                        <FormControl margin=\"none\">\n                         <Button variant=\"contained\" size=\"small\" className={classes.editerButtons} onClick={this.editMode}>\n                            <EditIcon />\n                                Edit\n                          </Button>\n                        </FormControl>\n                      </div>\n                  ):(\n                      <div>\n                          <FormControl margin=\"right\">\n                             <Button disabled={this.EmptyEntries()} variant=\"contained\" size=\"small\" className={classes.editerButtons} onClick={this.saveChanges}>\n                                <SaveIcon />\n                                    Save\n                              </Button>\n                              </FormControl>\n                              <FormControl margin=\"left\">\n                             <Button variant=\"contained\" size=\"small\" className={classes.editerButtons} onClick={this.revertChanges} >\n                                <CancelIcon />\n                                    Revert\n                              </Button>\n                          </FormControl>\n                      </div>\n                  )}  \n                        {/* //CLOSE HERER */}\n            </form>\n          </Paper>\n      </div>\n    );\n  }\n}\n\nProfileInfoTest.propTypes={\n    classes: PropTypes.object.isRequired\n};\n//PhoneMaskCustom.propTypes = {\n//    inputRef: PropTypes.func.isRequired,\n//};\nexport default withStyles (styles)(ProfileInfoTest);","import React, { Component } from 'react';\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\nimport MedicalInformation from '../Components/Profile/MedicalInformation';\nimport ProfileInfo from '../Components/Profile/ProfileInfo';\nimport { withStyles } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport ProfileInfoTest from '../Components/Profile/ProfileInfoTest';\n\nconst styles = theme =>({\n  root: {\n      height: \"200vh\",\n      backgroundColor: \"#white\",\n  },\n});\n\nclass Profile extends Component {\n  render() { \n    const{classes}=this.props;\n    return (\n      <div className={classes.root}>\n        <NavigationBar title={\"My Profile\"} Tab={1}/>\n        <ProfileInfoTest/>\n        {window.localStorage.userType === \"2\" ? (\n        <MedicalInformation/>\n        ):(\n          <div></div>\n        )}\n      </div>\n    );\n  }\n}\n\nProfile.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Profile);\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport WhichFacility from '../Appointments/WhichFacility';\n\n\nconst styles = theme => ({\n    icon: {\n      margin: theme.spacing.unit,\n      fontSize: 32,\n    },\n    root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n      },\n      table: {\n        minWidth: 800,\n      },\n});\n\nclass ModifyFacility extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\topenForm: false,\n\t\t\tselectedFacility: \"\",\n\t\t\tFacilities: this.props.val.Facilities,\n\t\t\tFacilityID: this.props.Sub_FacilityID\n\t\t}\n\t}\n\t\n\tcomponentDidMount(){\n        //this.getFacilities();\n    }\n\t\n\t// Get Facility information\n\t/*getFacilities=()=> {\n        fetch(`http://162.243.165.50:4000/Facilities`)\n        .then(result => result.json())\n        .then(res => this.setState({ Facilities:res.data }))\n        .catch(err => console.log(err))\n    };*/\n\t\n\tgetFacilityIDFromName(lookUpName){\n\t\tfor(var i = 0; i < this.state.Facilities.length; i++){\n\t\t\tif(this.state.Facilities[i].FacilityName === lookUpName){\n\t\t\t\treturn this.state.Facilities[i].FacilityID\n\t\t\t}\n\t\t}\n\t\treturn -1\n\t}\n\t\n\thandleClickOpen = () => {\n        //this.getFacilities();\n        this.setState({ Facilities: this.props.val.Facilities,\n\t\t\t\t\t\topenForm: true });\n    };\n\n    handleClose = () => {\n        this.setState({ openForm: false });\n    };\n\t\n\thandleChange = e =>{\n        this.setState({\n            selectedFacility: this.state.Facilities[e.target.value].FacilityName,\n\t\t\t[e.target.name] : e.target.value\n        })\n    }\n\t\n\thandleDoneSelected = () =>{\n\t\tif(this.state.selectedFacility !== \"\"){\n\t\t\tfor(var i=0; i < this.props.val.WorkSchedule.length; i++){\n\t\t\t\tif(this.props.val.WorkSchedule[i].WeekDayID === this.props.Sub_DayID){\n\t\t\t\t\tconsole.log(\"Facility: \" + this.state.selectedFacility)\n\t\t\t\t\tconsole.log(this.props.val.WorkSchedule[i])\n\t\t\t\t\tthis.props.val.WorkSchedule[i].FacilityName = this.state.selectedFacility\n\t\t\t\t\tthis.props.val.WorkSchedule[i].FacilityID = this.getFacilityIDFromName(this.state.selectedFacility)\n\t\t\t\t}\n\t\t\t}\n\t\t\tconsole.log(\"UPDATING\")\n\t\t\tfetch(`http://162.243.165.50:4000/UpdateWorkScheduleDay/`, {\n            method:\"POST\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n            },\n            body: JSON.stringify({\n                UpdateDayID: this.props.Sub_DayID,\n\t\t\t\tEmployeeID: window.localStorage.userID,\n\t\t\t\tNewFacilityID: this.getFacilityIDFromName(this.state.selectedFacility)\n            })\n        })\n        .then(this.grabAppointments)\n        .catch(err => console.log(err));\n\t\t}\n\t\tthis.handleClose()\n\t\tsetTimeout(function(){\n\t\t\twindow.location.replace('/Scheduling')\n\t\t}, 200);\n\t}\n\t\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<Button variant=\"contained\" color=\"inherit\" className={this.props.Button} fullWidth onClick={this.handleClickOpen}>\n                    Change Facility\n                </Button>\n\t\t\t\t<Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\n\t\t\t\t\t<DialogTitle id=\"form-dialog-title\"></DialogTitle>\n\t\t\t\t\t<DialogContent>\n                        <DialogContentText>\n                            Please select a new facilty for this weekday\n                        </DialogContentText>\n                        <WhichFacility val={this.state} handleChange={this.handleChange}/>\n                    </DialogContent>\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<Button onClick={this.handleDoneSelected} disabled={this.state.FacilityID===\"\"} color=\"primary\">\n                            Done\n                        </Button>\n                    </DialogActions>\n\t\t\t\t</Dialog>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nModifyFacility.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ModifyFacility);\n\n","import { TextField, MenuItem } from \"@material-ui/core\";\nimport React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\n\nfunction WhichDay(props){\n    \n    return(\n        <div>\n            <FormControl margin=\"normal\" fullWidth>\n                    <TextField\n                        id=\"DayID\"\n                        select\n                        label=\"Please Choose A Day\"\n                        name=\"DayID\"\n                        variant=\"standard\"\n                        onChange={props.handleChange}\n                        value={props.val.DayID}   \n                        required                   \n                    >\n                        {props.val.OpenDays.map(option => (\n                            <MenuItem key={option.DayID} value={option.DayID}>\n                                {option.WeekDay}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                </FormControl>\n        </div>\n    );\n}\n\nexport default WhichDay;","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport WhichFacility from '../Appointments/WhichFacility';\nimport WhichDay from './WhichDay';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n    icon: {\n      margin: theme.spacing.unit,\n      fontSize: 32,\n    },\n});\n\nclass AddNewDay extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n\t\t\topenForm: false,\n\t\t\tFacilities: [],\n\t\t\tOpenDays: [],\n\t\t\tDayID: -1,\n\t\t\tFacilityID: -1,\n\t\t}\n\t}\n\t\n\tgetOpenDaysList(){\n\t\tvar newDayList = []\n\t\tvar shouldAddNew = true\n\t\tfor(var i = 0; i < this.props.val.Weekdays.length; i++){\n\t\t\tfor(var k = 0; k < this.props.val.WorkSchedule.length; k++){\n\t\t\t\tif(this.props.val.WorkSchedule[k].WeekDayID === this.props.val.Weekdays[i].DayID)\n\t\t\t\t\tshouldAddNew = false\n\t\t\t}\n\t\t\tif(shouldAddNew){\n\t\t\t\tnewDayList.push(this.props.val.Weekdays[i])\n\t\t\t}\n\t\t\tshouldAddNew = true\n\t\t}\n\t\treturn newDayList\n\t}\n\t\n\thandleClickOpen = () => {\n        this.setState({ Facilities: this.props.val.Facilities,\n\t\t\t\t\t\tOpenDays : this.getOpenDaysList(),\n\t\t\t\t\t\topenForm: true });\n    };\n\n    handleClose = () => {\n        this.setState({ openForm: false,\n\t\t\t\t\t\tDayID: -1,\n\t\t\t\t\t\tFacilityID: -1 });\n    };\n\t\n\thandleChange = e =>{\n        this.setState({\n\t\t\t[e.target.name] : e.target.value\n        })\n    }\n\t\n\thandleConfirmChange = () => {\n\t\tfetch(`http://162.243.165.50:4000/AddNewWorkSchedule/`, {\n\t\tmethod:\"POST\",\n        headers: {\n            \"Content-Type\":\"application/json\",\n        },\n        body: JSON.stringify({\n            DayID: this.state.DayID,\n\t\t\tEmployeeID: window.localStorage.userID,\n\t\t\tFacilityID: this.state.FacilityID\n        })})\n\t\tconsole.log(\"DayID : \" + this.state.DayID)\n\t\tconsole.log(\"EmployeeID : \" + window.localStorage.userID)\n\t\tconsole.log(\"FacilityID : \" + this.state.FacilityID)\n\t\tthis.handleClose()\n\t\tsetTimeout(function(){\n\t\t\twindow.location.replace('/Scheduling')\n\t\t}, 1000);\n\t};\n\t\n\trender(){\n\t\treturn (\n\t\t\t<div>\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>\n                    Add New Day\n                </Button>\n                <Dialog open={this.state.openForm} onClose={this.handleClose}>\n                    <DialogTitle id=\"form-dialog-title\">Add a new day</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Please fill out the information for a new day\n                        </DialogContentText>\n\t\t\t\t\t\t<WhichFacility val={this.state} handleChange={this.handleChange}/>\n\t\t\t\t\t\t<WhichDay val={this.state} handleChange={this.handleChange}/>\n                    </DialogContent>\n                    <DialogActions>\n\t\t\t\t\t\t<Button onClick={this.handleConfirmChange} color=\"primary\">\n                            Confirm\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"secondary\">\n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n\t\t)\n\t}\n}\n\nAddNewDay.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  export default withStyles(styles)(AddNewDay);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Typography, FormControl, withStyles, Grid } from \"@material-ui/core\";\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ModifyFacility from './ModifyFacility';\nimport AddNewDay from './AddNewDay';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n//import WhichFacility from '../Appointments/WhichFacility';'\n\nconst styles = theme => ({\n\troot: {\n        width: '100%',\n        alignItems: \"center\",\n        display: \"flex\",\n        height: \"100vh\",\n        flexDirection: 'column',\n        backgroundColor: \"#a09d9d\",\n        padding: theme.spacing.unit*3,\n        margin:\"auto\",\n  \n    },\n    AdditionButton: {\n        marginLeft:\"70%\",\n        display: \"flex\",\n        flexDirection: 'column',\n        backgroundColor: \"#a09d9d\",\n        padding: theme.spacing.unit*3,\n  \n    },\n    Button: {\n        marginTop: '.5%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '20%',\n        flexShrink: 0,\n      },\n      secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n        flexBasis: '100%',\n        margin: 'auto'\n      },\n});\n\nclass DaySchedule extends React.Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\topenForm: false, // Toggle for dialog box when removing day\n\t\t\tselectedDayID: -1, // Selected day for removal assigned when opening remove day box\n\t\t\tFacilityID: \"\", // Selected facility to be changed\n\t\t\tWorkSchedule: [], // WorkSchedule for specified Employee\n            Facilities: [], // All Facility information\n            Weekdays: [] // All WeekDay information \n        };\n\t\tthis.handleChange=this.handleChange.bind(this);\n\t}\n\t\n\tcomponentDidMount(){\n        this.grabWorkSchedule();\n\t\tthis.getFacilities();\n\t\tthis.getWeekday();\n    }\n\t\n\t// Get the WorkSchedule list for specified employee\n\tgrabWorkSchedule=()=>{\n\t\tfetch(`http://162.243.165.50:4000/WorkSchdule/${window.localStorage.userID}`)\n        .then(result => result.json())\n        .then(res => this.setState({ WorkSchedule:res.data[0]}))\n        .catch(err => console.log(err));\n\t}\n\t\n\t// Get Facility information\n\tgetFacilities=()=> {\n        fetch(`http://162.243.165.50:4000/Facilities`)\n        .then(result => result.json())\n        .then(res => this.setState({ Facilities:res.data }))\n        .catch(err => console.log(err))\n    };\n\t\n\t// Get Weekday information\n\tgetWeekday=()=> {\n        fetch(`http://162.243.165.50:4000/Weekday`)\n        .then(result => result.json())\n        .then(res => this.setState({ Weekdays:res.data }))\n        .catch(err => console.log(err))\n    };\n\t\n\thandleChange = panel => (event, expanded) => {\n        this.setState({\n            expanded: expanded ? panel : false,\n        });\n    }\n\t\n\thandleClickOpen = (dayID) => {\n\t\tthis.setState({selectedDayID: dayID});\n        this.setState({ openForm: true });\n    };\n\n    handleClose = () => {\n        this.setState({ openForm: false });\n    };\n\t\n\thandleConfirmRemove = () => {\n\t\tconsole.log(this.state.selectedDayID)\n\t\tconsole.log(this.state.WorkSchedule)\n\t\tfetch(`http://162.243.165.50:4000/RemoveWorkScheduleDay/`, {\n            method:\"POST\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n            },\n            body: JSON.stringify({\n                RemoveDayID: this.state.selectedDayID,\n\t\t\t\tEmployeeID: window.localStorage.userID,\n            })\n        })\n        .then(this.grabAppointments)\n        .catch(err => console.log(err));\n\t\tthis.handleClose()\n\t\tsetTimeout(function(){\n\t\t\twindow.location.replace('/Scheduling')\n\t\t}, 200);\n\t}\n\t\n\tgetDayName(dayID){\n\t\tfor(var i = 0; i < this.state.Weekdays.length; i++){\n\t\t\tif(this.state.Weekdays[i].DayID === dayID){\n\t\t\t\treturn this.state.Weekdays[i].WeekDay\n\t\t\t}\n\t\t}\n\t}\n\t\n\trender(){\n\t\tconst {classes}=this.props;\n\t\tconst { expanded } = this.state;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className={classes.root}>\n\t\t\t\t\t{this.state.WorkSchedule.map(option => (\n\t\t\t\t\t\t<FormControl key={option.WeekDayID} fullWidth>\n\t\t\t\t\t\t\t<ExpansionPanel square expanded={expanded === option.WeekDayID}  onChange={this.handleChange(option.WeekDayID)}>\n\t\t\t\t\t\t\t\t<ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n\t\t\t\t\t\t\t\t\t<Typography className={classes.heading}>Day:  <b>{option.WeekDay}</b></Typography>\n\t\t\t\t\t\t\t\t\t<Typography className={classes.heading}>Facility:  <b>{option.FacilityName}</b></Typography>\n\t\t\t\t\t\t\t\t</ExpansionPanelSummary>\n\t\t\t\t\t\t\t\t<ExpansionPanelDetails>\n\t\t\t\t\t\t\t\t\t<Typography className={classes.secondaryHeading}>\n\t\t\t\t\t\t\t\t\t\t<Grid container spacing={8}>\n\t\t\t\t                            <Grid item xs={12} sm={9}>\n                                                <ModifyFacility  val={this.state} Button={classes.Button} Sub_DayID={option.WeekDayID} Sub_FacilityID={option.FacilityID}/>\n                                            </Grid>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm={3}>\n                                                <Button fullWidth variant=\"contained\" className={classes.Button} onClick={()=>this.handleClickOpen(option.WeekDayID)} color=\"secondary\" marginTop=\"10%\">\n                                                    Remove Day\n                                                </Button>\n\t\t\t\t\t\t\t\t\t\t\t\t<Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogTitle id=\"form-dialog-title\"></DialogTitle>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogContentText>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAre you sure you want to remove {this.getDayName(this.state.selectedDayID)} from your Schedule?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DialogContentText>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button className={classes.Button} onClick={this.handleClose} color=\"primary\" variant=\"contained\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNo\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button className={classes.Button} onClick={this.handleConfirmRemove} color=\"secondary\" variant=\"contained\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tYes\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t\t\t\t\t\t\t</Dialog>\n                                            </Grid>\n                                        </Grid>\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</ExpansionPanelDetails>\n\t\t\t\t\t\t\t</ExpansionPanel>\n\t\t\t\t\t\t</FormControl>\t\n\t\t\t\t\t))}\n\t\t\t\t\t<div className={classes.AdditionButton}>\n                        <AddNewDay val={this.state} Button={classes.Button}/>\n                    </div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nDaySchedule.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DaySchedule);","import React, { Component } from 'react';\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\nimport DaySchedule from '../Components/Scheduling/DaySchedule';\n\nclass Scheduling extends Component {\n  render() { \n    return (\n      <div>\n        <NavigationBar title={\"My Schedule\"} Tab={2}/>\n        <DaySchedule/>\n      </div>\n    );\n  }\n}\n\nexport default Scheduling;\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles, Typography, Checkbox, FormControlLabel } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { TextField, MenuItem } from \"@material-ui/core\";\nimport FormControl from '@material-ui/core/FormControl';\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nconst styles = theme =>({\n    Button: {\n        marginTop: '2%',\n    },\n});\n\n\nclass FacilityReports extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            openForm: false,\n            checkAllDates: false,\n            ChosenFacility: \"\",\n            MinimumDate: null,\n            MaximumDate: null,\n            MinimumDateDB: \"null\",\n            MaximumDateDB: \"null\",\n            Facilities: [],\n            Report:[],\n\n        };\n    }\n    componentDidMount(){\n        this.uploadFacilities();\n    }\n    uploadDoctors(){\n\n    }\n    fetchFacilityReport(){\n        \n        fetch(`http://162.243.165.50:4000/FacilityAppointmentReport/${this.state.ChosenFacility}/${this.state.MinimumDateDB}/${this.state.MaximumDateDB}`)\n        .then(result => result.json())\n        .then(Response => this.setState({ Report:Response.data }))\n        .catch(err => console.log(err))\n    }\n    fetchDoctorReport(){\n        fetch(`http://162.243.165.50:4000/DoctorReport/${this.state.ChosenFacility}`)\n        .then(result => result.json())\n        .then(Response => this.setState({ DoctorsCount:Response.data[0].Count }))\n        .catch(err => console.log(err))\n    }\n    uploadFacilities(){\n        fetch(`http://162.243.165.50:4000/Facilities`)\n        .then(result => result.json())\n        .then(Response => this.setState({ Facilities:Response.data }))\n        .catch(err => console.log(err))\n    }\n    MinDateChange = (d) =>{\n        let ApptDate=new Date(d)\n        ApptDate = this.FormatDate(ApptDate);\n        this.setState({MinimumDateDB:ApptDate});\n        this.setState({\n            MinimumDate: d\n        })\n    }\n    MaxDateChange = (d) =>{\n        let ApptDate=new Date(d)\n        ApptDate = this.FormatDate(ApptDate);\n        this.setState({MaximumDateDB:ApptDate});\n        this.setState({\n            MaximumDate: d\n        })\n    }\n    FormatDate=(date)=>{\n        date = date.getFullYear() + '-' + (this.fixMonth(date)) + '-' + date.getDate();\n        return date;\n    }\n\n    fixMonth=(date)=>{\n        if(date.getMonth() + 1 < 10){\n            return \"0\" +(date.getMonth() +1);\n        }\n        else{\n            return date.getMonth()+1;\n        }\n    }\n    handleChange = e =>{\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n    handlechoseChange = name => event =>{\n        this.setState({ \n            [name]: event.target.checked,\n            MinimumDate: null,\n            MaximumDate: null,\n            MinimumDateDB: \"null\",\n            MaximumDateDB: \"null\"});\n      };\n    handleClickOpen = () => {\n        this.fetchFacilityReport();\n        this.setState({ openForm: true });\n    };\n\n    handleClose = () => {\n        this.setState({ \n            openForm: false,\n            checkAllDates: false,\n            ChosenFacility: \"\",\n            MinimumDate: null,\n            MaximumDate: null,\n            MinimumDateDB: \"null\",\n            MaximumDateDB: \"null\", \n            Report:[],\n        });\n    };\n    render(){\n        const {classes} = this.props;\n        return(\n            <div>\n            <Typography variant=\"h5\">Facility Report</Typography>\n                <FormControl margin=\"normal\" fullWidth>\n                    <TextField\n                        id=\"ChosenFacility\"\n                        select\n                        label=\"Please Choose A Facility\"\n                        name=\"ChosenFacility\"\n                        variant=\"standard\"\n                        onChange={this.handleChange}\n                        value={this.state.ChosenFacility}   \n                        required                   \n                    >\n                        <MenuItem key=\"-1\" value=\"-1\">\n                            All Facilities\n                        </MenuItem>\n                        {this.state.Facilities.map(option => (\n                            <MenuItem key={option.FacilityID} value={option.FacilityID}>\n                                {option.FacilityName}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                </FormControl>\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                        checked={this.state.checkAllDates}\n                        onChange={this.handlechoseChange('checkAllDates')}\n                        value=\"checkAllDates\"\n                        />\n                    }\n                    label=\"Generate Report for all Dates\"\n                />\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        label=\"From Date\"\n                        name=\"MinimumDate\"\n                        value={this.state.MinimumDate}\n                        onChange={this.MinDateChange}\n                        fullWidth\n                        disabled={this.state.checkAllDates}\n                    />\n                </MuiPickersUtilsProvider>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        label=\"To Date\"\n                        name=\"MaximumDate\"\n                        value={this.state.MaximumDate}\n                        onChange={this.MaxDateChange}\n                        fullWidth\n                        disabled={this.state.checkAllDates}\n                    />\n                </MuiPickersUtilsProvider>\n                <Button variant=\"contained\" color=\"inherit\" fullWidth className={classes.Button} onClick={this.handleClickOpen} disabled={((this.state.MinimumDate === null || this.state.MaximumDate === null) && !this.state.checkAllDates) || this.state.ChosenFacility === \"\"}>\n                    Show reports for the Chosen Facility\n                </Button>\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\n                    <DialogTitle id=\"form-dialog-title\">Here is the Facility Report</DialogTitle>\n                    <DialogContent>\n                        <Table className={classes.table}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>FacilityID</TableCell>\n                                    <TableCell align=\"center\">Number of Doctors</TableCell>\n                                    <TableCell align=\"center\">Upcoming Appointments</TableCell>\n                                    <TableCell align=\"center\">Cancelled Appointments</TableCell>\n                                    <TableCell align=\"center\">Completed Appointments</TableCell>\n                                    <TableCell align=\"center\">Total Appointments</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {this.state.Report.map(Each => (\n                                    <TableRow key={Each.FacilityID}>\n                                        <TableCell align=\"center\">{Each.FacilityID}</TableCell>\n                                        <TableCell align=\"center\">{Each.DoctorsWorking}</TableCell>\n                                        <TableCell align=\"center\">{Each.UpcomingApps}</TableCell>\n                                        <TableCell align=\"center\">{Each.CancelledApps}</TableCell>\n                                        <TableCell align=\"center\">{Each.CompletedApps}</TableCell>\n                                        <TableCell align=\"center\">{Each.totalApps}</TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>                        \n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n    \n}\n\nFacilityReports.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  \nexport default withStyles(styles)(FacilityReports);\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles, Typography, Checkbox, FormControlLabel } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { TextField, MenuItem } from \"@material-ui/core\";\nimport FormControl from '@material-ui/core/FormControl';\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nconst styles = theme =>({\n    Button: {\n        marginTop: '2%',\n    },\n});\n\n\nclass DoctorsReport extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            openForm: false,\n            checkAllDates: false,\n            ChosenDoctor: \"\",\n            MinimumDate: null,\n            MaximumDate: null,\n            MinimumDateDB: \"null\",\n            MaximumDateDB: \"null\",\n            Doctors: [],\n            Report:[],\n\n        };\n    }\n    componentDidMount(){\n        this.uploadDoctors();\n    }\n    fetchDoctorReport(){\n        fetch(`http://162.243.165.50:4000/DoctorReport/${this.state.ChosenDoctor}/${this.state.MinimumDateDB}/${this.state.MaximumDateDB}`)\n        .then(result => result.json())\n        .then(Response => this.setState({ Report:Response.data }))\n        .catch(err => console.log(err))\n    }\n    uploadDoctors(){\n        fetch(`http://162.243.165.50:4000/AllDoctors`)\n        .then(result => result.json())\n        .then(Response => this.setState({ Doctors:Response.data }))\n        .catch(err => console.log(err))\n    }\n    MinDateChange = (d) =>{\n        let ApptDate=new Date(d)\n        ApptDate = this.FormatDate(ApptDate);\n        this.setState({MinimumDateDB:ApptDate});\n        this.setState({\n            MinimumDate: d\n        })\n    }\n    MaxDateChange = (d) =>{\n        let ApptDate=new Date(d)\n        ApptDate = this.FormatDate(ApptDate);\n        this.setState({MaximumDateDB:ApptDate});\n        this.setState({\n            MaximumDate: d\n        })\n    }\n    FormatDate=(date)=>{\n        date = date.getFullYear() + '-' + (this.fixMonth(date)) + '-' + date.getDate();\n        return date;\n    }\n\n    fixMonth=(date)=>{\n        if(date.getMonth() + 1 < 10){\n            return \"0\" +(date.getMonth() +1);\n        }\n        else{\n            return date.getMonth()+1;\n        }\n    }\n    handleChange = e =>{\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n    handlechoseChange = name => event =>{\n        this.setState({ \n            [name]: event.target.checked,\n            MinimumDate: null,\n            MaximumDate: null,\n            MinimumDateDB: \"null\",\n            MaximumDateDB: \"null\"});\n      };\n    handleClickOpen = () => {\n        this.fetchDoctorReport();\n        this.setState({ openForm: true });\n    };\n\n    handleClose = () => {\n        this.setState({ \n            openForm: false,\n            checkAllDates: false,\n            ChosenDoctor: \"\",\n            MinimumDate: null,\n            MaximumDate: null,\n            MinimumDateDB: \"null\",\n            MaximumDateDB: \"null\", \n            Report:[],\n        });\n    };\n    render(){\n        const {classes} = this.props;\n        return(\n            <div>\n            <Typography variant=\"h5\">Doctor Report</Typography>\n                <FormControl margin=\"normal\" fullWidth>\n                    <TextField\n                        id=\"ChosenDoctor\"\n                        select\n                        label=\"Please Choose A Facility\"\n                        name=\"ChosenDoctor\"\n                        variant=\"standard\"\n                        onChange={this.handleChange}\n                        value={this.state.ChosenDoctor}   \n                        required                   \n                    >\n                        <MenuItem key=\"-1\" value=\"-1\">\n                            All Doctors\n                        </MenuItem>\n                        {this.state.Doctors.map(option => (\n                            <MenuItem key={option.EmployeeID} value={option.EmployeeID}>\n                                Dr. {option.FirstName} {option.LastName}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                </FormControl>\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                        checked={this.state.checkAllDates}\n                        onChange={this.handlechoseChange('checkAllDates')}\n                        value=\"checkAllDates\"\n                        />\n                    }\n                    label=\"Generate Report for all Dates\"\n                />\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        label=\"From Date\"\n                        name=\"MinimumDate\"\n                        value={this.state.MinimumDate}\n                        onChange={this.MinDateChange}\n                        fullWidth\n                        disabled={this.state.checkAllDates}\n                    />\n                </MuiPickersUtilsProvider>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        label=\"To Date\"\n                        name=\"MaximumDate\"\n                        value={this.state.MaximumDate}\n                        onChange={this.MaxDateChange}\n                        fullWidth\n                        disabled={this.state.checkAllDates}\n                    />\n                </MuiPickersUtilsProvider>\n                <Button variant=\"contained\" color=\"inherit\" fullWidth className={classes.Button} onClick={this.handleClickOpen} disabled={((this.state.MinimumDate === null || this.state.MaximumDate === null) && !this.state.checkAllDates) || this.state.ChosenDoctor === \"\"}>\n                    Show reports for the Chosen Doctor\n                </Button>\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\n                    <DialogTitle id=\"form-dialog-title\">Here is the Doctor Report</DialogTitle>\n                    <DialogContent>\n                        <Table className={classes.table}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align=\"center\">EmployeeID</TableCell>\n                                    <TableCell align=\"center\">Number of Appointments</TableCell>\n                                    <TableCell align=\"center\">Number of Diagnoses</TableCell>\n                                    <TableCell align=\"center\">Number of Cancelled Appointments</TableCell>\n                                    <TableCell align=\"center\">Number of Days Working in a week</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {this.state.Report.map(Each => (\n                                    <TableRow key={Each.EmployeeID}>\n                                        <TableCell align=\"center\">{Each.EmployeeID}</TableCell>\n                                        <TableCell align=\"center\">{Each.Apps}</TableCell>\n                                        <TableCell align=\"center\">{Each.Diagnoses}</TableCell>\n                                        <TableCell align=\"center\">{Each.CancelledApps}</TableCell>\n                                        <TableCell align=\"center\">{Each.DaysWorking}</TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>                        \n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n    \n}\n\nDoctorsReport.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  \nexport default withStyles(styles)(DoctorsReport);\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles, Typography, Checkbox, FormControlLabel } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { TextField, MenuItem } from \"@material-ui/core\";\nimport FormControl from '@material-ui/core/FormControl';\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nconst styles = theme =>({\n    Button: {\n        marginTop: '2%',\n    },\n});\n\n\nclass DoctorsReport extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            Report: [],\n        };\n    }\n    fetchInsurances(){\n        fetch(`http://162.243.165.50:4000/AllInsurance`)\n        .then(result => result.json())\n        .then(Response => this.setState({ Report:Response.data }))\n        .catch(err => console.log(err))\n    };\n    handleChange = e =>{\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n   \n    handleClickOpen = () => {\n        this.fetchInsurances();\n        this.setState({ openForm: true });\n    };\n\n    handleClose = () => {\n        this.setState({ \n            Report: [],\n            openForm:false,\n        });\n    };\n    render(){\n        const {classes} = this.props;\n        return(\n            <div>\n            <Typography variant=\"h5\">Insurances Report</Typography>\n               \n                <Button variant=\"contained\" color=\"inherit\" fullWidth className={classes.Button} onClick={this.handleClickOpen} disabled={((this.state.MinimumDate === null || this.state.MaximumDate === null) && !this.state.checkAllDates) || this.state.ChosenDoctor === \"\"}>\n                    Show Patient Insurances\n                </Button>\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\n                    <DialogTitle id=\"form-dialog-title\">Here are the Insurances of the Patients</DialogTitle>\n                    <DialogContent>\n                        <Table className={classes.table}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align=\"center\">Patient ID</TableCell>\n                                    <TableCell align=\"center\">Deductible</TableCell>\n                                    <TableCell align=\"center\">Contact Number</TableCell>\n                                    <TableCell align=\"center\">Insurance Name</TableCell>\n                                    <TableCell align=\"center\">Insurance Client ID</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                        {this.state.Report.map(Each => (\n                                            <TableRow key={Each.PatientID}>\n                                                <TableCell align=\"center\">{Each.PatientID}</TableCell>\n                                                <TableCell align=\"center\">{Each.Deductible}</TableCell>\n                                                <TableCell align=\"center\">{Each.ContactNumber}</TableCell>\n                                                <TableCell align=\"center\">{Each.Name}</TableCell>\n                                                <TableCell align=\"center\">{Each.InsuranceClientID}</TableCell>\n                                            </TableRow>\n                                        ))}\n                                \n                            </TableBody>\n                        </Table>                        \n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n    \n}\n\nDoctorsReport.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  \nexport default withStyles(styles)(DoctorsReport);\n","import React, { Component } from 'react';\nimport FacilityReports from '../Report/FacilityReports';\nimport { Paper, withStyles } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport DoctorsReport from './DoctorsReport';\nimport InsuranceReport from './InsuranceReport';\n\nconst styles = theme =>({\n    root: {\n        width: '55%',\n        display: \"flex\",\n        flexDirection: 'column',\n        padding: theme.spacing.unit*3,\n        marginTop:\"5%\",\n        marginBottom:\"5%\",\n        margin:\"auto\"\n  \n    },\n});\n\nclass ReportsGenerator extends Component {\n  render() { \n    const{classes}=this.props;\n    return (\n      <div>\n          <Paper className={classes.root}>\n            <FacilityReports/>\n          </Paper>\n          <Paper className={classes.root}>\n            <DoctorsReport/>\n          </Paper>\n          <Paper className={classes.root}>\n            <InsuranceReport/>\n          </Paper>\n      </div>\n    );\n  }\n}\n\nReportsGenerator.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  \nexport default withStyles(styles)(ReportsGenerator);\n","import React, { Component } from 'react';\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\nimport ReportsGenerator from '../Components/Report/ReportsGenerator';\nimport '../Components/Report/Report.css';\n\nclass Report extends Component {\n  render() { \n    return (\n      <div className='ReportsPage-image'><div/>\n        <div className='ReportsPage-overlay'>\n          <NavigationBar title={\"Analytical Reports\"} Tab={3}/>\n          <ReportsGenerator/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Report;\n","import React from 'react';\nimport RegistrationForm from '../Components/Registration/RegistrationForm';\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\nimport './Home.css';\n\nclass DoctorRegistration extends React.Component{\n    render() {\n        return(\n            <div className='Home-image'>\n                <div className='Home-overlay'>\n                    <NavigationBar title={\"Register A New User\"} Tab={4}/>\n                    <RegistrationForm/>\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\nexport default DoctorRegistration;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GoogleApiWrapper, InfoWindow, Marker, Geocoder, Map } from 'google-maps-react';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\n\nexport class MapGen extends React.Component {\n  constructor(props) {\n    super(props)\n    const { lat, lng } = this.props.initialCenter;\n    this.state = {\n      currentLocation: {\n        lat: lat,\n        lng: lng\n      },\n      isCurrMarkerShown:false,\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      Facilities: []\n    };\n  }\n\n  componentDidMount() {\n      //upon initialization, get browser geolocation\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          position => {\n            this.setState(prevState => ({\n              currentLocation: {\n                ...prevState.currentLatLng,\n                lat: position.coords.latitude,\n                lng: position.coords.longitude\n              },\n              isCurrMarkerShown: true\n            }))\n          }\n        )\n      } else {\n        console.log(\"Failed to mount current location\")\n      }\n      this.getFacilities();\n  }\n  getFacilities=()=> {\n      fetch(`http://162.243.165.50:4000/Facilities`)\n      .then(result => result.json())\n      .then(res => this.setState({ Facilities:res.data}))\n      .catch(err => console.log(err))\n  };\n  facilityPins() {\n      console.log(\"Made it this far \");\n      this.state.Facilities.map((facility) => {\n      var geocoder = new Geocoder();\n      var plat='';\n      var plng='';\n      var address = facility.AddressStreet +' '+ facility.AddressCity +' '+ facility.AddressZip;\n      geocoder.geocode( { 'address': address}, function(results, status) {\n        if (status === 'OK') {\n           plat = results[0].geometry.location.lat();\n           plng = results[0].geometry.location.lng();\n        } else {\n          console.log(\"Geocode was not successful for the following reason: \" + status);\n        }\n      });\n      console.log('Latitude: ' + plat + ' Logitude: ' + plng);\n      return <Marker \n                position={{ lat:plat, lng:plng }}\n                onClick={this.onMarkerClick}\n                name={facility.FacilityName}\n              />\n  })}\n  getGeocode(facility) {\n    var geocoder = new Geocoder();\n    var address = facility.AddressStreet +' '+ facility.AddressCity +' '+ facility.AddressZip;\n    var geocode = {plat: '', plng: ''};\n    geocoder.geocode( {'address': address}, function(results, status) {\n      if (status === 'OK') {\n        geocode.plat = results[0].geometry.location.lat();\n        geocode.plng = results[0].geometry.location.lng();\n      } else {\n        console.log(\"Geocode was not successful for the following reason: \" + status);\n      }\n    });\n    return geocode;\n  }\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true,\n  });\n\n  onClose = props => {\n        if (this.state.showingInfoWindow) {\n          this.setState({\n            showingInfoWindow: false,\n            activeMarker: null\n          });\n        }\n  };\n  render() {\n    console.log(this.state.Facilities)\n    return (\n      <div>\n    \n          <Map google={this.props.google}\n                style={{width: '75vw', height: '75vh', position: 'center'}}\n                className={'map'}\n                zoom={14}\n                center={{\n                  lat: this.state.currentLocation.lat,\n                  lng: this.state.currentLocation.lng\n                }}>\n               \n              <Marker\n                name={'Your location'}\n                onClick={this.onMarkerClick}\n                position={{\n                  lat: this.state.currentLocation.lat,\n                  lng: this.state.currentLocation.lng\n                }}\n              />\n              <InfoWindow onClose={this.onInfoWindowClose}>\n              <div>\n                  <h1>{this.state.selectedPlace.name}</h1>\n              </div>\n              </InfoWindow>\n          \n              { this.state.Facilities.map( function(facility) { \n                    var geo = this.getGeocode(facility);\n                    var lat = geo.plat;\n                    var lng = geo.plng;\n                    return (\n                    <Marker \n                            position={{ lat:lat, lng:lng }}\n                            onClick={this.onMarkerClick}\n                            name={facility.FacilityName}\n                    />\n                )})\n              }\n              \n\n          </Map>\n      </div>\n      )\n   }\n}\n\n//initial centering positioned at UH.\nMapGen.defaultProps = {\n  zoom: 14,\n  initialCenter: {\n    lat: -29.41,\n    lng: 95.38\n  },\n  centerAroundCurrentLocation: false,\n  visible: true\n};\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDKOXGgce4aWbeOHVnhgD8S0NJJph3ShCc'\n})(MapGen)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GoogleApiWrapper, InfoWindow, Marker, Geocoder, Map, google } from 'google-maps-react';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\nimport Geocode from \"react-geocode\";\nimport { withStyles } from '@material-ui/core';\nimport phoneIcon from '@material-ui/icons/MyLocation';\n\nexport class TryingToWorkMap extends React.Component {\n  constructor(props) {\n    super(props)\n    const { lat, lng } = this.props.initialCenter;\n    this.state = {\n      currentLocation: {\n        lat: lat,\n        lng: lng\n      },\n      isCurrMarkerShown:false,\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      Facilities: [],\n      FacilitiesGeoCode:[],\n    };\n  }\n\n  componentDidMount() {\n      //upon initialization, get browser geolocation\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          position => {\n            this.setState(prevState => ({\n              currentLocation: {\n                ...prevState.currentLatLng,\n                lat: position.coords.latitude,\n                lng: position.coords.longitude\n              },\n              isCurrMarkerShown: true\n            }))\n          }\n        )\n      } else {\n        console.log(\"Failed to mount current location\")\n      }\n      this.getFacilities();\n  }\n  getFacilities=()=> {\n      fetch(`http://162.243.165.50:4000/Facilities`)\n      .then(result => result.json())\n      .then(res => this.setState({ Facilities:res.data}))\n      .catch(err => console.log(err))\n  };\n  facilityPins() {\n      console.log(\"Made it this far \");\n      this.state.Facilities.map((facility) => {\n      var geocoder = new Geocoder();\n      var plat='';\n      var plng='';\n      var address = facility.AddressStreet +' '+ facility.AddressCity +' '+ facility.AddressZip;\n      geocoder.geocode( { 'address': address}, function(results, status) {\n        if (status === 'OK') {\n           plat = results[0].geometry.location.lat();\n           plng = results[0].geometry.location.lng();\n        } else {\n          console.log(\"Geocode was not successful for the following reason: \" + status);\n        }\n      });\n      console.log('Latitude: ' + plat + ' Logitude: ' + plng);\n      return <Marker \n                position={{ lat:plat, lng:plng }}\n                onClick={this.onMarkerClick}\n                name={facility.FacilityName}\n              />\n  })}\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true,\n  });\n\n  onClose = props => {\n        if (this.state.showingInfoWindow) {\n          this.setState({\n            showingInfoWindow: false,\n            activeMarker: null\n          });\n        }\n  };\n  uploadFacilityCodes(){\n      Geocode.setApiKey(\"AIzaSyDKOXGgce4aWbeOHVnhgD8S0NJJph3ShCc\");\n      var coordinates = {lat: '', lng: ''};\n      const codes=[];\n      var i;\n      console.log(this.state.Facilities)\n      if(this.state.FacilitiesGeoCode.length <= this.state.Facilities.length){\n        for (i = 0; i < this.state.Facilities.length; i++) { \n          var address=this.state.Facilities[i].AddressStreet + ' '+ this.state.Facilities[i].AddressCity + ' '+ this.state.Facilities[i].AddressZip;\n          \n          Geocode.fromAddress(address).then(\n            response => {\n              coordinates.lat = response.results[0].geometry.location.lat;\n              coordinates.lng = response.results[0].geometry.location.lng;\n              this.state.FacilitiesGeoCode.push(coordinates);\n              console.log(address)\n            },\n            error => {\n              console.error(error);\n            }\n          );\n        }\n        //console.log(this.state.FacilitiesGeoCode)\n      }\n  }\n  showAllMarkers(){\n    var i;\n    for( i=0;i<2;i++){\n      return (\n        \n        <Marker\n              name={'Your location'}\n              onClick={this.onMarkerClick}\n              position={{\n                lat: this.state.currentLocation.lat,\n                lng: this.state.currentLocation.lng\n              }}\n              icon={phoneIcon}\n            />\n      )\n    }\n    \n  }\n  render() {\n    return (\n      <div>\n        <Map google={this.props.google}\n          style={{width: '100vw', height: '100vh', position: 'center', margin: 'auto'}}\n          className={'map'}\n          zoom={12}\n          center={{\n            lat: this.state.currentLocation.lat,\n            lng: this.state.currentLocation.lng\n          }}\n        >\n          <Marker\n                name={'Your location'}\n                onClick={this.onMarkerClick}\n                position={{\n                  lat: this.state.currentLocation.lat,\n                  lng: this.state.currentLocation.lng\n                }}\n                icon={phoneIcon}\n          />\n          <Marker\n                name={'Your location'}\n                onClick={this.onMarkerClick}\n                position={{\n                  lat: '29.705566',\n                  lng: '-95.474180'\n                }}\n          />\n          <Marker\n                name={'Your location'}\n                onClick={this.onMarkerClick}\n                position={{\n                  lat: '29.761526',\n                  lng: '-95.365127'\n                }}\n          />\n          <Marker\n                name={'Your location'}\n                onClick={this.onMarkerClick}\n                position={{\n                  lat: '29.760987',\n                  lng: '-95.367759'\n                }}\n          />\n        </Map>\n      </div>\n      )\n   }\n}\n\n//initial centering positioned at UH.\nTryingToWorkMap.defaultProps = {\n  zoom: 14,\n  initialCenter: {\n    lat: -29.41,\n    lng: 95.38\n  },\n  centerAroundCurrentLocation: false,\n  visible: true\n};\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDKOXGgce4aWbeOHVnhgD8S0NJJph3ShCc'\n})(TryingToWorkMap)\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Paper, Typography, IconButton, Button, Icon } from \"@material-ui/core\";\nimport MapGen from '../Components/Locator/MapGen'\nimport TryingToWorkMap from '../Components/Locator/TryingToWorkMap';\nimport HomeLogo  from '@material-ui/icons/KeyboardArrowLeftRounded';\n\nconst styles = theme => ({\n    background: {\n      backgroundImage: '../Components/Home/BackgroundPicture.jpg',\n      /* Full height */\n      height: '100vh',\n      /* Center and scale the image nicely */\n      backgroundPosition: 'center',\n      backgroundRepeat: 'repeat',\n      backgroundSize: 'cover',\n    },\n    mapContainer: {\n      width: '100vw',\n      height: '100vh',\n      flexDirection: 'column',\n      backgroundColor: \"#a09d9d\",\n      margin:\"auto\",\n      display: 'flex',\n\n    },\n    icon: {\n      fontSize: \"150%\",\n  },\n});\n\nexport class Locator extends React.Component {\n\n  redirect(){\n    if(window.localStorage.loggedIn !== \"true\"){\n      window.location.replace('/')\n    }\n    else{\n      window.location.replace('/Appointments')\n    }\n  }\n  render() { \n    const{classes}=this.props;\n    return (\n      <div className={classes.mapContainer}>\n      <TryingToWorkMap/>\n        <IconButton onClick={this.redirect}>\n            <HomeLogo style={{color: \"#212121\"}} className={classes.icon} />\n        </IconButton>\n         \n      </div>\n    );\n  }\n}\n\nLocator.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Locator);","import React, { Component } from 'react';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport {Route} from 'react-router-dom';\nimport Home from './Pages/Home';\nimport Appointments from './Pages/Appointments';\nimport Registration from './Pages/Registration';\nimport Profile from './Pages/Profile';\nimport Scheduling from './Pages/Scheduling';\nimport Report from './Pages/Report';\nimport DoctorRegistration from './Pages/DoctorRegistration';\nimport Locator from './Pages/Locator';\n\nclass Paths extends Component{\n    state = {\n        loggedIn: true,\n    }\n    render() {\n        return(\n            <BrowserRouter>\n                <div className=\"Routes\">\n                    <Route path=\"/\" exact component={Home}/>\n                    <Route path=\"/Appointments\" exact component={Appointments}/>\n                    <Route path=\"/Registration\" exact component={Registration}/>\n                    <Route path=\"/Profile\" exact component={Profile}/>\n                    <Route path=\"/Locator\" exact component={Locator}/>\n                    <Route path=\"/Scheduling\" exact component={Scheduling}/>\n                    <Route path=\"/Reports\" exact component={Report}/>\n                    <Route path=\"/DoctorRegistration\" exact component={DoctorRegistration}/>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default Paths;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Paths from './Paths';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Paths />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}