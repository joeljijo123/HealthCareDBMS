{"version":3,"sources":["Components/GeneralComponents/NavigationBar.js","Components/Home/HomeLoginBox.js","Pages/Home.js","Components/Appointments/WhichFacility.js","Components/Appointments/WhichDoctor.js","Components/Appointments/CompleteNewAppointment.js","Components/Appointments/NewAppointmentForm.js","Components/Appointments/AddDiagnosis.js","Components/Appointments/ShowDiagnosis.js","Components/Appointments/ShowPrescriptions.js","Components/Appointments/AddPrescription.js","Components/Appointments/AddSpecilaistReccomendation.js","Components/Appointments/PatientMedicalHistory.js","Components/Appointments/AppointmentHistory.js","Pages/Appointments.js","Components/Registration/BasicInformation.js","Components/Registration/BasicInformationPtTwo.js","Components/Registration/RegistrationForm.js","Pages/Registration.js","Components/Profile/MedicalInformation.js","Components/Profile/ProfileInfoTest.js","Pages/Profile.js","Components/Scheduling/ModifyFacility.js","Components/Scheduling/WhichDay.js","Components/Scheduling/AddNewDay.js","Components/Scheduling/AppointmentsAffected.js","Components/Scheduling/DaySchedule.js","Pages/Scheduling.js","Pages/DoctorRegistration.js","Pages/Locator.js","Components/Administration/FacilityReports.js","Components/Administration/DoctorsReport.js","Components/Administration/CheckUpReport.js","Components/Administration/AddAFacility.js","Components/Administration/ChangeAFacility.js","Components/Administration/Facilities.js","Components/Administration/ReportsGenerator.js","Pages/Administration.js","Paths.js","serviceWorker.js","index.js"],"names":["NavigationBar","state","loggedIn","userid","userType","currentTab","_this","props","Tab","AppointmentPageRedirect","window","location","replace","ProfilePageRedirect","SchedulePageRedirect","AdministrationPageRedirect","DocRegistrationRedirect","LocatorPageRedirect","logout","setState","localStorage","setItem","storageLoggedIn","getItem","userID","this","_this$props","classes","title","react_default","a","createElement","className","root","AppBar_default","bar","position","Toolbar_default","Typography_default","variant","BarTitle","index_es","textColor","value","label","onClick","React","Component","withStyles","flexGrow","marginTop","backgroundColor","minHeight","height","MenuIcon","marginLeft","marginRight","HomeLoginBox","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","defineProperty","target","name","handleRegistration","login","fetch","concat","Username","then","result","json","res","data","length","Password","password","LoginTableID","setUserType","catch","err","console","log","getFacilities","searchCity","Facilities","displaySearchRes","_","displayResults","handleClickOpen","openForm","handleClose","displayList","firstName","bind","assertThisInitialized","_this2","RoleID","EmployeeID","updateAppTimes","PatientID","Paper_default","elevation","component","form","FormControl_default","margin","fullWidth","required","htmlFor","autoFocus","onChange","type","submitButton","color","size","Dialog_default","Dialog","maxWidth","open","onClose","DialogPaper","DialogTitle_default","id","gutter","Search_default","DialogContent_default","Table_default","table","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","map","Each","key","FacilityID","FacilityName","AddressStreet","AddressCity","AddressState","AddressZip","DialogActions_default","theme","width","alignItems","display","flexDirection","padding","spacing","unit","Home","GeneralComponents_NavigationBar","Home_HomeLoginBox","WhichFacility","select","val","option","WhichDoctor","DoctorID","Doctors","FirstName","Reason","inputProps","maxLength","material_ui_pickers_esm","utils","DateFnsUtils","minDate","Date","AppointmentDate","AppointmentDateChange","container","flexWrap","textField","AppointmentTimeID","AppointmentTimes","TimeSlotID","AppointmentTime","NewAppointmentForm","componentDidMount","uploadFacilities","step","DBFormattedDate","d","ApptDate","FormatDate","date","getFullYear","fixMonth","getDate","getMonth","Response","uploadDoctors","Specialist","uploadTimes","method","headers","Content-Type","body","JSON","stringify","AppDate","handleNextStep","handleSubmit","TimeID","setTimeout","handleBackStep","Appointments_WhichFacility","Button_default","disabled","Appointments_WhichDoctor","Appointments_CompleteNewAppointment","Button","ControlPointOutlined_default","icon","DialogContentText_default","getStepInfo","fontSize","&:hover","AddDiagnosis","handleDiagnosisAdd","AppointmentID","Diagnosis","AppID","ShowDiagnosis","uploadDiagnosis","DiagnosisID","scope","overflowX","minWidth","ShowPrescriptions","uploadPrescriptions","Prescriptions","PrescriptionIssueID","RefillLeft","DueDate","substr","Medicine","AddPrescription","uploadMedicineTypes","PrescriptionID","DBDueDate","Refills","DueDateChange","MedicineTypes","_this3","AddSpecialistReccomendation","handleSpecialistAdd","Specialists","uploadSpecialists","LastName","PatientMedicalHistory","getMedicalRecord","allergies","Allergies","immunizationRecord","ImmunizationRecord","medicalCondition","MedicalCondition","procedureRecord","ProcedureRecord","error","getLog","MHLog","editing","editMode","deduct","insuranceID","insuranceContact","company","saveChange","getInsurance","Deductible","InsuranceClientID","ContactNumber","Name","patientID","lastUpdatedBy","updateMedicalRecord","InfoOutlined_default","fullScreen","dialog","item","sm","multiline","rows","Table","UpdatedAt","UpdatedBy","xs","button","dense","menu","TablePaper","AppointmentHistory","grabAppointments","UserType","UserID","Appointments","panel","event","expanded","handleProper","handleAppointmentCancel","handleClickOpenCancellation","apptID","selectedAppt","handleCloseCancellation","cancelApptShow","PatientIDs","AdminPatient","grabPatientIDs","page","idAppointment","ExpansionPanel_default","square","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","heading","Patient","Doctor","currentStatus","ExpansionPanelDetails_default","secondaryHeading","Street","City","State","ZipCode","Appointments_AddDiagnosis","AddSpecilaistReccomendation","Appointments_AddPrescription","Appointments_ShowDiagnosis","Appointments_PatientMedicalHistory","Appointments_ShowPrescriptions","Appointments_NewAppointmentForm","Paper","AdditionButton","typography","pxToRem","flexBasis","flexShrink","iconHistory","palette","text","secondary","marginBottom","Appointments_AppointmentHistory","validatePassword","BasicInformation","username","helperText","roles","RoleTitle","Email","TextMaskCustom","other","esm_extends","reactTextMask_default","assign","guide","mask","placeholderChar","showMask","DateMaskCustom","SSNMaskCustom","BasicInformationPtTwo","states","StateID","StateString","placeholder","DateOfBirth","inputComponent","Sex","sexes","SexID","Gender","raceID","races","RaceID","Race","SSN","CellNumber","RegistrationForm","registerUser","completion","homeRedirect","stepNext","registrationStep","uploadStates","uploadSexes","uploadRoles","uploadRaces","IconButton_default","LoginDirect","icons_Home_default","style","LockOpenOutlined_default","paperForm","Registration_BasicInformation","moveNextInvalid","Registration_BasicInformationPtTwo","RegisterInvalid","TextField","middleInitial","Registration","Registration_RegistrationForm","MedicalInformation","editImmunizationRecord","editMedicalCondition","editAllergies","editProcedureRecord","margine","handleChangeImmunizationRecord","handleChangeMedicalCondition","handleChangeAllergies","handleChangeProcedureRecord","ProfileInfoTest","retrieveUserInfo","first","last","user","pass","email","dob","DOB","ssn","sex","cellnumber","streetaddr","cityaddr","stateaddr","AddressStateID","zipaddr","updateUserInfo","InsuranceID","saveChanges","revertChanges","noValidate","autoComplete","defaultValue","substring","PhoneMaskCustom","validateUsername","EmptyEntries","editerButtons","Save_default","Cancel_default","Edit_default","Profile","Profile_ProfileInfoTest","Profile_MedicalInformation","backgroundImage","Image","ModifyFacility","i","selectedFacility","handleDoneSelected","WorkSchedule","WeekDayID","Sub_DayID","getFacilityIDFromName","UpdateDayID","NewFacilityID","Sub_FacilityID","lookUpName","WhichDay","DayID","OpenDays","WeekDay","AddNewDay","getOpenDaysList","handleConfirmChange","newDayList","shouldAddNew","Weekdays","k","push","Scheduling_WhichDay","AppointmentsAffected","DaySchedule","grabWorkSchedule","getWeekday","dayID","selectedDayID","handleConfirmRemove","RemoveDayID","Scheduling_ModifyFacility","getDayName","Scheduling_AddNewDay","Scheduling_AppointmentsAffected","Scheduling","Scheduling_DaySchedule","DoctorRegistration","Locator","FacilityReports","MinDateChange","MinimumDateDB","MinimumDate","MaxDateChange","MaximumDateDB","MaximumDate","handlechoseChange","_this$setState2","checked","fetchFacilityReport","checkAllDates","ChosenFacility","Report","DoctorsCount","Count","_this4","control","DoctorsWorking","UpcomingApps","CancelledApps","CompletedApps","totalApps","DoctorsReport","fetchDoctorReport","ChosenDoctor","Apps","Diagnoses","DaysWorking","CheckUpReport","fetchCheckUps","AddAFacility","States","Administrators","AdminID","AddFacility","fetchStates","fetchAdministrators","Admin","Fname","invalidEntries","ChangeAFacility","ChangeFacility","fetchFacilities","AdministratorID","Administration","Administration_AddAFacility","Administration_ChangeAFacility","Zip","Contact","ReportsGenerator","Administration_FacilityReports","Administration_DoctorsReport","checkUp","Administration_CheckUpReport","Administration_ReportsGenerator","Paths","react_router_dom","react_router","path","exact","Boolean","hostname","match","ReactDOM","render","src_Paths","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5dc359a0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { Tab, Tabs, CssBaseline } from '@material-ui/core';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  BarTitle: {\n    flexGrow: 1,\n    marginTop: \"1%\"\n  },\n  bar: {\n    backgroundColor: \"#e0e0e0\",\n    minHeight: 100,\n    height: '100%',\n\n  },\n  MenuIcon: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n};\n\n  class NavigationBar extends React.Component {\n    state = {\n      loggedIn: null,\n      userid: null,\n      userType: null,\n      currentTab: this.props.Tab,\n    };\n\n    logInSet(storageLoggedIn) {\n      return localStorage.getItem(storageLoggedIn) === 'true' ? true : false;\n    }\n    AppointmentPageRedirect = () =>{\n      window.location.replace('/Appointments');\n    }\n    ProfilePageRedirect = () =>{\n      window.location.replace('/Profile');\n    }\n    SchedulePageRedirect = () =>{\n      window.location.replace('/Scheduling');\n    }\n    AdministrationPageRedirect = () =>{\n      window.location.replace('/Administration');\n    }\n    DocRegistrationRedirect = () =>{\n      window.location.replace('/DoctorRegistration');\n    }\n    LocatorPageRedirect = () =>{\n      window.location.replace('/Locator')\n    }\n    logout = () =>{\n      this.setState({loggedIn:false,userid:null,userType:null})\n      localStorage.setItem(\"userID\", null);\n      localStorage.setItem(\"userType\", null);\n      localStorage.setItem(\"LoginTableID\", null);\n      localStorage.setItem(\"loggedIn\", false);\n      window.location.replace('/')\n    }\n    componentDidMount() {\n      if(localStorage.userID !== null){\n        this.setState({loggedIn: true, userType: localStorage.userType});\n      }\n      else{\n        this.setState({loggedIn:false,userid:null,userType:null})\n      }\n      //HardCoding\n      //Query to see if the user is an employee or a Patient then\n      \n    }\n    render() {\n      const { classes, title } = this.props;\n      return (\n        <div className={classes.root}>\n          <AppBar className={classes.bar} position=\"static\">\n            <Toolbar>\n              {window.localStorage.loggedIn === \"true\" ? (\n                <div>\n                  <Toolbar >\n                    <Typography variant=\"h3\" className={classes.BarTitle}>\n                      {title}\n                    </Typography>\n                    <CssBaseline/>\n                  </Toolbar>\n                  <Tabs textColor=\"primary\" value={this.state.currentTab}>\n                      <Tab label=\"Appointments\" onClick={this.AppointmentPageRedirect}></Tab>\n                      <Tab label=\"My Profile\" onClick={this.ProfilePageRedirect}></Tab>\n                      {(window.localStorage.userType !== \"2\" && window.localStorage.userType !== \"3\") && \n                        <Tab label=\"My Schedule\" onClick={this.SchedulePageRedirect}></Tab>\n                      }\n                      {window.localStorage.userType === \"3\"  && \n                          <Tab label=\"Administration\" onClick={this.AdministrationPageRedirect}></Tab>\n                          //<Tab label=\"Register A Doctor\" onClick={this.DocRegistrationRedirect}></Tab>\n                      }\n                      {window.localStorage.userType === \"3\" &&\n                          <Tab label=\"Register A New User\" onClick={this.DocRegistrationRedirect}></Tab>\n                      }\n                      {window.localStorage.userType !== \"2\"  && \n                          <Tab label=\"Facilities\" onClick={this.LocatorPageRedirect}></Tab>\n                      }\n                      <Tab label=\"Logout\" onClick={this.logout}></Tab>\n                  </Tabs>\n                  \n                </div>\n              ):(\n                <Typography variant=\"h3\"className={classes.BarTitle}>\n                  {title}\n                </Typography>\n              )}\n            </Toolbar>\n          </AppBar>\n        </div>\n      );\n    }\n}\n\nNavigationBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(NavigationBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport {Input, InputLabel, Button} from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { TextField } from \"@material-ui/core\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst styles = theme =>({\n  root: {\n    width: '25%',\n    marginLeft: '65%',\n    marginTop: '10%',\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: 'column',\n    backgroundColor: \"#e0e0e0\",\n    padding: theme.spacing.unit*3\n\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing.unit\n  },\n  submitButton: {\n      marginTop: '20px'\n  },\n  DialogPaper: {\n    backgroundColor: \"#e0e0e0\",\n    padding: theme.spacing.unit*2,\n    margin:\"auto\",\n    width: '96%'\n  }\n});\n\nclass HomeLoginBox extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            userType: null,\n            firstName:null,\n            Username: \"\",\n            password: \"\",\n            loggedIn: false,\n            openForm: false,\n            Facilities: [],\n            displayResults: false,\n            searchCity: \"\",\n        };\n        this.handleChange=this.handleChange.bind(this);\n    }\n    \n    handleChange = e =>{\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n        \n    }\n    handleRegistration = () => {\n        window.location.replace('/Registration');\n    }\n    login = () => {\n        fetch(`http://162.243.165.50:4000/login/${this.state.Username}`)\n        .then(result => result.json())\n        .then(res => {\n            if(res.data.length === 1){\n                if(res.data[0].Password === this.state.password){\n                    window.localStorage.setItem(\"loggedIn\", 'true');\n                    window.localStorage.setItem(\"LoginTableID\", res.data[0].LoginTableID);\n                    this.setUserType();                }\n                else{\n                    window.localStorage.setItem(\"loggedIn\", 'false');\n                }\n            }\n            else{\n                window.localStorage.setItem(\"loggedIn\", 'false');\n            }\n        })\n        .catch(err => console.log(err))\n    }\n    \n    setUserType(){\n        fetch(`http://162.243.165.50:4000/Employee/${window.localStorage.LoginTableID}`)\n        .then(result => result.json())\n        .then(res => {\n            if(res.data.length === 1){\n                window.localStorage.setItem(\"userType\", res.data[0].RoleID); \n                window.localStorage.setItem(\"userID\", res.data[0].EmployeeID);  \n                this.setState({loggedIn:true});      \n                this.updateAppTimes();\n            }\n            else{  \n                fetch(`http://162.243.165.50:4000/Patient/${window.localStorage.LoginTableID}`)\n                .then(result => result.json())\n                .then(res => {\n                    if(res.data.length === 1){\n                        window.localStorage.setItem(\"userType\", 2); \n                        window.localStorage.setItem(\"userID\", res.data[0].PatientID);   \n                        this.setState({loggedIn:true});   \n                        this.updateAppTimes();          \n                    }\n                })\n                .catch(err => console.log(err))\n            }\n        })\n        .catch(err => console.log(err))\n    }\n    updateAppTimes(){\n        fetch(`http://162.243.165.50:4000/AppUpdate/`)\n        .then(result => result.json())\n\n    }\n    componentDidMount() {\n        window.localStorage.setItem(\"userID\", null);\n        window.localStorage.setItem(\"userType\", null);\n        window.localStorage.setItem(\"LoginTableID\", null);\n        window.localStorage.setItem(\"loggedIn\", false);\n    }\n  getFacilities=()=> {\n      fetch(`http://162.243.165.50:4000/Facilities/${this.state.searchCity}`)\n      .then(result => result.json())\n      .then(res => this.setState({ Facilities:res.data}))\n      .catch(err => console.log(err))\n  };\n  displaySearchRes = _ => {\n    this.getFacilities();\n      this.setState({\n          displayResults: true\n      });\n  }\n  handleClickOpen = () => {\n  this.setState({ openForm: true });\n  };\n\n  handleClose = () => {\n     this.setState({ \n        Facilities: [],\n        searchCity: \"\",\n        displayList: false,\n        openForm:false,\n     });\n  };\n  render(){\n    const {classes}=this.props;\n    if(this.state.loggedIn === false){\n        return(\n         \n            <Paper elevation={15} className={classes.root}>\n              <Typography component=\"h1\" variant=\"h4\">\n                  Log In\n              </Typography>\n              <form className={classes.form}>\n                  <FormControl margin=\"normal\" fullWidth required>\n                      <InputLabel htmlFor=\"Username\">Username</InputLabel>\n                      <Input name=\"Username\" autoFocus value={this.state.Username} onChange={this.handleChange}></Input>\n                  </FormControl>\n                  <FormControl margin=\"normal\" fullWidth required>\n                      <InputLabel htmlFor=\"Password\">Password</InputLabel>\n                      <Input type =\"password\" value={this.state.password} name=\"password\" onChange={this.handleChange}></Input>\n                  </FormControl>\n                  <FormControl fullWidth className={classes.submitButton}>\n                      <Button\n                      variant=\"contained\"\n                      onClick={this.login}\n                      color=\"primary\">\n                          Log In\n                      </Button>\n                  </FormControl>\n                  <FormControl  className={classes.submitButton}>\n                      <Button\n                      size=\"small\"\n                      onClick={this.handleRegistration}\n                      color=\"primary\">\n                          Dont have an Account? Click here to Register\n                      </Button>\n                  </FormControl>\n                  <FormControl  className={classes.submitButton}>\n                      <Button\n                      size=\"small\"\n                      onClick={this.handleClickOpen}\n                      color=\"primary\">\n                          Need to find one of our Clinics?\n                      </Button>\n                  </FormControl>\n              </form>\n         \n      \n                <Dialog className={classes.Dialog} maxWidth=\"md\" fullWidth open={this.state.openForm} onClose={this.handleClose}>\n                <Paper className={classes.DialogPaper}>                    \n                    <DialogTitle id=\"form-dialog-title\">Locations</DialogTitle>\n                    <br/>\n                    <FormControl  fullWidth margin=\"auto\" >\n                        <TextField\n                            name=\"searchCity\"\n                            label=\"City Vicinity to Search\"\n                            variant=\"outlined\"\n                            value={this.state.searchCity}\n                            onChange={this.handleChange}\n                            gutter\n                        />\n                    </FormControl>\n                    <br/>\n                    <br/>\n                    <Button variant=\"primary\" fullWidth size=\"medium\" onClick={this.displaySearchRes}>\n                        <SearchIcon />\n                    </Button>\n                    <br/>\n                    <DialogContent>\n                        {this.state.displayResults &&\n                            <Table className={classes.table}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align=\"center\">Facility Name</TableCell>\n                                    <TableCell align=\"center\">Address</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                            \n                            {this.state.Facilities.map(Each => (\n                                <TableRow key={Each.FacilityID}>\n                                    <TableCell align=\"center\">{Each.FacilityName}</TableCell>\n                                    <TableCell align=\"center\">{Each.AddressStreet}, {Each.AddressCity},{Each.AddressState} {Each.AddressZip} </TableCell>\n                                </TableRow>\n                            ))}\n                            </TableBody>\n                            </Table> \n                        }    \n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Close\n                        </Button>\n                    </DialogActions>\n                    </Paper>\n                </Dialog>\n                 </Paper>\n \n        );\n    }\n    else return(\n        <div>{window.location.replace('/Appointments')}</div>\n    );\n    \n  }\n}\n\nHomeLoginBox.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  \nexport default withStyles(styles)(HomeLoginBox);","import React, { Component } from 'react';\nimport './Home.css';\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\nimport HomeLoginBox from '../Components/Home/HomeLoginBox';\n\n\nclass Home extends Component {\n  render() { \n    return (\n      <div className='Home-image'>\n        <div className='Home-overlay'>\n          <NavigationBar title={\"Team 7 Medical Database Project\"}/>\n            <HomeLoginBox/>\n        </div>\n      </div>\n    );\n  } \n}\n\nexport default Home;\n","import { TextField, MenuItem } from \"@material-ui/core\";\nimport React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\n\n\nfunction WhichFacility(props){\n    \n    return(\n        <div>\n            <FormControl margin=\"normal\" fullWidth>\n                    <TextField\n                        id=\"FacilityID\"\n                        select\n                        label=\"Please Choose A Facility\"\n                        name=\"FacilityID\"\n                        variant=\"standard\"\n                        onChange={props.handleChange}\n                        value={props.val.FacilityID}   \n                        required                   \n                    >\n                        {props.val.Facilities.map(option => (\n                            <MenuItem key={option.FacilityID} value={option.FacilityID}>\n                                {option.FacilityName}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                </FormControl>\n        </div>\n    );\n}\n\nexport default WhichFacility;","import { TextField, MenuItem } from \"@material-ui/core\";\nimport React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\n\nfunction WhichDoctor(props){\n    return(\n        <div>\n            <FormControl margin=\"normal\" fullWidth>\n                    <TextField\n                        id=\"DoctorID\"\n                        select\n                        label=\"Please Choose A Doctor\"\n                        name=\"DoctorID\"\n                        variant=\"standard\"\n                        onChange={props.handleChange}\n                        value={props.val.DoctorID}   \n                        required                   \n                    >\n                    {props.val.Doctors.map(option => (\n                        <MenuItem key={option.EmployeeID} value={option.EmployeeID}>\n                            Dr. {option.FirstName}\n                        </MenuItem>\n                    ))}\n                    </TextField>\n                    <TextField \n                        name=\"Reason\"\n                        label=\"Reason for Appointment\" \n                        variant=\"standard\"\n                        onChange={props.handleChange}\n                        value={props.val.Reason}\n                        inputProps={{ maxLength: 100 }}\n                    />\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DatePicker\n                            minDate={new Date()}\n                            label=\"Appointment Date\"\n                            name=\"AppointmentDate\"\n                            value={props.val.AppointmentDate}\n                            onChange={props.AppointmentDateChange}\n                        />\n                    </MuiPickersUtilsProvider>\n                </FormControl>\n        </div>\n    );\n}\n\nexport default WhichDoctor;\n","import React from 'react';\nimport { TextField, MenuItem } from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst styles = theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      width: 200,\n    },\n  });\n\n\n  //This function should allow the user to select a time for the appointment \nfunction CompleteNewAppointment(props){\n    return(\n        <div>\n            <FormControl fullWidth>\n                    <TextField\n                        id=\"AppointmentTimeID\"\n                        select\n                        label=\"Please Choose A Time\"\n                        name=\"AppointmentTimeID\"\n                        variant=\"standard\"\n                        onChange={e=>props.handleChange(e)}\n                        value={props.val.AppointmentTimeID}   \n                        required                   \n                    >\n                    {props.val.AppointmentTimes.map(option => (\n                        <MenuItem key={option.TimeSlotID} value={option.TimeSlotID}>\n                            {option.AppointmentTime}\n                        </MenuItem>\n                    ))}\n                    </TextField>\n                </FormControl>\n        </div>\n    );\n}\n\nCompleteNewAppointment.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n  \n  export default withStyles(styles)(CompleteNewAppointment);","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport WhichFacility from './WhichFacility';\nimport WhichDoctor from './WhichDoctor';\nimport CompleteNewAppointment from './CompleteNewAppointment';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddButton from '@material-ui/icons/ControlPointOutlined';\nimport { withStyles } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n    icon: {\n      fontSize: 25,\n      color: \"#f5f5f5\",\n      '&:hover': {\n        color: '#e0e0e0',\n      },\n    },\n    Button: {\n        marginTop: \".5%\"\n    }\n});\n\nclass NewAppointmentForm extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            openForm: false,\n            step: 0,\n            FacilityID: \"\",\n            DoctorID: \"\",\n            AppointmentTimeID:\"\",\n            Facilities: [],\n            Doctors: [],\n            AppointmentTimes: [],\n            Reason: null,\n            AppointmentDate: null,\n            DBFormattedDate: null,\n        };\n        this.uploadDoctors=this.uploadDoctors.bind(this);\n    }\n\n    componentDidMount = () => {\n        this.setState({\n            AppointmentTimes: [{\n                TimeSlotID: -1,\n                AppointmentTime: \"No Appointment Times for the chosen Date\"\n            }]\n        })\n        this.uploadFacilities();\n    };\n\n    handleClickOpen = () => {\n        this.setState({ openForm: true });\n    };\n\n    handleClose = () => {\n        this.uploadFacilities();\n        this.setState({ \n            openForm: false,\n            step: 0,\n            FacilityID: \"\",\n            DoctorID: \"\",\n            AppointmentTimeID:\"\",\n            Facilities: [],\n            Doctors: [],\n            AppointmentTimes: [],\n            Reason: null,\n            AppointmentDate: null,\n            DBFormattedDate: null,\n        });\n    };\n\n    AppointmentDateChange = (d) =>{\n        let ApptDate=new Date(d)\n        ApptDate = this.FormatDate(ApptDate);\n        this.setState({DBFormattedDate:ApptDate});\n        this.setState({\n            AppointmentDate: d\n        })\n    }\n\n    FormatDate=(date)=>{\n        date = date.getFullYear() + '-' + (this.fixMonth(date)) + '-' + date.getDate();\n        return date;\n    }\n\n    fixMonth=(date)=>{\n        if(date.getMonth() + 1 < 10){\n            return \"0\" +(date.getMonth() +1);\n        }\n        else{\n            return date.getMonth()+1;\n        }\n    }\n\n    handleChange = e =>{\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n\n    getStepInfo(step){\n        switch(step){\n            case 0:\n                return (<div>\n                            <WhichFacility val={this.state} handleChange={this.handleChange}/>\n                            <Button onClick={this.handleNextStep} disabled={this.state.FacilityID===\"\"} color=\"primary\">\n                                Next\n                            </Button>\n                        </div>)\n            case 1:\n            \n                return (<div>\n                            <WhichDoctor val={this.state} handleChange={this.handleChange}  AppointmentDateChange={this.AppointmentDateChange}/>\n                            <Button onClick={this.handleBackStep} color=\"primary\">\n                                Back\n                            </Button>\n                            <Button onClick={this.handleNextStep} disabled={this.state.DoctorID===\"\" || this.state.AppointmentDate===\"\"} color=\"primary\">\n                                Next\n                            </Button>\n                        </div>)\n            case 2:\n                \n                return (<div>\n                            <CompleteNewAppointment  val={this.state} AppointmentDateChange={this.AppointmentDateChange} handleChange={this.handleChange}/>\n                            <Button onClick={this.handleBackStep} color=\"primary\">\n                                Back\n                            </Button>\n                            <Button onClick={this.handleSubmit} disabled={this.state.AppointmentTimeID=== \"\" || this.state.AppointmentTimeID=== -1} color=\"primary\">\n                                Submit\n                            </Button>\n\n                        </div>) \n            default:\n                return \"Cannot Find Appointment Step\"\n        }\n    };\n    uploadFacilities=()=> {\n        fetch(`http://162.243.165.50:4000/Facilities`)\n        .then(result => result.json())\n        .then(Response => this.setState({ Facilities:Response.data }))\n        .catch(err => console.log(err))\n    };\n    uploadDoctors=()=> {\n        var Specialist=\"1\";//0 is false and 1 is true\n        if(window.localStorage.userType !== \"3\"){\n            Specialist=\"0\";\n        }\n        fetch(`http://162.243.165.50:4000/Doctors/${this.state.FacilityID}/${Specialist}`)\n        .then(result => result.json())\n        .then(Response => this.setState({ Doctors:Response.data }))\n        .catch(err => console.log(err))\n    };\n    uploadTimes=()=> {\n        fetch(`http://162.243.165.50:4000/AppointmentTimes/`, {\n            method:\"POST\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n            },\n            body: JSON.stringify({\n                DoctorID: this.state.DoctorID,\n                FacilityID: this.state.FacilityID,\n                AppDate: this.state.DBFormattedDate,\n            })\n        })\n        .then(result => result.json())\n        .then(Response => \n            {if(Response.data.length !== 0) {\n                this.setState({ AppointmentTimes:Response.data})\n            }})\n        .catch(err => console.log(err));\n    };\n    handleNextStep= () =>{\n        this.uploadDoctors();\n        this.uploadTimes();\n        this.setState({step: this.state.step+1})\n    };\n    handleSubmit= () =>{\n        this.setState({openForm:false})\n        fetch(`http://162.243.165.50:4000/AddAppointment`, {\n            method:\"POST\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n            },\n            body: JSON.stringify({\n                FacilityID: this.state.FacilityID,\n                DoctorID:   this.state.DoctorID,\n                PatientID:  this.props.PatientID,\n                Reason:     this.state.Reason,\n                TimeID:     this.state.AppointmentTimeID,\n                AppDate:    this.state.DBFormattedDate\n            })\n        })\n        .catch(err => console.log(err))\n        //.then(window.location.replace('/Appointments'));\n        setTimeout(function(){\n            window.location.replace('/Appointments')\n        }, 200);\n    };\n    handleBackStep= () =>{\n        this.setState({\n            step: this.state.step-1,\n            AppointmentTimeID: \"\"\n        })\n    };\n    render(){\n        const {classes}=this.props;\n        return(\n            <div>\n                {window.localStorage.userType === \"2\" ? (\n                    <Button variant=\"filled\" fullWidth className={classes.Button} onClick={this.handleClickOpen}>\n                        <AddButton className={classes.icon}/>New Appointment\n                    </Button>\n                ) : (\n                    <Button variant=\"contained\" color=\"primary\" fullWidth disabled={this.props.PatientID === -1} className={classes.Button} onClick={this.handleClickOpen}>\n                        <AddButton className={classes.icon}/>New Appointment\n                    </Button>\n                )}\n                <Dialog open={this.state.openForm} onClose={this.handleClose}>\n                    <DialogTitle id=\"form-dialog-title\">Book an Appointment</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Please fill out the information to add a new Appointment\n                        </DialogContentText>\n                        {this.getStepInfo(this.state.step)}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n    \n}\n\nNewAppointmentForm.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  export default withStyles(styles)(NewAppointmentForm);","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles, TextField } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n    icon: {\n      margin: theme.spacing.unit,\n      fontSize: 32,\n    },\n});\n\nclass AddDiagnosis extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            AppointmentID: this.props.AppID,\n            Diagnosis: \"\",\n            openForm: false,\n        };\n    }\n\n    handleDiagnosisAdd= () =>{\n        this.setState({openForm:false});\n        fetch(`http://162.243.165.50:4000/AddDiagnosis`, {\n            method:\"POST\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n            },\n            body: JSON.stringify({\n                AppointmentID: this.state.AppointmentID,\n                Diagnosis:   this.state.Diagnosis,\n            })\n        })\n        .catch(err => console.log(err));\n    };\n    handleClickOpen = () => {\n        this.setState({ \n            Diagnosis: \"\",\n            openForm: true \n        });\n    };\n\n    handleClose = () => {\n        this.setState({ openForm: false });\n    };\n\n    handleChange = e =>{\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n    render(){\n        return(\n            <div>\n                <Button variant=\"contained\" color=\"primary\" fullWidth className={this.props.Button} onClick={this.handleClickOpen}>\n                    Add a Diagnosis\n                </Button>\n                <Dialog open={this.state.openForm} onClose={this.handleClose}>\n                    <DialogTitle id=\"form-dialog-title\">Add A Appointment</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Please fill out the information to add a new Diagnosis\n                        </DialogContentText>\n                        <TextField \n                            name=\"Diagnosis\"\n                            label=\"What is the Diagnosis\" \n                            variant=\"standard\"\n                            onChange={this.handleChange}\n                            value={this.state.Diagnosis}\n                            inputProps={{ maxLength: 45 }}\n                            fullWidth\n                        />\n                        <Button onClick={this.handleDiagnosisAdd} disabled={this.state.Diagnosis=== \"\"}>\n                            Add Diagnosis\n                        </Button>\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n    \n}\n\nAddDiagnosis.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  export default withStyles(styles)(AddDiagnosis);\n\n\n\n  //Split show and add for Prescription and Diagnosis","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles';\n\n\n//Seperate Prescription and Diagnosis Tables\n\nconst styles = theme => ({\n    icon: {\n      margin: theme.spacing.unit,\n      fontSize: 32,\n    },\n    root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n      },\n      table: {\n        minWidth: 800,\n      },\n});\n\nclass ShowDiagnosis extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            openForm: false,\n            Diagnosis: [],\n        };\n    }\n    componentDidMount(){\n        this.uploadDiagnosis();\n    }\n    uploadDiagnosis(){\n        fetch(`http://162.243.165.50:4000/Diagnosis/${this.props.AppID}`)\n        .then(result => result.json())\n        .then(Response => this.setState({ Diagnosis: Response.data }))\n        .catch(err => console.log(err))\n    }\n    handleClickOpen = () => {\n        this.uploadDiagnosis();\n        this.setState({ openForm: true });\n    };\n\n    handleClose = () => {\n        this.setState({ openForm: false });\n    };\n\n    render(){\n        const {classes}=this.props;\n        return(\n            <div>\n                <Button variant=\"contained\" color=\"inherit\" className={this.props.Button} fullWidth onClick={this.handleClickOpen}>\n                    Show Diagnosis\n                </Button>\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\n                    <DialogTitle id=\"form-dialog-title\">Here are the Doctor's Diagnoses</DialogTitle>\n                    <DialogContent>\n                        {this.state.Diagnosis.length>=1 ? (\n                            <div>\n                                <DialogContentText>\n                                    These are the Diagnoses Assosciated with your Appointment\n                                </DialogContentText>\n                                <Table className={classes.table}>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>Diagnosis</TableCell>\n                                            <TableCell align=\"right\">DiagnosisID</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {this.state.Diagnosis.map(Each => (\n                                            <TableRow key={Each.DiagnosisID}>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                {Each.Diagnosis}\n                                            </TableCell>\n                                            <TableCell align=\"right\">{Each.DiagnosisID}</TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </div>\n                        ):(\n                            <DialogContentText>\n                                There are no Diagnoses Assosciated with your Appointment\n                            </DialogContentText>\n                        )}\n                        \n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n    \n}\n\nShowDiagnosis.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  export default withStyles(styles)(ShowDiagnosis);\n                 ","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n\n//Seperate Prescription and Diagnosis Tables\n\nconst styles = theme => ({\n    icon: {\n      margin: theme.spacing.unit,\n      fontSize: 32,\n    },\n    root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n      },\n      table: {\n        minWidth: 800,\n      },\n});\n\nclass ShowPrescriptions extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            openForm: false,\n            Prescriptions: [],\n        };\n    }\n    componentDidMount(){\n        this.uploadPrescriptions();\n    }\n    uploadPrescriptions(){\n        fetch(`http://162.243.165.50:4000/Prescriptions/${this.props.AppID}`)\n        .then(result => result.json())\n        .then(Response => this.setState({ Prescriptions: Response.data }))\n        .catch(err => console.log(err))\n    }\n    handleClickOpen = () => {\n        this.setState({ openForm: true });\n        this.uploadPrescriptions();\n    };\n\n    handleClose = () => {\n        this.setState({ openForm: false });\n    };\n\n    render(){\n        const {classes}=this.props;\n        return(\n            <div>\n                <Button variant=\"contained\" color=\"inherit\" className={this.props.Button} fullWidth onClick={this.handleClickOpen}>\n                    Show Prescriptions\n                </Button>\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\n                    <DialogTitle id=\"form-dialog-title\">Here are your issued Prescriptions</DialogTitle>\n                    <DialogContent>\n                        {this.state.Prescriptions.length>=1 ? (\n                            <div>\n                                 <DialogContentText>\n                                    These are the Prescriptions Assosciated with your Appointment\n                                </DialogContentText>\n                                <Table className={classes.table}>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>Prescription Issue ID</TableCell>\n                                            <TableCell align=\"right\">Refills</TableCell>\n                                            <TableCell align=\"right\">Due Date</TableCell>\n                                            <TableCell align=\"right\">Medicine</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {this.state.Prescriptions.map(Each => (\n                                            <TableRow key={Each.PrescriptionIssueID}>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                {Each.PrescriptionIssueID}\n                                            </TableCell>\n                                            <TableCell align=\"right\">{Each.RefillLeft}</TableCell>\n                                            <TableCell align=\"right\">{Each.DueDate.substr(0,10)}</TableCell>\n                                            <TableCell align=\"right\">{Each.Medicine}</TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </div>\n                        ):(\n                            <DialogContentText>\n                                There are no Prescriptions Assosciated with your Appointment\n                            </DialogContentText>\n                        )}\n                       \n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n    \n}\n\nShowPrescriptions.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  export default withStyles(styles)(ShowPrescriptions);\n                 ","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles, TextField, FormControl, MenuItem } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nconst styles = theme => ({\n    icon: {\n      margin: theme.spacing.unit,\n      fontSize: 32,\n    },\n});\n\nclass AddPrescription extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            AppointmentID: this.props.AppID,\n            PrescriptionID: \"\",\n            Refills:\"\",\n            MedicineTypes: [],\n            DueDate: null,\n            DBDueDate: null,\n            openForm: false,\n        };\n    }\n\n    componentDidMount = () => {\n        this.uploadMedicineTypes()\n    };\n\n    uploadMedicineTypes(){\n        fetch(`http://162.243.165.50:4000/AllMedicines/`)\n        .then(result => result.json())\n        .then(Response => this.setState({ MedicineTypes:Response.data}))\n        .catch(err => console.log(err));\n    }\n\n    handleSubmit= () =>{\n        this.setState({openForm:false});\n        fetch(`http://162.243.165.50:4000/AddPrescription`, {\n            method:\"POST\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n            },\n            body: JSON.stringify({\n                AppointmentID: this.state.AppointmentID,\n                PrescriptionID:   this.state.PrescriptionID,\n                DueDate:  this.state.DBDueDate,\n                Refills:     this.state.Refills,\n            })\n        })\n        .catch(err => console.log(err));\n    };\n    handleClickOpen = () => {\n        this.setState({ \n            openForm: true,\n            AppointmentID: this.props.AppID,\n            PrescriptionID: \"\",\n            Refills:\"\",\n            DueDate: null,\n            DBDueDate: null, \n        });\n    };\n\n    handleClose = () => {\n        this.setState({ openForm: false });\n    };\n\n    DueDateChange = (d) =>{\n        let DueDate=new Date(d)\n        DueDate = this.FormatDate(DueDate);\n        \n        this.setState({DBDueDate:DueDate});\n        this.setState({\n            DueDate: d\n        })\n    }\n\n    FormatDate=(date)=>{\n        date = date.getFullYear() + '-' + (this.fixMonth(date)) + '-' + date.getDate();\n        return date;\n    }\n\n    fixMonth=(date)=>{\n        if(date.getMonth() + 1 < 10){\n            return \"0\" +(date.getMonth() +1);\n        }\n        else{\n            return date.getMonth()+1;\n        }\n    }\n\n    handleChange = e =>{\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n    render(){\n        return(\n            <div>\n                <Button variant=\"contained\" color=\"primary\" fullWidth className={this.props.Button} onClick={this.handleClickOpen}>\n                    Add a Prescription\n                </Button>\n                <Dialog open={this.state.openForm} onClose={this.handleClose}>\n                    <DialogTitle id=\"form-dialog-title\">Add A Appointment</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Please fill out the information to add a new Diagnosis\n                        </DialogContentText>\n                        <FormControl margin=\"normal\" fullWidth>\n                            <TextField\n                                id=\"PrescriptionID\"\n                                select\n                                label=\"Please Choose A Prescription\"\n                                name=\"PrescriptionID\"\n                                variant=\"standard\"\n                                onChange={e=>this.handleChange(e)}\n                                value={this.state.PrescriptionID}   \n                                required                   \n                            >\n                            {this.state.MedicineTypes.map(option => (\n                                <MenuItem key={option.PrescriptionID} value={option.PrescriptionID}>\n                                    {option.Medicine}\n                                </MenuItem>\n                            ))}\n                            </TextField>\n                            <TextField \n                                name=\"Refills\"\n                                label=\"Number of Total Refills\" \n                                type=\"number\"\n                                variant=\"standard\"\n                                onChange={this.handleChange}\n                                value={this.state.Refills}\n                            />\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                <DatePicker\n                                    minDate={new Date()}\n                                    label=\"Due Date\"\n                                    name=\"DueDate\"\n                                    value={this.state.DueDate}\n                                    onChange={this.DueDateChange}\n                                />\n                            </MuiPickersUtilsProvider>\n                            <Button onClick={this.handleSubmit} disabled={this.state.Refills=== \"\" || this.state.PrescriptionID=== \"\" || this.state.DBDueDate=== null} color=\"primary\">\n                                Submit\n                            </Button>\n                        </FormControl>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n    \n}\n\nAddPrescription.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  export default withStyles(styles)(AddPrescription);","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles, TextField, MenuItem } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst styles = theme => ({\n    icon: {\n      margin: theme.spacing.unit,\n      fontSize: 32,\n    },\n});\n\nclass AddSpecialistReccomendation extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            AppointmentID: this.props.AppID,\n            Specialist: \"\",\n            Specialists: [],\n            openForm: false,\n        };\n    }\n    componentDidMount(){\n        this.uploadSpecialists()\n    }\n    uploadSpecialists(){\n        fetch(`http://162.243.165.50:4000/AllDoctors`)\n        .then(result => result.json())\n        .then(res => this.setState({ Specialists: res.data }))\n        .catch(err => console.log(err))\n    }\n    handleSpecialistAdd= () =>{\n        this.setState({openForm:false});\n        fetch(`http://162.243.165.50:4000/AddSpecialist`, {\n            method:\"POST\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n            },\n            body: JSON.stringify({\n                AppointmentID: this.state.AppointmentID,\n                Specialist:   this.state.Specialist,\n            })\n        })\n        .catch(err => console.log(err));\n        setTimeout(function(){\n\t\t\twindow.location.replace('/Appointments')\n\t\t}, 1000);\n    };\n    handleClickOpen = () => {\n        this.setState({ \n            Specialist: \"\",\n            openForm: true \n        });\n    };\n\n    handleClose = () => {\n        this.setState({ openForm: false });\n    };\n\n    handleChange = e =>{\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n    render(){\n        return(\n            <div>\n                <Button variant=\"contained\" color=\"primary\" fullWidth className={this.props.Button} onClick={this.handleClickOpen}>\n                    Add a Specialist Reccomendation\n                </Button>\n                <Dialog open={this.state.openForm} onClose={this.handleClose}>\n                    <DialogTitle id=\"form-dialog-title\">Add A Specialist Reccomendation</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Please select a Doctor (Specialist or General) that you reccomend for the patiet\n                        </DialogContentText>\n                        <FormControl margin=\"normal\" fullWidth>\n                            <TextField\n                                id=\"Specialist\"\n                                select\n                                label=\"Please Choose A Doctor to Reccomend\"\n                                name=\"Specialist\"\n                                variant=\"standard\"\n                                onChange={this.handleChange}\n                                value={this.state.Specialist}   \n                                required                   \n                            >\n                                {this.state.Specialists.map(option => (\n                                    <MenuItem key={option.EmployeeID} value={option.FirstName}>\n                                        Dr.{option.FirstName} {option.LastName}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </FormControl>\n                        <Button onClick={this.handleSpecialistAdd}>\n                            Add Specialist\n                        </Button>\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n    \n}\n\nAddSpecialistReccomendation.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  export default withStyles(styles)(AddSpecialistReccomendation);\n\n\n\n  //Split show and add for Prescription and Diagnosis","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport InfoIcon from '@material-ui/icons/InfoOutlined';\nimport { withStyles, Typography } from '@material-ui/core';\nimport {Paper, TextField, Grid,} from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport PropTypes from 'prop-types';\nimport './AppointmentPage.css';\n\nconst styles = theme => ({\n    icon: {\n      fontSize: 25,\n      color: \"#f5f5f5\",\n      '&:hover': {\n        color: '#e0e0e0',\n      },\n    },\n    dialog: {\n        margin: 'normal',\n    },\n    Button: {\n        marginTop: \".5%\"\n    },\n    root: {\n        width: '100%',\n        backgroundColor: \"#e0e0e0\",\n        padding: theme.spacing.unit*6,\n        minHeight: '100vh',\n        margin:\"auto\",\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField:{\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    dense: {\n        marginTop: 19,\n    },\n    menu: {\n        width: 200,\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n    TablePaper: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n      },\n    table: {\n        minWidth: 700,\n      },\n});\n\nclass PatientMedicalHistory extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            openForm: false,    \n            editing: false,   \n            allergies: '',\n            immunizationRecord: '',\n            medicalCondition: '',\n            procedureRecord: '',\n            MHLog: [],\n            deduct: \"\",\n            insuranceID: \"\",\n            insuranceContact: \"\",\n            company: \"\",\n        };\n        this.handleChange=this.handleChange.bind(this);\n        this.saveChange=this.saveChange.bind(this);\n    }\n    componentDidMount(){\n        this.getInsurance();\n        this.getLog();\n    }\n    getMedicalRecord=()=>{\n        fetch(`http://162.243.165.50:4000/GetMedicalHistory/${this.props.PatientID}`)\n        .then(result => result.json())\n        .then(result => \n            {if(result.data.length !== 0){\n                this.setState({\n                    allergies: result.data[0].Allergies,\n                    immunizationRecord: result.data[0].ImmunizationRecord,\n                    medicalCondition: result.data[0].MedicalCondition,\n                    procedureRecord: result.data[0].ProcedureRecord,\n                })\n            }})\n        .catch(err => console.error(err))\n    };\n    getLog=()=>{\n        fetch(`http://162.243.165.50:4000/GetMedicalHistoryLog/${this.props.PatientID}`)\n        .then(result => result.json())\n        .then(result => this.setState({\n            MHLog: result.data\n        }))\n        .catch(err => console.error(err))\n    };\n    getInsurance(){\n            fetch(`http://162.243.165.50:4000/Insurance/${this.props.PatientID}`)\n            .then(result => result.json())\n            .then(res => this.setState({\n                deduct:res.data[0].Deductible,\n                insuranceID: res.data[0].InsuranceClientID,\n                insuranceContact: res.data[0].ContactNumber,\n                company: res.data[0].Name,\n\n            }))\n            .catch(err => console.log(err))\n}\n    updateMedicalRecord(){\n        fetch(`http://162.243.165.50:4000/UpdateMedicalHistory`, {\n          method:\"POST\",\n          headers: {\n            \"Content-Type\":\"application/json\",\n          },\n          body: JSON.stringify({\n            patientID: this.props.PatientID,\n            lastUpdatedBy: window.localStorage.userID,\n            immunizationRecord: this.state.immunizationRecord,\n            allergies: this.state.allergies,\n            procedureRecord: this.state.procedureRecord,\n            medicalCondition: this.state.medicalCondition,\n          })\n        })\n        .catch(err => console.log(err))\n    }\n    saveChange(){\n        this.updateMedicalRecord();\n        this.getMedicalRecord();\n        this.setState({\n            editing: false\n        });\n    }\n    handleClickOpen = () => {\n        this.getMedicalRecord();\n        this.setState({openForm:true})\n    };\n    handleClose = () => {\n        this.setState({ \n            openForm: false,    \n            editing: false,   \n            allergies: '',\n            immunizationRecord: '',\n            medicalCondition: '',\n            procedureRecord: '',\n        });\n    };\n    editMode = () => {\n        console.log(this.state.MHLog)\n        this.setState({\n          editing: true\n        });\n    }\n    handleChange = e =>{\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n    \n    render(){\n        const {classes}=this.props;\n        return(\n            <div>\n                {this.getMedicalRecord}\n                <Button variant=\"contained\" color=\"inherit\" className={this.props.Button} onClick={this.handleClickOpen} fullWidth >\n                    Patient's Information <InfoIcon/> \n                </Button>\n                <Dialog fullScreen className={classes.dialog} open={this.state.openForm} onClose={this.handleClose}>\n                    <Paper className={classes.root} fullWidth elevation={2}>\n                        <Typography variant=\"h3\" >Here are the Patients Information</Typography>\n                        <br />\n                        <Typography variant=\"h4\" >Summary</Typography>\n                        <TextField\n                            label=\"Patient ID\"\n                            margin=\"normal\"\n                            disabled\n                            className={classes.textField}\n                            value={this.props.PatientID}\n                        />\n                        <br/>\n                        <Grid container spacing={24}>\n                            <Grid item sm>\n                                <TextField\n                                    name=\"immunizationRecord\"\n                                    label=\"Immunization Record\"\n                                    className={classes.textField}\n                                    value={this.state.immunizationRecord}\n                                    margin=\"normal\"\n                                    multiline\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    rows=\"2\"\n                                    inputProps={{ maxLength: 45 }}\n                                    disabled={!this.state.editing}\n                                    onChange={this.handleChange}\n                                />\n                            </Grid>\n                            <Grid item sm>\n                                <TextField\n                                    name=\"medicalCondition\"\n                                    label=\"Medical Condition\"\n                                    className={classes.textField}\n                                    value={this.state.medicalCondition}\n                                    margin=\"normal\"\n                                    fullWidth\n                                    multiline\n                                    variant=\"outlined\"\n                                    rows=\"2\"\n                                    inputProps={{ maxLength: 45 }}\n                                    disabled={!this.state.editing}\n                                    onChange={this.handleChange}\n                                />\n                            </Grid>\n                        </Grid>\n                        \n                        <Grid container spacing={24}>\n                            <Grid item sm>\n                                <TextField\n                                    name=\"allergies\"\n                                    label=\"Allergies\"\n                                    className={classes.textField}\n                                    value={this.state.allergies}\n                                    margin=\"normal\"\n                                    multiline\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    rows=\"2\"\n                                    inputProps={{ maxLength: 45 }}\n                                    disabled={!this.state.editing}\n                                    onChange={this.handleChange}\n                                />\n                            </Grid>\n                            <Grid item sm>\n                                <TextField\n                                    name=\"procedureRecord\"\n                                    label=\"Procedures Record\"\n                                    className={classes.textField}\n                                    value={this.state.procedureRecord}\n                                    margin=\"normal\"\n                                    multiline\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    rows=\"2\"\n                                    inputProps={{ maxLength: 100 }}\n                                    disabled={!this.state.editing}\n                                    onChange={this.handleChange}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Table className={classes.Table}>\n                            <TableHead>\n                                <TableRow display={'flex'}>\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">Medical History Last Updated On</TableCell>\n                                    <TableCell align=\"center\">Medical History Last Updated By (EmployeeID)</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {this.state.MHLog.map(Each => (\n                                    <TableRow key={Each.UpdatedAt}>\n                                        <TableCell align=\"center\">{Each.UpdatedAt.substr(0,10)} </TableCell>\n                                        <TableCell align=\"center\">{Each.UpdatedBy}</TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>  \n                        <Grid container spacing={24}>\n                            <Grid item sm>\n                                <TextField\n                                    name=\"company\"\n                                    label=\"Insurance Company\"\n                                    className={classes.textField}\n                                    value={this.state.company}\n                                    margin=\"normal\"\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    disabled\n                                />\n                            </Grid>\n                            <Grid item sm>\n                                <TextField\n                                    name=\"insuranceContact\"\n                                    label=\"Insurance Number\"\n                                    className={classes.textField}\n                                    value={this.state.insuranceContact}\n                                    margin=\"normal\"\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    disabled\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={24}>\n                            <Grid item sm>\n                                <TextField\n                                    name=\"insuranceID\"\n                                    label=\"Insurance Client ID\"\n                                    className={classes.textField}\n                                    value={this.state.insuranceID}\n                                    margin=\"normal\"\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    disabled\n                                />\n                            </Grid>\n                            <Grid item sm>\n                                <TextField\n                                    name=\"deduct\"\n                                    label=\"Deductible Amount\"\n                                    className={classes.textField}\n                                    value={this.state.deduct}\n                                    margin=\"normal\"\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    disabled\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={8}>\n                            {!this.state.editing ? (\n                                <Grid item xs={12} sm={6}>\n                                        <Button variant=\"contained\" fullWidth color=\"primary\" className={classes.button} onClick={this.editMode}> Edit </Button>\n                                </Grid>\n                            ):(\n                                <Grid item xs={12} sm={6}>\n                                    <Button variant=\"contained\" fullWidth color=\"secondary\" className={classes.button} onClick={this.saveChange}> Save </Button>\n                                </Grid>\n                            )}\n                            <Grid item xs={12} sm={6}>\n                                <Button variant=\"contained\" fullWidth color=\"primary\" className={classes.button} onClick={this.handleClose}> Close </Button>\n                            </Grid>\n                        </Grid>\n                            \n                        \n                    </Paper>\n                </Dialog>\n            </div>\n        );\n    }\n    \n}\n\nPatientMedicalHistory.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  export default withStyles(styles)(PatientMedicalHistory);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport NewAppointmentForm from './NewAppointmentForm';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { FormControl, Grid, Paper, MenuItem, TextField } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport AddDiagnosis from './AddDiagnosis';\nimport ShowDiagnosis from './ShowDiagnosis';\nimport ShowPrescriptions from './ShowPrescriptions';\nimport AddPrescription from './AddPrescription';\nimport AddSpecialistReccomendation from './AddSpecilaistReccomendation';\nimport './AppointmentPage.css';\nimport PatientMedicalHistory from './PatientMedicalHistory';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst styles = theme =>({\n    root: {\n        width: '75%',\n        alignItems: \"center\",\n        display: \"flex\",\n        flexDirection: 'column',\n        padding: theme.spacing.unit*3,\n        margin:\"auto\"\n  \n    },\n    page: {\n        padding: theme.spacing.unit*3,\n        margin:\"auto\"\n  \n    },\n    AdditionButton: {\n        display: \"flex\",\n        flexDirection: 'column',\n        padding: theme.spacing.unit,\n  \n    },\n    Button: {\n        marginTop: '.5%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '19%',\n        flexShrink: 0,\n    },\n    iconHistory: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '3%',\n        flexShrink: 10,\n    },\n    secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n    flexBasis: '100%',\n    margin: 'auto'\n    },\n    Paper: {\n        width: '55%',\n        display: \"flex\",\n        flexDirection: 'column',\n        padding: theme.spacing.unit*3,\n        marginTop:\"5%\",\n        marginBottom:\"5%\",\n        margin:\"auto\"\n  \n    },\n});\n\n\nclass AppointmentHistory extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            expanded: null,\n            Appointments: [],\n            Diagnosis: [],\n            cancelApptShow: false,\n\t\t\tselectedAppt: \"\",\n            openForm: false, \n            PatientIDs:[],\n            AdminPatient: -1,\n        };\n    }\n    componentDidMount(){\n        this.grabAppointments();\n        this.grabPatientIDs();\n    }\n    grabPatientIDs(){\n        fetch(`http://162.243.165.50:4000/Patients`)\n        .then(result => result.json())\n        .then(Response => this.setState({ PatientIDs:Response.data }))\n        .catch(err => console.log(err))\n    }\n    grabAppointments=()=>{\n        //backend call to grab the appointments for the user\n        fetch(`http://162.243.165.50:4000/Appointments/`, {\n            method:\"POST\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n            },\n            body: JSON.stringify({\n                UserType: window.localStorage.userType,\n                UserID: window.localStorage.userID,\n            })\n        })\n        .then(result => result.json())\n        .then(Response => this.setState({ Appointments:Response.data}))\n        .catch(err => console.log(err));\n        \n    }\n    handleChange = panel => (event, expanded) => {\n        this.setState({\n            expanded: expanded ? panel : false,\n        });\n    }\n    handleProper = e =>  {\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n\n    placeDiagnosis(){\n        this.state.Diagnosis.map(option => (\n            <FormControl>\n                <Typography>Diagnosis: {option.Diagnosis}</Typography>\n                <Typography>Number of Refills:  {option.RefillLeft}</Typography>\n                <Typography>Due Date: {option.DueDate.substr(0,10)}</Typography>\n                <Typography>Medicine: {option.Medicine}</Typography>\n            </FormControl>\n        ))\n    }\n    handleAppointmentCancel = (AppID) => {\n        fetch(`http://162.243.165.50:4000/CancelAppointment/`, {\n            method:\"POST\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n            },\n            body: JSON.stringify({\n                AppointmentID: AppID,\n            })\n        })\n        .then(this.grabAppointments)\n        .catch(err => console.log(err));\n\t\tsetTimeout(function(){\n\t\t\twindow.location.replace('/Appointments')\n\t\t}, 200);\n    };\n\t\n\thandleClickOpenCancellation = (apptID) => {\n\t\tthis.setState({ selectedAppt: apptID });\n        this.setState({ openForm: true });\n    };\n\n    handleCloseCancellation = () => {\n        this.setState({ openForm: false });\n    };\n\t\n    render(){\n        const{classes}=this.props;\n        const { expanded } = this.state;\n        return(\n            <div className={classes.page}>\n                <div className='AppointmentPage-SmallBoxOverLay'>\n                <div className={classes.root}>\n                <h1 className='AppointmentHistory-h1'>All Appointments</h1>\n                    {this.state.Appointments.map(option => (\n                            <FormControl key={option.idAppointment} fullWidth>\n                                <ExpansionPanel square expanded={expanded === option.idAppointment}  onChange={this.handleChange(option.idAppointment)}>\n                                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                                        <Typography className={classes.heading}>Patient: <b>{option.Patient}</b></Typography>\n                                        <Typography className={classes.heading}>Doctor: Dr. <b>{option.Doctor}</b></Typography>\n                                        <Typography className={classes.heading}>Date: <b>{option.AppointmentDate.substr(0,10)}</b></Typography>\n                                        <Typography className={classes.heading}>Time: <b>{option.AppointmentTime.substr(0,5)}</b></Typography>\n                                        <Typography className={classes.heading}>Status: <b>{option.currentStatus}</b></Typography>\n                                    </ExpansionPanelSummary>\n                                    <ExpansionPanelDetails>\n                                        <Typography className={classes.secondaryHeading}>\n                                            Reason:{option.Reason === \"null\" ? (<text> No Reason Specified</text>):(<text>{option.Reason}</text>)} <br/>\n                                            AppointmentID: {option.idAppointment} <br/>\n                                            Facility: {option.FacilityName} <br/>\n                                            Address: {option.Street}, {option.City}, {option.State} {option.ZipCode}<br/>\n                                            Doctor Reccomentation: {option.Specialist === null || option.Specialist === \"\" ? (<text>No Doctor Reccomendations</text>):(<text>Dr. {option.Specialist}</text>)}<br/>\n                                            {(window.localStorage.userType !== \"2\" &&  window.localStorage.userType !== \"3\")? (\n                                                <Grid container spacing={8}>\n                                                    <Grid item xs={12} sm={4}>  \n                                                        <AddDiagnosis Button={classes.Button} AppID={option.idAppointment}/>\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={4}>\n                                                        <AddSpecialistReccomendation  Button={classes.Button} AppID={option.idAppointment}/>\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={4}>  \n                                                        <AddPrescription Button={classes.Button} AppID={option.idAppointment}/>\n                                                    </Grid>\n                                                </Grid>\n                                            ):(\n                                                <div>\n                                                </div>\n                                            )}\n                                            {window.localStorage.userType !==\"2\" ? (\n                                                <Grid container spacing={8}>\n                                                    <Grid item xs={12} sm={4}>\n                                                        <ShowDiagnosis  Button={classes.Button} AppID={option.idAppointment}/>\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={4}>\n                                                        <PatientMedicalHistory Button={classes.Button} PatientID={option.PatientID}/>\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={4}>\n                                                        <ShowPrescriptions  Button={classes.Button} AppID={option.idAppointment}/>\n                                                    </Grid>\n                                                </Grid>\n                                            ):(\n                                                <Grid container spacing={8}>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <ShowDiagnosis  Button={classes.Button} AppID={option.idAppointment}/>\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <ShowPrescriptions  Button={classes.Button} AppID={option.idAppointment}/>\n                                                    </Grid>\n                                                </Grid>\n                                            )}\n                                            \n                                            {window.localStorage.userType === \"3\" ? (\n                                                    <Grid container spacing={8}>\n                                                        <Grid item xs={12} sm={6}>  \n                                                            <NewAppointmentForm PatientID={option.PatientID}/>                                                        \n                                                        </Grid>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <Button variant=\"raised\" fullWidth  className={classes.Button} color=\"secondary\"  onClick={() =>  this.handleClickOpenCancellation(option.idAppointment) } marginTop=\"10%\">\n                                                                Cancel Appointment\n                                                            </Button>  \n                                                            \n                                                            <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleCloseCancellation}>\n                                                                <DialogTitle id=\"form-dialog-title\"></DialogTitle>\n                                                                <DialogContent>\n                                                                    <DialogContentText>\n                                                                        Are you sure you want to cancel appointment {this.state.selectedAppt}?\n                                                                    </DialogContentText>\n                                                                </DialogContent>\n                                                                <DialogActions>\n                                                                    <Button className={classes.Button} onClick={this.handleCloseCancellation} color=\"primary\" variant=\"contained\">\n                                                                        No\n                                                                    </Button>\n                                                                    <Button className={classes.Button} onClick={() => this.handleAppointmentCancel(this.state.selectedAppt)} color=\"secondary\" variant=\"contained\">\n                                                                        Yes\n                                                                    </Button>\n                                                                </DialogActions>\n                                                            </Dialog>\n                                                            \n                                                        </Grid>\n                                                    </Grid>\n                                            ):(\n                                                <div></div>\n                                            )}\n                                            \n                                            {window.localStorage.userType === \"2\" ? (\n                                                <div>\n                                                    <Button variant=\"raised\" fullWidth  className={classes.Button} color=\"secondary\"  onClick={() =>  this.handleClickOpenCancellation(option.idAppointment) } marginTop=\"10%\">\n                                                        Cancel Appointment\n                                                    </Button>\n                                                    \n                                                    <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleCloseCancellation}>\n                                                        <DialogTitle id=\"form-dialog-title\"></DialogTitle>\n                                                        <DialogContent>\n                                                            <DialogContentText>\n                                                                Are you sure you want to cancel appointment {this.state.selectedAppt}?\n                                                            </DialogContentText>\n                                                        </DialogContent>\n                                                        <DialogActions>\n                                                            <Button className={classes.Button} onClick={this.handleCloseCancellation} color=\"primary\" variant=\"contained\">\n                                                                No\n                                                            </Button>\n                                                            <Button className={classes.Button} onClick={() => this.handleAppointmentCancel(this.state.selectedAppt)} color=\"secondary\" variant=\"contained\">\n                                                                Yes\n                                                            </Button>\n                                                        </DialogActions>\n                                                    </Dialog>\n                                                    \n                                                </div>\n                                                \n                                            ):(\n                                                <div></div>\n                                            )}\n\n                                            \n                                            \n                                        </Typography>\n                                        \n                                    </ExpansionPanelDetails>\n                                </ExpansionPanel>\n                            </FormControl>\n                            \n                    ))}\n                    {this.state.Appointments.length === 0 && <Typography variant=\"subtitle1\">You Have no Appointments</Typography>}\n                    \n                    {window.localStorage.userType ===\"3\" &&\n                        <Paper className={classes.Paper}>\n                            <FormControl margin=\"normal\" fullWidth>\n                                <TextField\n                                    id=\"AdminPatient\"\n                                    select\n                                    label=\"Which Patient would you like to book an Appointment for?\"\n                                    name=\"AdminPatient\"\n                                    variant=\"standard\"\n                                    onChange={this.handleProper}\n                                    value={this.state.AdminPatient}   \n                                    required                   \n                                >\n                                    <MenuItem key=\"-1\" value=\"-1\">\n                                        Please Choose A Patient\n                                    </MenuItem>\n                                    {this.state.PatientIDs.map(option => (\n                                        <MenuItem key={option.PatientID} value={option.PatientID}>\n                                            {option.PatientID}: {option.FirstName} {option.LastName}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                            </FormControl>\n                            <NewAppointmentForm PatientID={this.state.AdminPatient}/>\n                        </Paper>\n                    }\n                    {window.localStorage.userType === \"2\" && \n                        <div className={classes.AdditionButton}>\n                            <NewAppointmentForm PatientID={window.localStorage.userID}/>\n                        </div>\n                    }\n                    \n                    \n                </div>\n                </div>\n            </div>\n        );\n    }\n    \n}\n\nAppointmentHistory.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  \nexport default withStyles(styles)(AppointmentHistory);\n","import React, { Component } from 'react';\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\nimport AppointmentHistory from '../Components/Appointments/AppointmentHistory';\nimport '../Components/Appointments/AppointmentPage.css';\n\nclass Appointments extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n        firstName: \"\",\n        Facilities: []\n    };\n  }\n  componentDidMount(){\n    this.FirstName();\n  }\n\n  FirstName(){\n    if(window.localStorage.userType === \"2\"){\n      fetch(`http://162.243.165.50:4000/Patient/${window.localStorage.LoginTableID}`)\n      .then(result => result.json())\n      .then(res => {\n          this.setState(  { firstName: res.data[0].FirstName  } )\n        })\n      .catch(err => console.log(err))\n    }\n  \n    else{\n      fetch(`http://162.243.165.50:4000/Employee/${window.localStorage.LoginTableID}`)\n      .then(result => result.json())\n      .then(res => {this.setState(  { firstName: res.data[0].FirstName  } )})\n      .catch(err => console.log(err))\n    }\n  }\n\n  \n  render() {\n    return (\n      <div className='AppointmentPage-image'>\n        <div className='AppointmentPage-overlay'>\n          <NavigationBar title={'Welcome, '+this.state.firstName} Tab={0}/>\n          <AppointmentHistory val={this.state}/>\n        </div>\n      </div>\n        \n    );\n  }\n}\n\nexport default Appointments;\n","import { TextField,  MenuItem, Typography } from \"@material-ui/core\";\nimport React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport {Input, InputLabel} from '@material-ui/core';  \n\n\nfunction validateUsername(){\n    return true;\n};\nfunction validatePassword(props){\n    if(props.val.password.length >=6 || props.val.password.length <=1 ){\n        return true;\n    }\n    return false;\n};\nfunction BasicInformation(props){\n    \n    return(\n        <div>\n             <Typography>Registration Information</Typography>\n                <FormControl margin=\"normal\" fullWidth required>\n                    <InputLabel htmlFor=\"FirstName\">First Name</InputLabel>\n                    <Input name=\"FirstName\" autoFocus value={props.val.FirstName} onChange={props.handleChange}></Input>\n                </FormControl>\n                <FormControl margin=\"auto\" fullWidth required>\n                    <InputLabel htmlFor=\"LastName\">Last Name</InputLabel>\n                    <Input name=\"LastName\" value={props.val.LastName} onChange={props.handleChange}></Input>\n                </FormControl>\n                <FormControl margin=\"normal\" fullWidth>\n                    <TextField \n                        required\n                        name=\"username\" \n                        label=\"Username\" \n                        variant=\"standard\"\n                        onChange={props.handleChange}\n                        value={props.val.username}\n                        error={!validateUsername()}\n                        helperText={validateUsername() ? \"\":\"Username is not valid\"}\n                    />\n                </FormControl>\n                <FormControl margin=\"auto\" fullWidth required>\n                    <TextField \n                        name=\"password\"\n                        type=\"password\" \n                        label=\"Password\" \n                        variant=\"standard\"\n                        error={!validatePassword(props)}\n                        onChange={props.handleChange}\n                        value={props.val.password}\n                        required\n                    />\n                </FormControl>\n                {(window.localStorage.userType === \"3\") ? (\n                    <FormControl margin=\"auto\" fullWidth>\n                        <TextField\n                            id=\"userType\"\n                            select\n                            label=\"Type of User\"\n                            name=\"userType\"\n                            variant=\"standard\"\n                            onChange={props.handleChange}\n                            value={props.val.userType}   \n                            required                   \n                        >\n                            {props.val.roles.map(option => (\n                                <MenuItem key={option.RoleID} value={option.RoleID}>\n                                    {option.RoleTitle}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    </FormControl>\n                ):(\n                    <div></div>\n                )}\n                    \n                <FormControl margin=\"auto\" fullWidth required>\n                    <TextField \n                        name=\"Email\" \n                        label=\"Email\" \n                        variant=\"standard\"\n                        type=\"email\"\n                        onChange={props.handleChange}\n                        value={props.val.Email}\n                        required\n                    />\n                </FormControl>\n        </div>\n    );\n}\n\nexport default BasicInformation;","import {  TextField, MenuItem, Typography, Grid, Input, InputLabel } from \"@material-ui/core\";\nimport React from 'react';\nimport FormControl from '@material-ui/core/FormControl';  \nimport MaskedInput from 'react-text-mask';\nimport PropTypes from 'prop-types'; \n\n\nfunction TextMaskCustom(props) {\n    const {...other } = props;\n  \n    return (\n      <MaskedInput\n        {...other}\n        guide={false}\n        mask={[/[1-9]/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n        placeholderChar={'\\u2000'}\n        showMask\n      />\n    );\n}\n\nTextMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n};\nfunction DateMaskCustom(props) {\n    const {...other } = props;\n  \n    return (\n      <MaskedInput\n        guide={false}\n        {...other}\n        mask={[/\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/,'-', /\\d/, /\\d/]}\n        placeholderChar={'\\u2000'}\n        showMask\n      />\n    );\n}\n\nfunction SSNMaskCustom(props) {\n    const {...other } = props;\n\n  \n    return (\n      <MaskedInput\n        guide={false}\n        {...other}\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n        placeholderChar={'\\u2000'}\n        showMask\n      />\n    );\n}\n\nfunction BasicInformationPtTwo(props){\n    \n    return(\n        <div>\n            <Typography>Personal Information</Typography>\n            <FormControl margin=\"auto\" fullWidth required>\n                <InputLabel htmlFor=\"AddressStreet\">Street Address</InputLabel>\n                <Input name=\"AddressStreet\" autoFocus value={props.val.AddressStreet} onChange={props.handleChange}></Input>\n            </FormControl>\n            <Grid container spacing={8}>\n                <Grid item xs={12} sm={5}>\n                    <FormControl margin=\"normal\" fullWidth required>\n                        <InputLabel htmlFor=\"AddressCity\">City</InputLabel>\n                        <Input name=\"AddressCity\" value={props.val.AddressCity} onChange={props.handleChange}></Input>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={2}>\n                    <FormControl margin=\"normal\" fullWidth>\n                        <TextField\n                            id=\"State\"\n                            select\n                            label=\"State\"\n                            name=\"AddressState\"\n                            variant=\"standard\"\n                            onChange={props.handleChange}\n                            value={props.val.AddressState}   \n                            required                   \n                        >\n                            {props.val.states.map(option => (\n                                <MenuItem key={option.StateID} value={option.StateID}>\n                                    {option.StateString}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={5}>\n                    <FormControl margin=\"normal\" fullWidth required>\n                        <InputLabel htmlFor=\"AddressZip\">Zip Code</InputLabel>\n                        <Input name=\"AddressZip\"  value={props.val.AddressZip} onChange={props.handleChange}></Input>\n                    </FormControl>\n                </Grid>\n            </Grid>\n            <FormControl margin=\"normal\" fullWidth required>\n                <InputLabel htmlFor=\"DateOfBirth\">Date Of Birth</InputLabel>\n                <Input name=\"DateOfBirth\" placeholder=\"YYYY-MM-DD\" value={props.val.DateOfBirth}  inputComponent={DateMaskCustom} onChange={props.handleChange}></Input>\n            </FormControl>\n            <FormControl margin=\"auto\" fullWidth>\n                <TextField\n                    id=\"Sex\"\n                    select\n                    label=\"Gender\"\n                    name=\"Sex\"\n                    variant=\"standard\"\n                    onChange={props.handleChange}\n                    value={props.val.Sex}   \n                    required                   \n                >\n                    {props.val.sexes.map(option => (\n                        <MenuItem key={option.SexID} value={option.SexID}>\n                            {option.Gender}\n                        </MenuItem>\n                    ))}\n                </TextField>\n            </FormControl>\n            <FormControl margin=\"auto\" fullWidth>\n                <TextField\n                    id=\"Race\"\n                    select\n                    label=\"Race\"\n                    name=\"raceID\"\n                    variant=\"standard\"\n                    onChange={props.handleChange}\n                    value={props.val.raceID}   \n                    required                   \n                >\n                    {props.val.races.map(option => (\n                        <MenuItem key={option.RaceID} value={option.RaceID}>\n                            {option.Race}\n                        </MenuItem>\n                    ))}\n                </TextField>\n            </FormControl>\n            <FormControl margin=\"normal\" fullWidth required>\n                <InputLabel htmlFor=\"SSN\">Social Security</InputLabel>\n                <Input name=\"SSN\" placeholder=\"XXX-XX-XXXX\"  inputComponent={SSNMaskCustom} value={props.val.SSN} onChange={props.handleChange}></Input>\n            </FormControl>\n            <FormControl margin=\"normal\" required>\n                <InputLabel htmlFor=\"CellNuber\">Contact Number</InputLabel>\n                <Input\n                    onChange={props.handleChange}\n                    name=\"CellNumber\"\n                    id=\"Contact Number\"\n                    value={props.val.CellNumber}\n                    inputComponent={TextMaskCustom}\n                />\n            </FormControl>\n            \n                \n        </div>\n    );\n}\n\nexport default BasicInformationPtTwo;","import { Paper, Typography, Dialog, DialogTitle, DialogContent, DialogActions, DialogContentText } from \"@material-ui/core\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport HomeLogo  from '@material-ui/icons/Home';\nimport LockLogo  from '@material-ui/icons/LockOpenOutlined';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControl from '@material-ui/core/FormControl';\nimport {Button} from '@material-ui/core';    \nimport BasicInformation from '../Registration/BasicInformation';\nimport BasicInformationPtTwo from '../Registration/BasicInformationPtTwo';\n\n\nconst styles = theme => ({\n    paperForm: {\n        width: '25%',\n        marginLeft: '7%',\n        marginTop: '-15%',\n        padding: theme.spacing.unit*2,\n        flexDirection: 'column',\n        backgroundColor: \"#e0e0e0\",\n    },\n    icon: {\n        margin: theme.spacing.unit,\n        fontSize: \"150%\",\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap'\n    },\n    TextField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        margin: theme.spacing.unit*2,\n    },\n    middleInitial: {\n        width:\"15%\",\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        margin: theme.spacing.unit*2\n    },\n    heading: {\n        margin: theme.spacing.unit,\n        marginLeft: \"70%\",\n        marginTop: \"10%\",\n        color: \"white\",\n    },\n});\n\nclass RegistrationForm extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            FirstName: \"\",\n            LastName: \"\",\n            Sex: \"\",\n            Email:\"\",\n            username: \"\",\n            password: \"\",\n            CellNumber: \"\",\n            AddressStreet: \"\",\n            AddressCity:\"\",\n            AddressState: \"\",\n            AddressZip: \"\",\n            DateOfBirth:\"\",\n            SSN: \"\",\n            userType: \"\",\n            registrationStep: 0,\n            raceID: \"\",\n            states:[],\n            sexes:[],\n            roles:[],\n            races:[],\n            completion: false,\n\n        };\n        this.handleChange=this.handleChange.bind(this);\n    }\n    moveNextInvalid(){\n        return  this.state.FirstName === \"\"||\n                this.state.LastName === \"\" ||\n                this.state.username === \"\" ||\n                this.state.password === \"\" ||\n                this.state.Email === \"\"\n    }\n    RegisterInvalid(){\n        return  this.state.Sex === \"\" ||\n                this.state.CellNumber.length !== 12 ||\n                this.state.AddressStreet === \"\" ||\n                this.state.AddressCity === \"\" ||\n                this.state.AddressState === \"\" ||\n                this.state.AddressZip.length !== 5 ||\n                this.state.DateOfBirth.length !== 10 ||\n                this.state.SSN.length !== 11 \n    }\n    componentDidMount(){\n        this.uploadStates();\n        this.uploadSexes();\n        this.uploadRoles();\n        this.uploadRaces();\n    }\n    handleChange = e =>{\n        console.log(this.state.userType)\n        if(window.localStorage.loggedIn !== \"true\"){\n            this.setState({ userType:2})\n        }\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n    registerUser=()=>{\n        //backend call to add the user to the backend\n        fetch(`http://162.243.165.50:4000/RegisterUser`, {\n            method:\"POST\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n            },\n            body: JSON.stringify({\n                FirstName: this.state.FirstName,\n                LastName: this.state.LastName,\n                Sex: this.state.Sex,\n                Email: this.state.Email,\n                username: this.state.username,\n                password: this.state.password,\n                CellNumber: this.state.CellNumber,\n                AddressStreet: this.state.AddressStreet,\n                AddressCity: this.state.AddressCity,\n                AddressState: this.state.AddressState,\n                AddressZip: this.state.AddressZip,\n                DateOfBirth: this.state.DateOfBirth,\n                SSN: this.state.SSN,\n                userType:this.state.userType,\n                raceID: this.state.raceID\n            })\n        })\n        .then(this.setState({completion:true}))\n        .catch(err => console.log(err))\n        \n    }\n    \n    LoginDirect(){\n        window.location.replace('/')\n    }\n    homeRedirect = () =>{\n        window.location.replace('/DoctorRegistration')\n    }\n    \n    stepNext=()=>{\n        this.setState(state => ({\n            registrationStep:state.registrationStep+1\n        }))\n    }\n\n    uploadStates=()=> {\n        fetch(`http://162.243.165.50:4000/states`)\n        .then(result => result.json())\n        .then(Response => this.setState({ states:Response.data }))\n        .catch(err => console.log(err))\n    }\n    uploadSexes=()=> {\n        fetch(`http://162.243.165.50:4000/sexes`)\n        .then(result => result.json())\n        .then(Response => this.setState({ sexes:Response.data }))\n        .catch(err => console.log(err))\n    }\n    uploadRoles=()=> {\n        fetch(`http://162.243.165.50:4000/roles`)\n        .then(result => result.json())\n        .then(Response => this.setState({ roles:Response.data }))\n        .catch(err => console.log(err))\n    }\n    uploadRaces=()=> {\n        fetch(`http://162.243.165.50:4000/races`)\n        .then(result => result.json())\n        .then(Response => this.setState({ races:Response.data }))\n        .catch(err => console.log(err))\n    }\n    render(){\n        const {classes}=this.props;\n        return(\n            <div>\n                <IconButton onClick={this.LoginDirect}>\n                    {window.localStorage.loggedIn !== \"true\" ? (\n                        <HomeLogo style={{color: \"#212121\"}} className={classes.icon} />\n                    ):(\n                        <LockLogo style={{color: \"#212121\"}} className={classes.icon} />\n                    )}\n                </IconButton>\n                <Typography variant=\"h3\" className={classes.heading}>Medical Center Registration</Typography>\n                <Paper elevation={10} className={classes.paperForm}>\n                    {this.state.registrationStep===0 ? (\n                        <div>\n                            <BasicInformation handleChange={this.handleChange} val={this.state}/>\n                            <FormControl margin=\"normal\" fullWidth >\n                                <Button onClick={this.stepNext} disabled={this.moveNextInvalid()}>\n                                    Next\n                                </Button>\n                            </FormControl>\n                        </div>\n                    ):(\n                        <div>\n                            <BasicInformationPtTwo handleChange={this.handleChange} val={this.state}/>\n                            <FormControl margin=\"normal\" fullWidth >\n                                <Button disabled={this.RegisterInvalid()} onClick={this.registerUser}>\n                                    Register\n                                </Button>\n                            </FormControl>\n                        </div>\n\n                    )}\n                </Paper>\n                    {window.localStorage.userType !== \"3\" ? (\n                        <Dialog maxWidth=\"md\" open={this.state.completion}>\n                            <DialogTitle id=\"form-dialog-title\"></DialogTitle>\n                            <DialogContent>\n                                <DialogContentText>\n                                    Welcome to T7 Clinics {this.state.FirstName}, please proceed to the login page to book your first appointment\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={this.LoginDirect} color=\"primary\" fullWidth variant=\"contained\">\n                                    Login\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                    ):(\n                        <Dialog maxWidth=\"md\" open={this.state.completion}>\n                            <DialogTitle id=\"form-dialog-title\"></DialogTitle>\n                            <DialogContent>\n                                <DialogContentText>\n                                    Thank you for registering {this.state.FirstName}\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={this.homeRedirect} fullWidth color=\"primary\" variant=\"contained\">\n                                    Ok\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                    )}\n            </div>\n        );\n    }\n    \n}\n\nRegistrationForm.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n  \n  export default withStyles(styles)(RegistrationForm);","import React from 'react';\nimport RegistrationForm from '../Components/Registration/RegistrationForm';\nimport './Home.css';\n\nclass Registration extends React.Component{\n    render() {\n        return(\n            <div className='Home-image'>\n                <div className='Home-overlay'>\n                    <RegistrationForm/>\n                </div>\n            </div>\n            \n        );\n    }\n}\n\n\n\nexport default Registration;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport {Paper, Typography, TextField, Divider, Grid} from '@material-ui/core';\n\n\n\n//Define the looks\nconst styles = theme => ({\n  root: {\n    width: '75%',\n    backgroundColor: \"#e0e0e0\",\n    padding: theme.spacing.unit*3,\n    height: '98%',\n    margin:\"auto\",\n    marginTop: '2%',\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField:{\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  dense: {\n    marginTop: 19,\n  },\n  menu: {\n    width: 200,\n  },\n  button: {\n    margin: theme.spacing.unit,\n  },\n});\n\n\nclass MedicalInformation extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      patientID: '',\n      editImmunizationRecord: '',\n      editMedicalCondition: '',\n      editAllergies: '',\n      editProcedureRecord: '',\n\n    };\n  }\n\ncomponentDidMount(){\n  this.getMedicalRecord();\n};\n\ngetMedicalRecord=()=>{\n  fetch(`http://162.243.165.50:4000/GetMedicalHistory/${window.localStorage.userID}`)\n  .then(result => result.json())\n  .then(res => this.setState({\n    patientID: res.data[0].PatientID,\n    editImmunizationRecord: res.data[0].ImmunizationRecord,\n    editMedicalCondition: res.data[0].MedicalCondition,\n    editAllergies: res.data[0].Allergies,\n    editProcedureRecord: res.data[0].ProcedureRecord\n  }))\n  .catch(err => console.error(err))\n};\n\n  render() {\n    const {classes} = this.props;\n    return (\n      <div>\n          <Paper className={classes.root} elevation={2}>\n              <Typography variant=\"h3\" >Patient Medical Record</Typography>\n              <br />\n              <Divider variant=\"middle\"/>\n              <br/>\n              <Typography variant=\"h4\" >Summary</Typography>\n              <TextField\n                label=\"Patient ID\"\n                margin=\"normal\"\n                className={classes.textField}\n                value={this.state.patientID}\n                disabled\n                onChange={this.handleChange}\n              />\n              <br/>\n              <br/>\n              <Grid container spacing={24}>\n                <Grid item sm>\n                <TextField\n                  label=\"Immunization Record\"\n                  className={classes.textField}\n                  value={this.state.editImmunizationRecord}\n                  margine=\"normal\"\n                  multiline\n                  variant=\"outlined\"\n                  fullWidth\n                  rows=\"8\"\n                  disabled\n                  onChange={this.handleChangeImmunizationRecord}\n                />\n              </Grid>\n                <Grid item sm>\n                  <TextField\n                  label=\"Medical Condition\"\n                  className={classes.textField}\n                  value={this.state.editMedicalCondition}\n                  margine=\"normal\"\n                  multiline\n                  variant=\"outlined\"\n                  fullWidth\n                  rows=\"8\"\n                  disabled\n                  onChange={this.handleChangeMedicalCondition}\n                  />\n                </Grid>\n              </Grid>\n              \n              <Grid container spacing={24}>\n                <Grid item sm>\n                <TextField\n                  label=\"Allergies\"\n                  className={classes.textField}\n                  value={this.state.editAllergies}\n                  margine=\"normal\"\n                  multiline\n                  variant=\"outlined\"\n                  fullWidth\n                  rows=\"8\"\n                  disabled\n                  onChange={this.handleChangeAllergies}\n                />\n              </Grid>\n                <Grid item sm>\n                  <TextField\n                  label=\"Procedures Record\"\n                  className={classes.textField}\n                  value={this.state.editProcedureRecord}\n                  margine=\"normal\"\n                  multiline\n                  variant=\"outlined\"\n                  fullWidth\n                  rows=\"8\"\n                  disabled\n                  onChange={this.handleChangeProcedureRecord}\n                  />\n                </Grid>\n              </Grid>\n              \n          </Paper>\n      </div>\n    );\n  }\n}\n\nMedicalInformation.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MedicalInformation);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Paper, Divider, Button, TextField, Typography, FormControl, withStyles, Grid } from \"@material-ui/core\";\nimport MaskedInput from 'react-text-mask';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst styles = theme => ({\n    paperForm: {\n        width: '75%',\n        display: \"flex\",\n        backgroundColor: \"#e0e0e0\",\n        padding: theme.spacing.unit*3,\n        height: '98%',\n        margin:\"auto\",\n        marginTop: '2%',\n    },\n      container: {\n        display: 'flex',\n        flexDirection: 'column',\n      },\n      editerButtons: {\n        margin: theme.spacing.unit,\n        fontSize: 16,\n    },\n});\n\n\nclass ProfileInfoTest extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            first: \"\",\n            last: \"\",\n            user: \"\",\n            pass: \"\",\n            email:\"\",\n            cellnumber: \"\",\n            streetaddr: \"\",\n            cityaddr:\"\",\n            stateaddr: \"\",\n            zipaddr: \"\",\n            dob:\"\",\n            ssn: \"\",\n            sex: \"\",\n            insuranceID: \"\",\n            insuranceContact: \"\",\n            deduct: \"\",\n            company: \"\",\n            editing: false\n        };\n        this.handleChange=this.handleChange.bind(this);\n    }\n    retrieveUserInfo=()=> {\n        if(window.localStorage.userType === \"2\"){\n            fetch(`http://162.243.165.50:4000/Patient/${window.localStorage.LoginTableID}`)\n            .then(result => result.json())\n            .then(res => this.setState( {    first: res.data[0].FirstName,\n                                            last: res.data[0].LastName,\n                                            user: res.data[0].Username, \n                                            pass: res.data[0].Password, \n                                            email: res.data[0].Email,\n                                            dob: res.data[0].DOB,\n                                            ssn: res.data[0].SSN, \n                                            sex: res.data[0].SexID, \n                                            cellnumber: res.data[0].CellNumber,\n                                            streetaddr:res.data[0].AddressStreet,\n                                            cityaddr: res.data[0].AddressCity,\n                                            stateaddr: res.data[0].AddressStateID,\n                                            zipaddr: res.data[0].AddressZip}))\n            .catch(err => console.log(err));\n        }\n        else{\n            fetch(`http://162.243.165.50:4000/Employee/${window.localStorage.LoginTableID}`)\n            .then(result => result.json())\n            .then(res => this.setState( {    first: res.data[0].FirstName,\n                                            last: res.data[0].LastName,\n                                            user: res.data[0].Username, \n                                            pass: res.data[0].Password, \n                                            email: res.data[0].Email,\n                                            dob: res.data[0].DOB,\n                                            ssn: res.data[0].SSN, \n                                            sex: res.data[0].SexID, \n                                            cellnumber: res.data[0].CellNumber,\n                                            streetaddr:res.data[0].AddressStreet,\n                                            cityaddr: res.data[0].AddressCity,\n                                            stateaddr: res.data[0].AddressStateID,\n                                            zipaddr: res.data[0].AddressZip}))\n            .catch(err => console.log(err))\n        }\n    }\n    getInsurance(){\n            if(window.localStorage.userType === \"2\") {\n                fetch(`http://162.243.165.50:4000/Insurance/${window.localStorage.userID}`)\n                .then(result => result.json())\n                .then(res => this.setState({\n                    deduct:res.data[0].Deductible,\n                    insuranceID: res.data[0].InsuranceClientID,\n                    insuranceContact: res.data[0].ContactNumber,\n                    company: res.data[0].Name,\n\n                }))\n                .catch(err => console.log(err))\n        }\n\n    }\n    updateUserInfo=()=>{\n        //backend call to add the user to the backend\n        if(window.localStorage.userType!== \"2\"){\n            fetch(`http://162.243.165.50:4000/UpdateUser`, {\n            method:\"POST\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n            },body: JSON.stringify({\n                    UserID: window.localStorage.userID,\n                    InsuranceID: 0,\n                    FirstName:this.state.first,\n                    LastName:this.state.last,\n                    Sex: this.state.sex,\n                    Email: this.state.email,\n                    username: this.state.user,\n                    password: this.state.pass,\n                    CellNumber: this.state.cellnumber,\n                    AddressStreet: this.state.streetaddr,\n                    AddressCity: this.state.cityaddr,\n                    AddressState: this.state.stateaddr,\n                    AddressZip: this.state.zipaddr,\n                    userType: window.localStorage.userType,\n                    LoginTableID: window.localStorage.LoginTableID,\n                    Deductible: 0,\n                    Name: \"Name\",\n                    ContactNumber: \"000-000-0000\"\n                })\n            })\n        .catch(err => console.log(err))\n        }\n        else{\n            fetch(`http://162.243.165.50:4000/UpdateUser`, {\n            method:\"POST\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n            },body: JSON.stringify({\n                    UserID: window.localStorage.userID,\n                    InsuranceID: this.state.insuranceID,\n                    FirstName:this.state.first,\n                    LastName:this.state.last,\n                    Sex: this.state.sex,\n                    Email: this.state.email,\n                    username: this.state.user,\n                    password: this.state.pass,\n                    CellNumber: this.state.cellnumber,\n                    AddressStreet: this.state.streetaddr,\n                    AddressCity: this.state.cityaddr,\n                    AddressState: this.state.stateaddr,\n                    AddressZip: this.state.zipaddr,\n                    userType: window.localStorage.userType,\n                    LoginTableID: window.localStorage.LoginTableID,\n                    Deductible: this.state.deduct,\n                    Name: this.state.company,\n                    ContactNumber: this.state.insuranceContact\n                })\n            })\n        .catch(err => console.log(err))\n        }\n        \n        \n    }\n    EmptyEntries(){\n        return  this.state.first === \"\"||\n                this.state.last === \"\" ||\n                this.state.sex === \"\" ||\n                this.state.email === \"\" ||\n                this.state.user === \"\" ||\n                this.state.pass === \"\" ||\n                this.state.cellnumber === \"\" ||\n                this.state.streetaddr=== \"\" ||\n                this.state.cityaddr === \"\" ||\n                this.state.stateaddr === \"\" ||\n                this.state.zipaddr === \"\"\n    }\n    validateUsername(){\n        if(this.state.user.length >=6 || this.state.user.length <=1 ){\n            return true\n        }\n        return false\n    }\n    validatePassword(){\n        if(this.state.pass.length >=6 || this.state.pass.length <=1 ){\n            return true\n        }\n        return false\n    }\n    SSNMaskCustom(props) {\n        const {...other } = props;\n        return (\n          <MaskedInput\n            guide={false}\n            {...other}\n            mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n            placeholderChar={'\\u2000'}\n            showMask\n          />\n        );\n    }\n    PhoneMaskCustom(props) {\n        const {...other } = props;\n      \n        return (\n          <MaskedInput\n            {...other}\n            guide={false}\n            mask={[/[1-9]/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n            placeholderChar={'\\u2000'}\n            showMask\n          />\n        );\n    }\n    componentDidMount(){\n        this.retrieveUserInfo();\n        this.getInsurance();\n    }\n    handleChange = e =>{\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n    editMode = _ => {\n        console.log(this.state)\n        this.setState({\n            editing: true\n        });\n    }\n    saveChanges = _ => {\n        this.updateUserInfo();\n        this.setState({\n            editing: false\n        });\n    }\n    revertChanges = _ => {\n        this.retrieveUserInfo();\n        this.setState({\n            editing: false\n        });\n    }\n//for implementation of user menu, Paper className will be removed and\n// user menu will define css styles. \n  render() { \n      const {classes}=this.props;\n    return (\n      <div>\n          <Paper className={classes.paperForm}>\n            <form  noValidate autoComplete=\"off\">\n                <div>\n                    {window.localStorage.userType=== \"2\" ? (\n                        <Typography variant=\"h5\">Welcome {this.state.first}</Typography>\n                    ):(\n                        <Typography variant=\"h5\">Welcome Dr. {this.state.last}</Typography>        \n                    )}\n                    <br/>\n                    <Divider variant=\"middle\"/>\n                    <br/>\n                </div>\n                <div>\n                    <Typography variant=\"h6\" >User Information</Typography>\n                    <Grid container spacing={8}>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl  margin=\"dense\" fullWidth>\n                                <TextField disabled={!this.state.editing}\n                                    name=\"first\"\n                                    label=\"First Name\"\n                                    variant=\"outlined\"\n                                    value={this.state.first}\n                                    defaultValue={this.state.first}\n                                    onChange={this.handleChange}\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl  margin=\"dense\" fullWidth>\n                                <TextField disabled={!this.state.editing}\n                                    name=\"last\"\n                                    label=\"Last Name\"\n                                    variant=\"outlined\"\n                                    value={this.state.last}\n                                    onChange={this.handleChange}\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={5}>\n                            <FormControl  margin=\"dense\" fullWidth>\n                                <TextField disabled={!this.state.editing}\n                                    name=\"streetaddr\"\n                                    label=\"Street Address\"\n                                    variant=\"outlined\"\n                                    value={this.state.streetaddr}\n                                    onChange={this.handleChange}\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={4}>\n                            <FormControl  margin=\"dense\" fullWidth>\n                                <TextField disabled={!this.state.editing}\n                                    name=\"cityaddr\"\n                                    label=\"City\"\n                                    variant=\"outlined\"\n                                    value={this.state.cityaddr}\n                                    onChange={this.handleChange}\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={1}>\n                            <FormControl  margin=\"dense\" fullWidth>\n                                <TextField disabled={!this.state.editing}\n                                    name=\"stateaddr\"\n                                    label=\"State\"\n                                    variant=\"outlined\"\n                                    value={this.state.stateaddr}\n                                    onChange={this.handleChange}\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={2}>\n                            <FormControl  margin=\"dense\" fullWidth>\n                                <TextField disabled={!this.state.editing}\n                                    name=\"zipaddr\"\n                                    label=\"Zip Code\"\n                                    variant=\"outlined\"\n                                    value={this.state.zipaddr}\n                                    onChange={this.handleChange}\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={4}>\n                            <FormControl fullWidth margin=\"dense\">\n                                <TextField disabled\n                                    name=\"dob\"\n                                    label=\"Birthdate\"\n                                    variant=\"outlined\"\n                                    value={this.state.dob.substring(0,10)}\n                                    onChange={this.handleChange}\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={4}>\n                            <FormControl fullWidth margin=\"dense\" >\n                                <TextField disabled={!this.state.editing}\n                                    name=\"cellnumber\"\n                                    label=\"Contact Phone\"\n                                    variant=\"outlined\"\n                                    value={this.state.cellnumber}\n                                    inputComponent={this.PhoneMaskCustom(classes)}\n                                    onChange={this.handleChange}\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={4}>\n                            <FormControl fullWidth margin=\"dense\" >\n                                <TextField disabled\n                                    name=\"ssn\"\n                                    label=\"Last Four of SSN\"\n                                    variant=\"outlined\"\n                                    value={this.state.ssn}\n                                    inputComponent={this.SSNMaskCustom(classes)}\n                                />\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                    <br/>\n                    <Divider variant=\"middle\" />\n                    <br/>\n                </div> \n                { window.localStorage.userType === \"2\" &&\n                    <div>\n                        <Typography variant=\"h6\">Insurance Information</Typography>\n                            <Grid container spacing= {8}>\n                                <Grid item xs={12} sm={6}>\n                                    <FormControl fullWidth margin=\"dense\" >\n                                        <TextField disabled={!this.state.editing}\n                                            name=\"company\"\n                                            label=\"Network\"\n                                            variant=\"outlined\"\n                                            value={this.state.company}\n                                            onChange={this.handleChange}\n                                        />\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <FormControl fullWidth margin=\"dense\" >\n                                        <TextField disabled={!this.state.editing}\n                                            name=\"insuranceID\"\n                                            label=\"Insurance ID\"\n                                            variant=\"outlined\"\n                                            value={this.state.insuranceID}\n                                            onChange={this.handleChange}\n                                        />\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <FormControl fullWidth margin=\"dense\" >\n                                        <TextField disabled={!this.state.editing}\n                                            name=\"deduct\"\n                                            label=\"Deductible\"\n                                            variant=\"outlined\"\n                                            value={this.state.deduct}\n                                            onChange={this.handleChange}\n                                        />\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <FormControl fullWidth margin=\"dense\" >\n                                        <TextField disabled={!this.state.editing}\n                                            name=\"insuranceContact\"\n                                            label=\"Insurance Contact Number\"\n                                            variant=\"outlined\"\n                                            value={this.state.insuranceContact}\n                                            inputComponent={this.PhoneMaskCustom(classes)}\n                                            onChange={this.handleChange}\n                                        />\n                                    </FormControl>\n                                </Grid>\n                            </Grid>\n                        <br/>\n                        <Divider variant=\"middle\" />\n                        <br/>\n                    </div>\n                }\n\n                <div>\n                    <Typography variant=\"h6\">Account Information</Typography>\n                    <Grid container spacing={8}>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl  margin=\"dense\" fullWidth>\n                                <TextField disabled={!this.state.editing}\n                                    name=\"user\" \n                                    label=\"Username\"\n                                    variant=\"outlined\"\n                                    onChange={this.handleChange}\n                                    value={this.state.user}\n                                    error={!this.validateUsername()}\n                                    helperText={this.validateUsername() ? \"\":\"Username is not valid\"}\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl  margin=\"dense\" fullWidth>\n                                <TextField disabled={!this.state.editing}\n                                    name=\"pass\"\n                                    type=\"password\" \n                                    label=\"Password\"\n                                    variant=\"outlined\"\n                                    onChange={this.handleChange}\n                                    value={this.state.pass}\n                                    error={!this.validatePassword()}\n                                    helperText={this.validatePassword() ? \"\":\"Password is not valid\"}\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl margin=\"dense\" fullWidth>\n                                <TextField disabled={!this.state.editing}\n                                    name=\"email\" \n                                    label=\"Email\"\n                                    variant=\"outlined\"\n                                    onChange={this.handleChange}\n                                    value={this.state.email}\n                                />\n                            </FormControl>\n                        </Grid>\n                        \n                        <br/>\n                        <Divider variant=\"middle\"/>\n                        <br/>\n\n                    </Grid>\n                </div>\n                {!this.state.editing ? (\n                    <div>\n                        {this.retrieveUserInfo}\n                        <FormControl margin=\"none\">\n                         <Button variant=\"contained\" size=\"small\" className={classes.editerButtons} onClick={this.editMode}>\n                            <EditIcon />\n                                Edit\n                          </Button>\n                        </FormControl>\n                      </div>\n                  ):(\n                      <div>\n                          <FormControl margin=\"right\">\n                             <Button disabled={this.EmptyEntries()} variant=\"contained\" size=\"small\" className={classes.editerButtons} onClick={this.saveChanges}>\n                                <SaveIcon />\n                                    Save\n                              </Button>\n                              </FormControl>\n                              <FormControl margin=\"left\">\n                             <Button variant=\"contained\" size=\"small\" className={classes.editerButtons} onClick={this.revertChanges} >\n                                <CancelIcon />\n                                    Revert\n                              </Button>\n                          </FormControl>\n                      </div>\n                  )}  \n                        {/* //CLOSE HERER */}\n            </form>\n          </Paper>\n      </div>\n    );\n  }\n}\n\nProfileInfoTest.propTypes={\n    classes: PropTypes.object.isRequired\n};\n//PhoneMaskCustom.propTypes = {\n//    inputRef: PropTypes.func.isRequired,\n//};\nexport default withStyles (styles)(ProfileInfoTest);","import React, { Component } from 'react';\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\nimport MedicalInformation from '../Components/Profile/MedicalInformation';\n//import ProfileInfo from '../Components/Profile/ProfileInfo';\nimport { withStyles } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport './Profile.css'\nimport ProfileInfoTest from '../Components/Profile/ProfileInfoTest';\n\nconst styles = theme =>({\n  root: {\n      height: \"200vh\",\n      backgroundImage: `url(${Image})`,\n  },\n});\n\nclass Profile extends Component {\n  render() { \n    return (\n      <div className='Profile-image'>\n        <NavigationBar title={\"My Profile\"} Tab={1}/>\n        <ProfileInfoTest/>\n        {window.localStorage.userType === \"2\" &&\n        <MedicalInformation/>}\n        <br/>\n      </div>\n    );\n  }\n}\n\nProfile.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Profile);\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport WhichFacility from '../Appointments/WhichFacility';\n\n\nconst styles = theme => ({\n    icon: {\n      margin: theme.spacing.unit,\n      fontSize: 32,\n    },\n    root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n      },\n      table: {\n        minWidth: 800,\n      },\n});\n\nclass ModifyFacility extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\topenForm: false,\n\t\t\tselectedFacility: \"\",\n\t\t\tFacilities: this.props.val.Facilities,\n\t\t\tFacilityID: \"\",\n\t\t}\n\t}\n\t\n\tcomponentDidMount(){\n\t\tthis.setState({FacilityID: this.props.Sub_FacilityID})\n        //this.getFacilities();\n    }\n\t\n\t// Get Facility information\n\t/*getFacilities=()=> {\n        fetch(`http://162.243.165.50:4000/Facilities`)\n        .then(result => result.json())\n        .then(res => this.setState({ Facilities:res.data }))\n        .catch(err => console.log(err))\n    };*/\n\t\n\tgetFacilityIDFromName(lookUpName){\n\t\tfor(var i = 0; i < this.state.Facilities.length; i++){\n\t\t\tif(this.state.Facilities[i].FacilityName === lookUpName){\n\t\t\t\treturn this.state.Facilities[i].FacilityID\n\t\t\t}\n\t\t}\n\t\treturn -1\n\t}\n\t\n\thandleClickOpen = () => {\n        //this.getFacilities();\n        this.setState({ Facilities: this.props.val.Facilities,\n\t\t\t\t\t\topenForm: true });\n    };\n\n    handleClose = () => {\n        this.setState({ openForm: false });\n    };\n\t\n\thandleChange = e =>{\n        this.setState({\n\t\t\t[e.target.name] : e.target.value,\n\n\t\t})\n\t\tvar i;\n\t\tfor(i=0; i<this.state.Facilities.length;i++){\n\t\t\tif(this.state.Facilities[i].FacilityID === e.target.value){\n\t\t\t\tthis.setState({selectedFacility:this.state.Facilities[i].FacilityName})\n\t\t\t}\n\t\t}\n    }\n\t\n\thandleDoneSelected = () =>{\n\t\tif(this.state.selectedFacility !== \"\"){\n\t\t\tfor(var i=0; i < this.props.val.WorkSchedule.length; i++){\n\t\t\t\tif(this.props.val.WorkSchedule[i].WeekDayID === this.props.Sub_DayID){\n\t\t\t\t\tconsole.log(\"Facility: \" + this.state.selectedFacility)\n\t\t\t\t\tconsole.log(this.props.val.WorkSchedule[i])\n\t\t\t\t\tthis.props.val.WorkSchedule[i].FacilityName = this.state.selectedFacility\n\t\t\t\t\tthis.props.val.WorkSchedule[i].FacilityID = this.getFacilityIDFromName(this.state.selectedFacility)\n\t\t\t\t}\n\t\t\t}\n\t\t\tconsole.log(\"UPDATING\")\n\t\t\tfetch(`http://162.243.165.50:4000/UpdateWorkScheduleDay/`, {\n            method:\"POST\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n            },\n            body: JSON.stringify({\n                UpdateDayID: this.props.Sub_DayID,\n\t\t\t\tEmployeeID: window.localStorage.userID,\n\t\t\t\tNewFacilityID: this.getFacilityIDFromName(this.state.selectedFacility)\n            })\n        })\n        .then(this.grabAppointments)\n        .catch(err => console.log(err));\n\t\t}\n\t\tthis.handleClose()\n\t\tsetTimeout(function(){\n\t\t\twindow.location.replace('/Scheduling')\n\t\t}, 200);\n\t}\n\t\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<Button variant=\"contained\" color=\"inherit\" className={this.props.Button} fullWidth onClick={this.handleClickOpen}>\n                    Change Facility\n                </Button>\n\t\t\t\t<Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\n\t\t\t\t\t<DialogTitle id=\"form-dialog-title\"></DialogTitle>\n\t\t\t\t\t<DialogContent>\n                        <DialogContentText>\n                            Please select a new facilty for this weekday\n                        </DialogContentText>\n                        <WhichFacility val={this.state} handleChange={this.handleChange}/>\n                    </DialogContent>\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<Button onClick={this.handleDoneSelected} disabled={this.state.FacilityID===\"\"} color=\"primary\">\n                            Done\n                        </Button>\n                    </DialogActions>\n\t\t\t\t</Dialog>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nModifyFacility.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ModifyFacility);\n\n","import { TextField, MenuItem } from \"@material-ui/core\";\nimport React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\n\nfunction WhichDay(props){\n    \n    return(\n        <div>\n            <FormControl margin=\"normal\" fullWidth>\n                    <TextField\n                        id=\"DayID\"\n                        select\n                        label=\"Please Choose A Day\"\n                        name=\"DayID\"\n                        variant=\"standard\"\n                        onChange={props.handleChange}\n                        value={props.val.DayID}   \n                        required                   \n                    >\n                        {props.val.OpenDays.map(option => (\n                            <MenuItem key={option.DayID} value={option.DayID}>\n                                {option.WeekDay}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                </FormControl>\n        </div>\n    );\n}\n\nexport default WhichDay;","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport WhichFacility from '../Appointments/WhichFacility';\nimport WhichDay from './WhichDay';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n    icon: {\n      margin: theme.spacing.unit,\n      fontSize: 32,\n    },\n});\n\nclass AddNewDay extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n\t\t\topenForm: false,\n\t\t\tFacilities: [],\n\t\t\tOpenDays: [],\n\t\t\tDayID: -1,\n\t\t\tFacilityID: -1,\n\t\t}\n\t}\n\t\n\tgetOpenDaysList(){\n\t\tvar newDayList = []\n\t\tvar shouldAddNew = true\n\t\tfor(var i = 0; i < this.props.val.Weekdays.length; i++){\n\t\t\tfor(var k = 0; k < this.props.val.WorkSchedule.length; k++){\n\t\t\t\tif(this.props.val.WorkSchedule[k].WeekDayID === this.props.val.Weekdays[i].DayID)\n\t\t\t\t\tshouldAddNew = false\n\t\t\t}\n\t\t\tif(shouldAddNew){\n\t\t\t\tnewDayList.push(this.props.val.Weekdays[i])\n\t\t\t}\n\t\t\tshouldAddNew = true\n\t\t}\n\t\treturn newDayList\n\t}\n\t\n\thandleClickOpen = () => {\n        this.setState({ Facilities: this.props.val.Facilities,\n\t\t\t\t\t\tOpenDays : this.getOpenDaysList(),\n\t\t\t\t\t\topenForm: true });\n    };\n\n    handleClose = () => {\n        this.setState({ openForm: false,\n\t\t\t\t\t\tDayID: -1,\n\t\t\t\t\t\tFacilityID: -1 });\n    };\n\t\n\thandleChange = e =>{\n        this.setState({\n\t\t\t[e.target.name] : e.target.value\n        })\n    }\n\t\n\thandleConfirmChange = () => {\n\t\tfetch(`http://162.243.165.50:4000/AddNewWorkSchedule/`, {\n\t\tmethod:\"POST\",\n        headers: {\n            \"Content-Type\":\"application/json\",\n        },\n        body: JSON.stringify({\n            DayID: this.state.DayID,\n\t\t\tEmployeeID: window.localStorage.userID,\n\t\t\tFacilityID: this.state.FacilityID\n        })})\n\t\tconsole.log(\"DayID : \" + this.state.DayID)\n\t\tconsole.log(\"EmployeeID : \" + window.localStorage.userID)\n\t\tconsole.log(\"FacilityID : \" + this.state.FacilityID)\n\t\tthis.handleClose()\n\t\tsetTimeout(function(){\n\t\t\twindow.location.replace('/Scheduling')\n\t\t}, 1000);\n\t};\n\t\n\trender(){\n\t\treturn (\n\t\t\t<div>\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>\n                    Add New Day\n                </Button>\n                <Dialog open={this.state.openForm} onClose={this.handleClose}>\n                    <DialogTitle id=\"form-dialog-title\">Add a new day</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Please fill out the information for a new day\n                        </DialogContentText>\n\t\t\t\t\t\t<WhichFacility val={this.state} handleChange={this.handleChange}/>\n\t\t\t\t\t\t<WhichDay val={this.state} handleChange={this.handleChange}/>\n                    </DialogContent>\n                    <DialogActions>\n\t\t\t\t\t\t<Button onClick={this.handleConfirmChange} color=\"primary\">\n                            Confirm\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"secondary\">\n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n\t\t)\n\t}\n}\n\nAddNewDay.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  export default withStyles(styles)(AddNewDay);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography, FormControl, withStyles } from \"@material-ui/core\";\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst styles = theme => ({\n\troot: {\n        width: '100%',\n        alignItems: \"center\",\n        display: \"flex\",\n        height: \"100vh\",\n        flexDirection: 'column',\n        backgroundColor: \"#a09d9d\",\n        padding: theme.spacing.unit*3,\n        margin:\"auto\",\n  \n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '20%',\n        flexShrink: 0,\n      },\n      secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n        flexBasis: '100%',\n        margin: 'auto'\n      },\n});\n\nclass AppointmentsAffected extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\texpanded: null,\n\t\t\tAppointments: [],\n\t\t}\n\t}\n\t\n\tcomponentDidMount(){\n\t\tthis.grabAppointments()\n    }\n\t\n\thandleChange = panel => (event, expanded) => {\n        this.setState({\n            expanded: expanded ? panel : false,\n        });\n    }\n\t\n\tgrabAppointments=()=>{\n        //backend call to grab the appointments not in schedule for the user\n        fetch(`http://162.243.165.50:4000/AppointmentsNotInSchedule/${window.localStorage.userID}`)\n        .then(result => result.json())\n        .then(Response => this.setState({ Appointments:Response.data[0]}))\n        .catch(err => console.log(err));\n    }\n\t\n\trender(){\n\t\tconst {classes}=this.props;\n\t\tconst { expanded } = this.state;\n\t\treturn (\t\n\t\t\t<div>\n\t\t\t\t{this.state.Appointments.length > 0 ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t<h2>Upcoming Appointments not in Schedule</h2>\n\t\t\t\t\t{this.state.Appointments.map(option => (\n\t\t\t\t\t\t<FormControl key={option.idAppointment} fullWidth>\n\t\t\t\t\t\t\t<ExpansionPanel square expanded={expanded === option.idAppointment}  onChange={this.handleChange(option.idAppointment)}>\n\t\t\t\t\t\t\t\t<ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n\t\t\t\t\t\t\t\t\t<Typography className={classes.heading}>Patient: <b>{option.FirstName}</b></Typography>\n\t\t\t\t\t\t\t\t\t<Typography className={classes.heading}>Date: <b>{option.AppointmentDate.substr(0,10)}</b></Typography>\n\t\t\t\t\t\t\t\t\t<Typography className={classes.heading}>Time: <b>{option.AppointmentTime.substr(0,5)}</b></Typography>\n\t\t\t\t\t\t\t\t\t<Typography className={classes.heading}>Facility: <b>{option.FacilityName}</b></Typography>\n\t\t\t\t\t\t\t\t</ExpansionPanelSummary>\n\t\t\t\t\t\t\t\t<ExpansionPanelDetails>\n\t\t\t\t\t\t\t\t\t<Typography className={classes.secondaryHeading}>\n\t\t\t\t\t\t\t\t\t\tReason:{option.Reason === \"null\" ? (<text> No Reason Specified</text>):(<text>{option.Reason}</text>)} <br/>\n\t\t\t\t\t\t\t\t\t\tAppointmentID: {option.idAppointment} <br/>\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</ExpansionPanelDetails>\n\t\t\t\t\t\t\t</ExpansionPanel>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t):(\n\t\t\t\t\t<div></div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nAppointmentsAffected.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AppointmentsAffected);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Typography, FormControl, withStyles, Grid } from \"@material-ui/core\";\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ModifyFacility from './ModifyFacility';\nimport AddNewDay from './AddNewDay';\nimport AppointmentsAffected from './AppointmentsAffected';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n//import WhichFacility from '../Appointments/WhichFacility';'\n\nconst styles = theme => ({\n\troot: {\n        width: '100%',\n        alignItems: \"left\",\n        display: \"flex\",\n        height: \"100vh\",\n        flexDirection: 'column',\n        backgroundColor: \"#a09d9d\",\n        padding: theme.spacing.unit*3,\n        margin:\"auto\",\n  \n    },\n    AdditionButton: {\n        marginLeft:\"70%\",\n        display: \"flex\",\n        flexDirection: 'column',\n        backgroundColor: \"#a09d9d\",\n        padding: theme.spacing.unit*3,\n  \n    },\n    Button: {\n        marginTop: '.5%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '20%',\n        flexShrink: 0,\n      },\n      secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n        flexBasis: '100%',\n        margin: 'auto'\n      },\n});\n\nclass DaySchedule extends React.Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\topenForm: false, // Toggle for dialog box when removing day\n\t\t\tselectedDayID: -1, // Selected day for removal assigned when opening remove day box\n\t\t\tFacilityID: \"\", // Selected facility to be changed\n\t\t\tWorkSchedule: [], // WorkSchedule for specified Employee\n            Facilities: [], // All Facility information\n            Weekdays: [], // All WeekDay information \n\t\t\tAppointments: [] // All Appointment Info for Doctor\n        };\n\t\tthis.handleChange=this.handleChange.bind(this);\n\t}\n\t\n\tcomponentDidMount(){\n\t\tthis.grabAppointments();\n        this.grabWorkSchedule();\n\t\tthis.getFacilities();\n\t\tthis.getWeekday();\n    }\n\t\n\t// Get the WorkSchedule list for specified employee\n\tgrabWorkSchedule=()=>{\n\t\tfetch(`http://162.243.165.50:4000/WorkSchdule/${window.localStorage.userID}`)\n        .then(result => result.json())\n        .then(res => this.setState({ WorkSchedule:res.data[0]}))\n        .catch(err => console.log(err));\n\t}\n\t\n\t// Get Facility information\n\tgetFacilities=()=> {\n        fetch(`http://162.243.165.50:4000/Facilities`)\n        .then(result => result.json())\n        .then(res => this.setState({ Facilities:res.data }))\n        .catch(err => console.log(err))\n    };\n\t\n\t// Get Weekday information\n\tgetWeekday=()=> {\n        fetch(`http://162.243.165.50:4000/Weekday`)\n        .then(result => result.json())\n        .then(res => this.setState({ Weekdays:res.data }))\n        .catch(err => console.log(err))\n    };\n\t\n\tgrabAppointments=()=>{\n        //backend call to grab the appointments for the user\n        fetch(`http://162.243.165.50:4000/Appointments/`, {\n            method:\"POST\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n            },\n            body: JSON.stringify({\n                UserType: window.localStorage.userType,\n                UserID: window.localStorage.userID,\n            })\n        })\n        .then(result => result.json())\n        .then(Response => this.setState({ Appointments:Response.data}))\n        .catch(err => console.log(err));\n        \n    }\n\t\n\thandleChange = panel => (event, expanded) => {\n        this.setState({\n            expanded: expanded ? panel : false,\n        });\n    }\n\t\n\thandleClickOpen = (dayID) => {\n\t\tthis.setState({selectedDayID: dayID});\n        this.setState({ openForm: true });\n    };\n\n    handleClose = () => {\n        this.setState({ openForm: false });\n    };\n\t\n\thandleConfirmRemove = () => {\n\t\tconsole.log(this.state.selectedDayID)\n\t\tconsole.log(this.state.WorkSchedule)\n\t\tfetch(`http://162.243.165.50:4000/RemoveWorkScheduleDay/`, {\n            method:\"POST\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n            },\n            body: JSON.stringify({\n                RemoveDayID: this.state.selectedDayID,\n\t\t\t\tEmployeeID: window.localStorage.userID,\n            })\n        })\n        .then(this.grabAppointments)\n        .catch(err => console.log(err));\n\t\tthis.handleClose()\n\t\tsetTimeout(function(){\n\t\t\twindow.location.replace('/Scheduling')\n\t\t}, 200);\n\t}\n\t\n\tgetDayName(dayID){\n\t\tfor(var i = 0; i < this.state.Weekdays.length; i++){\n\t\t\tif(this.state.Weekdays[i].DayID === dayID){\n\t\t\t\treturn this.state.Weekdays[i].WeekDay\n\t\t\t}\n\t\t}\n\t}\n\t\n\trender(){\n\t\tconst {classes}=this.props;\n\t\tconst { expanded } = this.state;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className={classes.root}>\n\t\t\t\t\t<h2>Current Work Schedule</h2>\n\t\t\t\t\t{this.state.WorkSchedule.map(option => (\n\t\t\t\t\t\t<FormControl key={option.WeekDayID} fullWidth>\n\t\t\t\t\t\t\t<ExpansionPanel square expanded={expanded === option.WeekDayID}  onChange={this.handleChange(option.WeekDayID)}>\n\t\t\t\t\t\t\t\t<ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n\t\t\t\t\t\t\t\t\t<Typography className={classes.heading}>Day:  <b>{option.WeekDay}</b></Typography>\n\t\t\t\t\t\t\t\t\t<Typography className={classes.heading}>Facility:  <b>{option.FacilityName}</b></Typography>\n\t\t\t\t\t\t\t\t</ExpansionPanelSummary>\n\t\t\t\t\t\t\t\t<ExpansionPanelDetails>\n\t\t\t\t\t\t\t\t\t<Typography className={classes.secondaryHeading}>\n\t\t\t\t\t\t\t\t\t\t<Grid container spacing={8}>\n\t\t\t\t                            <Grid item xs={12} sm={9}>\n                                                <ModifyFacility  val={this.state} Button={classes.Button} Sub_DayID={option.WeekDayID} Sub_FacilityID={option.FacilityID}/>\n                                            </Grid>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm={3}>\n                                                <Button fullWidth variant=\"contained\" className={classes.Button} onClick={()=>this.handleClickOpen(option.WeekDayID)} color=\"secondary\" marginTop=\"10%\">\n                                                    Remove Day\n                                                </Button>\n\t\t\t\t\t\t\t\t\t\t\t\t<Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogTitle id=\"form-dialog-title\"></DialogTitle>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogContentText>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAre you sure you want to remove {this.getDayName(this.state.selectedDayID)} from your Schedule?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DialogContentText>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button className={classes.Button} onClick={this.handleClose} color=\"primary\" variant=\"contained\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNo\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button className={classes.Button} onClick={this.handleConfirmRemove} color=\"secondary\" variant=\"contained\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tYes\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t\t\t\t\t\t\t</Dialog>\n                                            </Grid>\n                                        </Grid>\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</ExpansionPanelDetails>\n\t\t\t\t\t\t\t</ExpansionPanel>\n\t\t\t\t\t\t</FormControl>\t\n\t\t\t\t\t))}\n\t\t\t\t\t<div className={classes.AdditionButton}>\n                        <AddNewDay val={this.state} Button={classes.Button}/>\n                    </div>\n\t\t\t\t\t<AppointmentsAffected val={this.state}/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nDaySchedule.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DaySchedule);","import React, { Component } from 'react';\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\nimport DaySchedule from '../Components/Scheduling/DaySchedule';\n\nclass Scheduling extends Component {\n  render() { \n    return (\n      <div>\n        <NavigationBar title={\"My Schedule\"} Tab={2}/>\n        <DaySchedule/>\n      </div>\n    );\n  }\n}\n\nexport default Scheduling;\n","import React from 'react';\nimport RegistrationForm from '../Components/Registration/RegistrationForm';\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\nimport './Home.css';\n\nclass DoctorRegistration extends React.Component{\n    render() {\n        return(\n            <div className='Home-image'>\n                <div className='Home-overlay'>\n                    <NavigationBar title={\"Register A New User\"} Tab={3}/>\n                    <RegistrationForm/>\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\nexport default DoctorRegistration;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport {FormControl, Paper, TextField, Typography, Button} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport './Locator.css'\n\n\nconst styles = theme => ({\n\n  paperForm: {\n      width: '75%',\n      padding: theme.spacing.unit*2,\n      backgroundColor: \"#e0e0e0\",\n      height: '75%',\n      flexDirection: 'column',\n      margin:\"auto\",\n      display: 'flex',\n      marginTop: '2%'\n    },\n\n});\n\nclass Locator extends React.Component {\n\n  constructor(props){\n      super(props)\n      this.state = {\n          openForm: false,\n          Facilities: [],\n          displayResults: false,\n          searchCity: \"\",\n      };\n    this.handleChange=this.handleChange.bind(this);\n  }\n\n  handleChange = e =>{\n      this.setState({\n          [e.target.name] : e.target.value\n      })\n      \n  }\n  redirect(){\n      if(window.localStorage.loggedIn !== \"true\"){\n        window.location.replace('/')\n      }\n      else{\n        window.location.replace('/Appointments')\n      }\n  }\n  getFacilities=()=> {\n      fetch(`http://162.243.165.50:4000/Facilities/${this.state.searchCity}`)\n      .then(result => result.json())\n      .then(res => this.setState({ Facilities:res.data}))\n      .catch(err => console.log(err))\n  };\n  displaySearchRes = _ => {\n    this.getFacilities();\n      this.setState({\n          displayResults: true\n      });\n  }\n  handleClickOpen = () => {\n  this.setState({ openForm: true });\n  };\n  handleClose = () => {\n    this.setState({ \n        Facilities: [],\n        searchCity: \"\",\n        displayList: false,\n        openForm: false,\n    });\n  };\n  render() { \n    const{classes}=this.props;\n    return (\n      <div className='Locator-image'>\n        <div className='Locator-overlay'>\n          <NavigationBar title={\"City Locator\"} Tab={window.localStorage.userType===\"3\" ? (4):(3)}/>\n          <Paper className={classes.paperForm}>\n            <Typography variant=\"h5\" align={\"center\"}>Locate Facility By City</Typography>\n            <br/>\n            <FormControl  margin=\"auto\" >\n                <TextField\n                  name=\"searchCity\"\n                  label=\"City Vicinity to Search\"\n                  variant=\"outlined\"\n                  value={this.state.searchCity}\n                  onChange={this.handleChange}\n                  gutter\n                />\n            </FormControl>\n            <br/>\n            <Button variant=\"primary\" marginTop={'10%'} size=\"medium\" onClick={this.displaySearchRes}>\n                <SearchIcon />\n            </Button>\n            {this.state.displayResults &&\n              <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell align=\"center\">Facility Name</TableCell>\n                        <TableCell align=\"center\">Address</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n              \n                {this.state.Facilities.map(Each => (\n                    <TableRow key={Each.FacilityID}>\n                        <TableCell align=\"center\">{Each.FacilityName}</TableCell>\n                        <TableCell align=\"center\">{Each.AddressStreet}, {Each.AddressCity},{Each.AddressState} {Each.AddressZip} </TableCell>\n                    </TableRow>\n                ))}\n                </TableBody>\n              </Table> \n            }\n          </Paper>\n        </div>\n      </div>\n    );\n  }\n}\n\nLocator.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Locator);","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles, Typography, Checkbox, FormControlLabel } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { TextField, MenuItem } from \"@material-ui/core\";\nimport FormControl from '@material-ui/core/FormControl';\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nconst styles = theme =>({\n    Button: {\n        marginTop: '2%',\n    },\n});\n\n\nclass FacilityReports extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            openForm: false,\n            checkAllDates: false,\n            ChosenFacility: \"\",\n            MinimumDate: null,\n            MaximumDate: null,\n            MinimumDateDB: \"null\",\n            MaximumDateDB: \"null\",\n            Facilities: [],\n            Report:[],\n\n        };\n    }\n    componentDidMount(){\n        this.uploadFacilities();\n    }\n    uploadDoctors(){\n\n    }\n    fetchFacilityReport(){\n        \n        fetch(`http://162.243.165.50:4000/FacilityAppointmentReport/${this.state.ChosenFacility}/${this.state.MinimumDateDB}/${this.state.MaximumDateDB}`)\n        .then(result => result.json())\n        .then(Response => this.setState({ Report:Response.data }))\n        .catch(err => console.log(err))\n    }\n    fetchDoctorReport(){\n        fetch(`http://162.243.165.50:4000/DoctorReport/${this.state.ChosenFacility}`)\n        .then(result => result.json())\n        .then(Response => this.setState({ DoctorsCount:Response.data[0].Count }))\n        .catch(err => console.log(err))\n    }\n    uploadFacilities(){\n        fetch(`http://162.243.165.50:4000/Facilities`)\n        .then(result => result.json())\n        .then(Response => this.setState({ Facilities:Response.data }))\n        .catch(err => console.log(err))\n    }\n    MinDateChange = (d) =>{\n        let ApptDate=new Date(d)\n        ApptDate = this.FormatDate(ApptDate);\n        this.setState({MinimumDateDB:ApptDate});\n        this.setState({\n            MinimumDate: d\n        })\n    }\n    MaxDateChange = (d) =>{\n        let ApptDate=new Date(d)\n        ApptDate = this.FormatDate(ApptDate);\n        this.setState({MaximumDateDB:ApptDate});\n        this.setState({\n            MaximumDate: d\n        })\n    }\n    FormatDate=(date)=>{\n        date = date.getFullYear() + '-' + (this.fixMonth(date)) + '-' + date.getDate();\n        return date;\n    }\n\n    fixMonth=(date)=>{\n        if(date.getMonth() + 1 < 10){\n            return \"0\" +(date.getMonth() +1);\n        }\n        else{\n            return date.getMonth()+1;\n        }\n    }\n    handleChange = e =>{\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n    handlechoseChange = name => event =>{\n        this.setState({ \n            [name]: event.target.checked,\n            MinimumDate: null,\n            MaximumDate: null,\n            MinimumDateDB: \"null\",\n            MaximumDateDB: \"null\"});\n      };\n    handleClickOpen = () => {\n        this.fetchFacilityReport();\n        this.setState({ openForm: true });\n    };\n\n    handleClose = () => {\n        this.setState({ \n            openForm: false,\n            checkAllDates: false,\n            ChosenFacility: \"\",\n            MinimumDate: null,\n            MaximumDate: null,\n            MinimumDateDB: \"null\",\n            MaximumDateDB: \"null\", \n            Report:[],\n        });\n    };\n    render(){\n        const {classes} = this.props;\n        return(\n            <div>\n            <Typography variant=\"h5\">Facility Report</Typography>\n                <FormControl margin=\"normal\" fullWidth>\n                    <TextField\n                        id=\"ChosenFacility\"\n                        select\n                        label=\"Please Choose A Facility\"\n                        name=\"ChosenFacility\"\n                        variant=\"standard\"\n                        onChange={this.handleChange}\n                        value={this.state.ChosenFacility}   \n                        required                   \n                    >\n                        <MenuItem key=\"-1\" value=\"-1\">\n                            All Facilities\n                        </MenuItem>\n                        {this.state.Facilities.map(option => (\n                            <MenuItem key={option.FacilityID} value={option.FacilityID}>\n                                {option.FacilityName}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                </FormControl>\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                        checked={this.state.checkAllDates}\n                        onChange={this.handlechoseChange('checkAllDates')}\n                        value=\"checkAllDates\"\n                        />\n                    }\n                    label=\"Generate Report for all Dates\"\n                />\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        label=\"From Date\"\n                        name=\"MinimumDate\"\n                        value={this.state.MinimumDate}\n                        onChange={this.MinDateChange}\n                        fullWidth\n                        disabled={this.state.checkAllDates}\n                    />\n                </MuiPickersUtilsProvider>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        label=\"To Date\"\n                        name=\"MaximumDate\"\n                        value={this.state.MaximumDate}\n                        onChange={this.MaxDateChange}\n                        fullWidth\n                        disabled={this.state.checkAllDates}\n                    />\n                </MuiPickersUtilsProvider>\n                <Button variant=\"contained\" color=\"inherit\" fullWidth className={classes.Button} onClick={this.handleClickOpen} disabled={((this.state.MinimumDate === null || this.state.MaximumDate === null) && !this.state.checkAllDates) || this.state.ChosenFacility === \"\"}>\n                    Show reports for the Chosen Facility\n                </Button>\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\n                    <DialogTitle id=\"form-dialog-title\">Here is the Facility Report</DialogTitle>\n                    <DialogContent>\n                        <Table className={classes.table}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>FacilityID</TableCell>\n                                    <TableCell align=\"center\">Number of Doctors</TableCell>\n                                    <TableCell align=\"center\">Upcoming Appointments</TableCell>\n                                    <TableCell align=\"center\">Cancelled Appointments</TableCell>\n                                    <TableCell align=\"center\">Completed Appointments</TableCell>\n                                    <TableCell align=\"center\">Total Appointments</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {this.state.Report.map(Each => (\n                                    <TableRow key={Each.FacilityID}>\n                                        <TableCell align=\"center\">{Each.FacilityID}</TableCell>\n                                        <TableCell align=\"center\">{Each.DoctorsWorking}</TableCell>\n                                        <TableCell align=\"center\">{Each.UpcomingApps}</TableCell>\n                                        <TableCell align=\"center\">{Each.CancelledApps}</TableCell>\n                                        <TableCell align=\"center\">{Each.CompletedApps}</TableCell>\n                                        <TableCell align=\"center\">{Each.totalApps}</TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>                        \n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n    \n}\n\nFacilityReports.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  \nexport default withStyles(styles)(FacilityReports);\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles, Typography, Checkbox, FormControlLabel } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { TextField, MenuItem } from \"@material-ui/core\";\nimport FormControl from '@material-ui/core/FormControl';\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nconst styles = theme =>({\n    Button: {\n        marginTop: '2%',\n    },\n});\n\n\nclass DoctorsReport extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            openForm: false,\n            checkAllDates: false,\n            ChosenDoctor: \"\",\n            MinimumDate: null,\n            MaximumDate: null,\n            MinimumDateDB: \"null\",\n            MaximumDateDB: \"null\",\n            Doctors: [],\n            Report:[],\n\n        };\n    }\n    componentDidMount(){\n        this.uploadDoctors();\n    }\n    fetchDoctorReport(){\n        fetch(`http://162.243.165.50:4000/DoctorReport/${this.state.ChosenDoctor}/${this.state.MinimumDateDB}/${this.state.MaximumDateDB}`)\n        .then(result => result.json())\n        .then(Response => this.setState({ Report:Response.data }))\n        .catch(err => console.log(err))\n    }\n    uploadDoctors(){\n        fetch(`http://162.243.165.50:4000/AllDoctors`)\n        .then(result => result.json())\n        .then(Response => this.setState({ Doctors:Response.data }))\n        .catch(err => console.log(err))\n    }\n    MinDateChange = (d) =>{\n        let ApptDate=new Date(d)\n        ApptDate = this.FormatDate(ApptDate);\n        this.setState({MinimumDateDB:ApptDate});\n        this.setState({\n            MinimumDate: d\n        })\n    }\n    MaxDateChange = (d) =>{\n        let ApptDate=new Date(d)\n        ApptDate = this.FormatDate(ApptDate);\n        this.setState({MaximumDateDB:ApptDate});\n        this.setState({\n            MaximumDate: d\n        })\n    }\n    FormatDate=(date)=>{\n        date = date.getFullYear() + '-' + (this.fixMonth(date)) + '-' + date.getDate();\n        return date;\n    }\n\n    fixMonth=(date)=>{\n        if(date.getMonth() + 1 < 10){\n            return \"0\" +(date.getMonth() +1);\n        }\n        else{\n            return date.getMonth()+1;\n        }\n    }\n    handleChange = e =>{\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n    handlechoseChange = name => event =>{\n        this.setState({ \n            [name]: event.target.checked,\n            MinimumDate: null,\n            MaximumDate: null,\n            MinimumDateDB: \"null\",\n            MaximumDateDB: \"null\"});\n      };\n    handleClickOpen = () => {\n        this.fetchDoctorReport();\n        this.setState({ openForm: true });\n    };\n\n    handleClose = () => {\n        this.setState({ \n            openForm: false,\n            checkAllDates: false,\n            ChosenDoctor: \"\",\n            MinimumDate: null,\n            MaximumDate: null,\n            MinimumDateDB: \"null\",\n            MaximumDateDB: \"null\", \n            Report:[],\n        });\n    };\n    render(){\n        const {classes} = this.props;\n        return(\n            <div>\n            <Typography variant=\"h5\">Doctor Report</Typography>\n                <FormControl margin=\"normal\" fullWidth>\n                    <TextField\n                        id=\"ChosenDoctor\"\n                        select\n                        label=\"Please Choose A Facility\"\n                        name=\"ChosenDoctor\"\n                        variant=\"standard\"\n                        onChange={this.handleChange}\n                        value={this.state.ChosenDoctor}   \n                        required                   \n                    >\n                        <MenuItem key=\"-1\" value=\"-1\">\n                            All Doctors\n                        </MenuItem>\n                        {this.state.Doctors.map(option => (\n                            <MenuItem key={option.EmployeeID} value={option.EmployeeID}>\n                                Dr. {option.FirstName} {option.LastName}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                </FormControl>\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                        checked={this.state.checkAllDates}\n                        onChange={this.handlechoseChange('checkAllDates')}\n                        value=\"checkAllDates\"\n                        />\n                    }\n                    label=\"Generate Report for all Dates\"\n                />\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        label=\"From Date\"\n                        name=\"MinimumDate\"\n                        value={this.state.MinimumDate}\n                        onChange={this.MinDateChange}\n                        fullWidth\n                        disabled={this.state.checkAllDates}\n                    />\n                </MuiPickersUtilsProvider>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        label=\"To Date\"\n                        name=\"MaximumDate\"\n                        value={this.state.MaximumDate}\n                        onChange={this.MaxDateChange}\n                        fullWidth\n                        disabled={this.state.checkAllDates}\n                    />\n                </MuiPickersUtilsProvider>\n                <Button variant=\"contained\" color=\"inherit\" fullWidth className={classes.Button} onClick={this.handleClickOpen} disabled={((this.state.MinimumDate === null || this.state.MaximumDate === null) && !this.state.checkAllDates) || this.state.ChosenDoctor === \"\"}>\n                    Show reports for the Chosen Doctor\n                </Button>\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\n                    <DialogTitle id=\"form-dialog-title\">Here is the Doctor Report</DialogTitle>\n                    <DialogContent>\n                        <Table className={classes.table}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align=\"center\">EmployeeID</TableCell>\n                                    <TableCell align=\"center\">Number of Appointments</TableCell>\n                                    <TableCell align=\"center\">Number of Diagnoses</TableCell>\n                                    <TableCell align=\"center\">Number of Cancelled Appointments</TableCell>\n                                    <TableCell align=\"center\">Number of Days Working in a week</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {this.state.Report.map(Each => (\n                                    <TableRow key={Each.EmployeeID}>\n                                        <TableCell align=\"center\">{Each.EmployeeID}</TableCell>\n                                        <TableCell align=\"center\">{Each.Apps}</TableCell>\n                                        <TableCell align=\"center\">{Each.Diagnoses}</TableCell>\n                                        <TableCell align=\"center\">{Each.CancelledApps}</TableCell>\n                                        <TableCell align=\"center\">{Each.DaysWorking}</TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>                        \n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n    \n}\n\nDoctorsReport.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  \nexport default withStyles(styles)(DoctorsReport);\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles, Typography,} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst styles = theme =>({\n    Button: {\n        marginTop: '2%',\n    },\n});\n\n\nclass CheckUpReport extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            Report: [],\n        };\n    }\n    fetchCheckUps(){\n        fetch(`http://162.243.165.50:4000/CheckUp`)\n        .then(result => result.json())\n        .then(Response => this.setState({ Report:Response.data }))\n        .catch(err => console.log(err))\n    };\n \n    handleClickOpen = () => {\n        this.fetchCheckUps();\n        this.setState({ openForm: true });\n    };\n\n    handleClose = () => {\n        this.setState({ \n            Report: [],\n            openForm:false,\n        });\n    };\n    render(){\n        const {classes} = this.props;\n        return(\n            <div>\n            <Typography variant=\"h5\">Six Month Check Up Report</Typography>\n               \n                <Button variant=\"contained\" color=\"inherit\" fullWidth className={classes.Button} onClick={this.handleClickOpen}>\n                    Show Patients Who need a 6-Month CheckUp\n                </Button>\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\n                    <DialogTitle id=\"form-dialog-title\">Patients that need to be contacted</DialogTitle>\n                    <DialogContent>\n                        <Table className={classes.table}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align=\"center\">Name </TableCell>\n                                    <TableCell align=\"center\">Contact Number</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                        {this.state.Report.map(Each => (\n                                            <TableRow key={Each.FirstName}>\n                                                <TableCell align=\"center\">{Each.FirstName} {Each.LastName}</TableCell>\n                                                <TableCell align=\"center\">{Each.CellNumber}</TableCell>\n                                            </TableRow>\n                                        ))}\n                                \n                            </TableBody>\n                        </Table>                        \n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n    \n}\n\nCheckUpReport.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  \nexport default withStyles(styles)(CheckUpReport);\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles, FormControl, InputLabel, Input, Grid, TextField, MenuItem,} from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\n\nconst styles = theme =>({\n    Button: {\n        marginTop: '2%',\n    },\n});\n\n\nclass AddAFacility extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            States: [],\n            openForm: false,\n            Administrators:[],\n            AdminID:\"\",\n            FacilityName:\"\",\n            Street:\"\",\n            City:\"\",\n            StateID:\"\",\n            ZipCode:\"\",\n\n        };\n        this.handleChange=this.handleChange.bind(this);\n        this.AddFacility=this.AddFacility.bind(this);\n    }\n    componentDidMount(){\n        this.fetchStates();\n        this.fetchAdministrators();\n    }\n    fetchStates(){\n        fetch(`http://162.243.165.50:4000/states`)\n        .then(result => result.json())\n        .then(Response => this.setState({ States:Response.data }))\n        .catch(err => console.log(err))\n    }\n    fetchAdministrators(){\n        fetch(`http://162.243.165.50:4000/Administrators`)\n        .then(result => result.json())\n        .then(Response => this.setState({ Administrators:Response.data }))\n        .catch(err => console.log(err))\n    }\n    AddFacility(){\n        fetch(`http://162.243.165.50:4000/AddFacility`, {\n            method:\"POST\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n            },\n            body: JSON.stringify({\n                Admin:      this.state.AdminID,\n                Fname:      this.state.FacilityName,\n                Street:     this.state.Street,\n                City:       this.state.City,\n                StateID:    this.state.StateID,\n                ZipCode:    this.state.ZipCode\n            })\n        })\n        .then(this.handleClose())\n        .catch(err => console.log(err))\n    };\n    handleChange = e =>{\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n    handleClickOpen = () => {\n        this.componentDidMount();\n        this.setState({ openForm: true });\n    };\n\n    handleClose = () => {\n        this.setState({ \n            States: [],\n            openForm: false,\n            Administrators:[],\n            AdminID:\"\",\n            FacilityName:\"\",\n            Street:\"\",\n            City:\"\",\n            StateID:\"\",\n            ZipCode:\"\",\n        });\n    };\n    invalidEntries(){\n        return  this.state.AdminID === \"\" ||\n                this.state.FacilityName === \"\"||\n                this.state.Street === \"\" ||\n                this.state.City === \"\"||\n                this.state.StateID === \"\" ||\n                this.state.ZipCode.length !== 5\n    }\n    render(){\n        const {classes} = this.props;\n        return(\n            <div>\n                <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.Button} onClick={this.handleClickOpen}>\n                    Add A New Facility\n                </Button>\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\n                    <DialogTitle id=\"form-dialog-title\">Add A New Facility</DialogTitle>\n                    <DialogContent>\n                        <FormControl margin=\"auto\" fullWidth required>\n                            <InputLabel htmlFor=\"FacilityName\">Facility Name</InputLabel>\n                            <Input name=\"FacilityName\" autoFocus value={this.state.FacilityName} onChange={this.handleChange}></Input>\n                        </FormControl>\n                        <FormControl margin=\"normal\" fullWidth>\n                                    <TextField\n                                        id=\"AdminID\"\n                                        select\n                                        label=\"Administrator\"\n                                        name=\"AdminID\"\n                                        variant=\"standard\"\n                                        value={this.state.AdminID} \n                                        onChange={this.handleChange}  \n                                        required                   \n                                    >\n                                        {this.state.Administrators.map(option => (\n                                            <MenuItem key={option.EmployeeID} value={option.EmployeeID}>\n                                                {option.EmployeeID}:{option.FirstName} {option.LastName}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </FormControl>\n                        <FormControl margin=\"auto\" fullWidth required>\n                            <InputLabel htmlFor=\"Street\">Street Address</InputLabel>\n                            <Input name=\"Street\" value={this.state.Street} onChange={this.handleChange}></Input>\n                        </FormControl>\n                        <Grid container spacing={8}>\n                            <Grid item xs={12} sm={5}>\n                                <FormControl margin=\"normal\" fullWidth required>\n                                    <InputLabel htmlFor=\"City\">City</InputLabel>\n                                    <Input name=\"City\" value={this.state.City} onChange={this.handleChange}></Input>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12} sm={2}>\n                                <FormControl margin=\"normal\" fullWidth>\n                                    <TextField\n                                        id=\"State\"\n                                        select\n                                        label=\"State\"\n                                        name=\"StateID\"\n                                        variant=\"standard\"\n                                        value={this.state.StateID} \n                                        onChange={this.handleChange}  \n                                        required                   \n                                    >\n                                        {this.state.States.map(option => (\n                                            <MenuItem key={option.StateID} value={option.StateID}>\n                                                {option.StateString}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12} sm={5}>\n                                <FormControl margin=\"normal\" fullWidth required>\n                                    <InputLabel htmlFor=\"ZipCode\">Zip Code</InputLabel>\n                                    <Input name=\"ZipCode\" type=\"number\"  value={this.state.ZipCode} onChange={this.handleChange}></Input>\n                                </FormControl>\n                            </Grid>\n                        </Grid>           \n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.AddFacility} disabled={this.invalidEntries()} color=\"primary\">\n                            Add The Facility\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n    \n}\n\nAddAFacility.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  \nexport default withStyles(styles)(AddAFacility);\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles, FormControl, TextField, MenuItem,} from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\n\nconst styles = theme =>({\n    Button: {\n        marginTop: '2%',\n    },\n});\n\n\nclass ChangeAFacility extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            Facilities: [],\n            openForm: false,\n            Administrators:[],\n            AdminID:\"\",\n            ChosenFacility:\"\",\n\n        };\n        this.handleChange=this.handleChange.bind(this);\n        this.ChangeFacility=this.ChangeFacility.bind(this);\n        this.handleClose=this.handleClose.bind(this);\n\n    }\n    componentDidMount(){\n        this.fetchFacilities();\n        this.fetchAdministrators();\n    }\n    fetchFacilities(){\n        fetch(`http://162.243.165.50:4000/Facilities`)\n        .then(result => result.json())\n        .then(Response => this.setState({ Facilities:Response.data }))\n        .catch(err => console.log(err))\n    }\n    fetchAdministrators(){\n        fetch(`http://162.243.165.50:4000/Administrators`)\n        .then(result => result.json())\n        .then(Response => this.setState({ Administrators:Response.data }))\n        .catch(err => console.log(err))\n    }\n    ChangeFacility(){\n        fetch(`http://162.243.165.50:4000/ChangeAdmin`, {\n            method:\"POST\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n            },\n            body: JSON.stringify({\n                AdministratorID: this.state.AdminID,\n                FacilityID:   this.state.ChosenFacility,\n            })\n        })\n        .then(this.handleClose())\n        .catch(err => console.log(err))\n    };\n    handleChange = e =>{\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n    handleClickOpen = () => {\n        this.componentDidMount();\n        this.setState({ openForm: true });\n    };\n\n    handleClose = () => {\n        this.setState({ \n            Facilities: [],\n            openForm: false,\n            Administrators:[],\n            AdminID:\"\",\n            ChosenFacility:\"\",\n        });\n    };\n    render(){\n        const {classes} = this.props;\n        return(\n            <div>\n                <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.Button} onClick={this.handleClickOpen}>\n                    Change A Facility Administrator\n                </Button>\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\n                    <DialogTitle id=\"form-dialog-title\">Change Facility Administrator</DialogTitle>\n                    <DialogContent>\n                        <FormControl margin=\"normal\" fullWidth>\n                            <TextField\n                                id=\"ChosenFacility\"\n                                select\n                                label=\"Select Facility\"\n                                name=\"ChosenFacility\"\n                                variant=\"standard\"\n                                value={this.state.ChosenFacility} \n                                onChange={this.handleChange}  \n                                required                   \n                            >\n                                {this.state.Facilities.map(option => (\n                                    <MenuItem key={option.FacilityID} value={option.FacilityID}>\n                                        {option.FacilityID}: {option.FacilityName}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </FormControl>\n                        <FormControl margin=\"normal\" fullWidth>\n                            <TextField\n                                id=\"AdminID\"\n                                select\n                                label=\"Select New Admin\"\n                                name=\"AdminID\"\n                                variant=\"standard\"\n                                value={this.state.AdminID} \n                                onChange={this.handleChange}  \n                                required                   \n                            >\n                                {this.state.Administrators.map(option => (\n                                    <MenuItem key={option.EmployeeID} value={option.EmployeeID}>\n                                        {option.EmployeeID}:{option.FirstName} {option.LastName}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </FormControl>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.ChangeFacility} disabled={this.state.AdminID === \"\" || this.state.ChosenFacility === \"\"} color=\"primary\">\n                            Change Facility Admin \n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n    \n}\n\nChangeAFacility.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  \nexport default withStyles(styles)(ChangeAFacility);\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles, Typography,} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport AddAFacility from './AddAFacility';\nimport ChangeAFacility from './ChangeAFacility';\n\nconst styles = theme =>({\n    Button: {\n        marginTop: '2%',\n    },\n});\n\n\nclass Administration extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            Report: [],\n            openForm:false\n        };\n    }\n    fetchFacilities(){\n        fetch(`http://162.243.165.50:4000/FacilitiesAdmin`)\n        .then(result => result.json())\n        .then(Response => this.setState({ Report:Response.data }))\n        .catch(err => console.log(err))\n    };\n \n    handleClickOpen = () => {\n        this.fetchFacilities();\n        this.setState({ openForm: true });\n    };\n\n    handleClose = () => {\n        this.setState({ \n            Report: [],\n            openForm:false,\n        });\n    };\n    render(){\n        const {classes} = this.props;\n        return(\n            <div>\n            <Typography variant=\"h5\">Facilities</Typography>\n            {window.localStorage.userID === \"222\" &&\n                <AddAFacility/>\n            }\n            {window.localStorage.userID === \"222\" &&\n                <ChangeAFacility/>\n            }\n                \n                <Button variant=\"contained\" color=\"inherit\" fullWidth className={classes.Button} onClick={this.handleClickOpen}>\n                    See All Facilty Information\n                </Button>\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\n                    <DialogTitle id=\"form-dialog-title\">Facility Information</DialogTitle>\n                    <DialogContent>\n                        <Table className={classes.table}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align=\"center\">FacilityID </TableCell>\n                                    <TableCell align=\"center\">Facility Name</TableCell>\n                                    <TableCell align=\"center\">Facility Address</TableCell>\n                                    <TableCell align=\"center\">Facility Administrator</TableCell>\n                                    <TableCell align=\"center\">Administrator Contact</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                        {this.state.Report.map(Each => (\n                                            <TableRow key={Each.FacilityID}>\n                                                <TableCell align=\"center\">{Each.FacilityID}</TableCell>\n                                                <TableCell align=\"center\">{Each.FacilityName}</TableCell>\n                                                <TableCell align=\"center\">{Each.Street}, {Each.City}, {Each.State} {Each.Zip}</TableCell>\n                                                <TableCell align=\"center\">{Each.FirstName} {Each.LastName}</TableCell>\n                                                <TableCell align=\"center\">{Each.Contact}</TableCell>\n                                            </TableRow>\n                                        ))}\n                                \n                            </TableBody>\n                        </Table>                        \n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n    \n}\n\nAdministration.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  \nexport default withStyles(styles)(Administration);\n","import React, { Component } from 'react';\nimport FacilityReports from './FacilityReports';\nimport { Paper, withStyles } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport DoctorsReport from './DoctorsReport';\nimport CheckUpReport from './CheckUpReport';\nimport Facilities from './Facilities';\n\nconst styles = theme =>({\n    root: {\n        width: '55%',\n        display: \"flex\",\n        flexDirection: 'column',\n        padding: theme.spacing.unit*3,\n        marginTop:\"5%\",\n        marginBottom:\"5%\",\n        margin:\"auto\"\n  \n    },\n    checkUp: {\n      width: '55%',\n      display: \"flex\",\n      flexDirection: 'column',\n      padding: theme.spacing.unit*3,\n      marginTop:\"5%\",\n      marginBottom:\"5%\",\n      margin:\"auto\"\n\n  },\n});\n\nclass ReportsGenerator extends Component {\n  render() { \n    const{classes}=this.props;\n    return (\n      <div>\n          <Paper className={classes.root}>\n            <FacilityReports/>\n          </Paper>\n          <Paper className={classes.root}>\n            <DoctorsReport/>\n          </Paper>\n          <Paper className={classes.checkUp}>\n            <CheckUpReport/>\n          </Paper>\n          <Paper className={classes.checkUp}>\n            <Facilities/>\n          </Paper>\n      </div>\n    );\n  }\n}\n\nReportsGenerator.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  \nexport default withStyles(styles)(ReportsGenerator);\n","import React, { Component } from 'react';\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\nimport ReportsGenerator from '../Components/Administration/ReportsGenerator';\nimport '../Components/Administration/Report.css';\n\nclass Report extends Component {\n  render() { \n    return (\n      <div className='ReportsPage-image'><div/>\n        <div className='ReportsPage-overlay'>\n          <NavigationBar title={\"Administration\"} Tab={2}/>\n          <ReportsGenerator/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Report;\n","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport {Route} from 'react-router-dom';\nimport Home from './Pages/Home';\nimport Appointments from './Pages/Appointments';\nimport Registration from './Pages/Registration';\nimport Profile from './Pages/Profile';\nimport Scheduling from './Pages/Scheduling';\nimport DoctorRegistration from './Pages/DoctorRegistration';\nimport Locator from './Pages/Locator';\nimport Administration from './Pages/Administration';\n\nclass Paths extends Component{\n    state = {\n        loggedIn: true,\n    }\n    render() {\n        return(\n            <BrowserRouter>\n                <div className=\"Routes\">\n                    <Route path=\"/\" exact component={Home}/>\n                    <Route path=\"/Appointments\" exact component={Appointments}/>\n                    <Route path=\"/Registration\" exact component={Registration}/>\n                    <Route path=\"/Profile\" exact component={Profile}/>\n                    <Route path=\"/Locator\" exact component={Locator}/>\n                    <Route path=\"/Scheduling\" exact component={Scheduling}/>\n                    <Route path=\"/Administration\" exact component={Administration}/>\n                    <Route path=\"/DoctorRegistration\" exact component={DoctorRegistration}/>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default Paths;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Paths from './Paths';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Paths />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}