{"version":3,"sources":["Components/GeneralComponents/NavigationBar.js","Components/Home/HomeLoginBox.js","Pages/Home.js","Components/Appointments/WhichFacility.js","Components/Appointments/WhichDoctor.js","Components/Appointments/CompleteNewAppointment.js","Components/Appointments/NewAppointmentForm.js","Components/Appointments/AddDiagnosis.js","Components/Appointments/ShowDiagnosis.js","Components/Appointments/ShowPrescriptions.js","Components/Appointments/AddPrescription.js","Components/Appointments/AddSpecilaistReccomendation.js","Components/Appointments/PatientMedicalHistory.js","Components/Appointments/AppointmentHistory.js","Pages/Appointments.js","Components/Registration/BasicInformation.js","Components/Registration/BasicInformationPtTwo.js","Components/Registration/RegistrationForm.js","Pages/Registration.js","Components/Profile/MedicalInformation.js","Components/Profile/ProfileInfoTest.js","Pages/Profile.js","Components/Scheduling/ModifyFacility.js","Components/Scheduling/WhichDay.js","Components/Scheduling/AddNewDay.js","Components/Scheduling/DaySchedule.js","Pages/Scheduling.js","Components/Report/FacilityReports.js","Components/Report/DoctorsReport.js","Components/Report/CheckUpReport.js","Components/Report/ReportsGenerator.js","Pages/Report.js","Pages/DoctorRegistration.js","Components/Locator/Mapper.js","Pages/Locator.js","Paths.js","serviceWorker.js","index.js"],"names":["NavigationBar","state","loggedIn","userid","userType","currentTab","_this","props","Tab","AppointmentPageRedirect","window","location","replace","ProfilePageRedirect","SchedulePageRedirect","ReportPageRedirect","DocRegistrationRedirect","LocatorPageRedirect","logout","setState","localStorage","setItem","storageLoggedIn","getItem","userID","this","_this$props","classes","title","react_default","a","createElement","className","root","AppBar_default","bar","position","Toolbar_default","Typography_default","variant","BarTitle","index_es","textColor","value","label","onClick","React","Component","withStyles","flexGrow","marginTop","backgroundColor","minHeight","height","MenuIcon","marginLeft","marginRight","HomeLoginBox","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","defineProperty","target","name","handleRegistration","handleLocator","login","fetch","concat","Username","then","result","json","res","data","length","Password","password","LoginTableID","setUserType","catch","err","console","log","firstName","bind","assertThisInitialized","_this2","RoleID","EmployeeID","updateAppTimes","PatientID","Paper_default","elevation","component","form","FormControl_default","margin","fullWidth","required","htmlFor","autoFocus","onChange","type","submitButton","color","size","theme","width","alignItems","display","flexDirection","padding","spacing","unit","Home","GeneralComponents_NavigationBar","Home_HomeLoginBox","WhichFacility","id","select","val","FacilityID","Facilities","map","option","key","FacilityName","WhichDoctor","DoctorID","Doctors","FirstName","Reason","inputProps","maxLength","material_ui_pickers_esm","utils","DateFnsUtils","minDate","Date","AppointmentDate","AppointmentDateChange","container","flexWrap","textField","AppointmentTimeID","AppointmentTimes","TimeSlotID","AppointmentTime","NewAppointmentForm","componentDidMount","uploadFacilities","handleClickOpen","openForm","handleClose","step","DBFormattedDate","d","ApptDate","FormatDate","date","getFullYear","fixMonth","getDate","getMonth","Response","uploadDoctors","Specialist","uploadTimes","method","headers","Content-Type","body","JSON","stringify","AppDate","handleNextStep","handleSubmit","TimeID","setTimeout","handleBackStep","Appointments_WhichFacility","Button_default","disabled","Appointments_WhichDoctor","Appointments_CompleteNewAppointment","Button","ControlPointOutlined_default","icon","Dialog_default","open","onClose","DialogTitle_default","DialogContent_default","DialogContentText_default","getStepInfo","DialogActions_default","fontSize","&:hover","AddDiagnosis","handleDiagnosisAdd","AppointmentID","Diagnosis","AppID","ShowDiagnosis","uploadDiagnosis","maxWidth","Table_default","table","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","Each","DiagnosisID","scope","overflowX","minWidth","ShowPrescriptions","uploadPrescriptions","Prescriptions","PrescriptionIssueID","RefillLeft","DueDate","substr","Medicine","AddPrescription","uploadMedicineTypes","PrescriptionID","DBDueDate","Refills","DueDateChange","MedicineTypes","_this3","AddSpecialistReccomendation","handleSpecialistAdd","Specialists","uploadSpecialists","LastName","PatientMedicalHistory","getMedicalRecord","allergies","Allergies","immunizationRecord","ImmunizationRecord","medicalCondition","MedicalCondition","procedureRecord","ProcedureRecord","error","getLog","MHLog","editing","editMode","deduct","insuranceID","insuranceContact","company","saveChange","getInsurance","Deductible","InsuranceClientID","ContactNumber","Name","patientID","lastUpdatedBy","updateMedicalRecord","ChromeReaderMode_default","fullScreen","dialog","item","sm","multiline","rows","UpdatedAt","UpdatedBy","xs","button","dense","menu","overflow","AppointmentHistory","grabAppointments","UserType","UserID","Appointments","panel","event","expanded","handleAppointmentCancel","handleClickOpenCancellation","apptID","selectedAppt","handleCloseCancellation","cancelApptShow","page","idAppointment","ExpansionPanel_default","square","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","heading","Patient","Doctor","currentStatus","ExpansionPanelDetails_default","secondaryHeading","Street","City","State","ZipCode","Appointments_AddDiagnosis","AddSpecilaistReccomendation","Appointments_AddPrescription","Appointments_ShowDiagnosis","Appointments_PatientMedicalHistory","Appointments_ShowPrescriptions","Appointments_NewAppointmentForm","AdditionButton","typography","pxToRem","flexBasis","flexShrink","iconHistory","palette","text","secondary","Appointments_AppointmentHistory","validatePassword","BasicInformation","username","helperText","roles","RoleTitle","Email","TextMaskCustom","other","esm_extends","reactTextMask_default","assign","guide","mask","placeholderChar","showMask","DateMaskCustom","SSNMaskCustom","BasicInformationPtTwo","AddressStreet","AddressCity","AddressState","states","StateID","StateString","AddressZip","placeholder","DateOfBirth","inputComponent","Sex","sexes","SexID","Gender","raceID","races","RaceID","Race","SSN","CellNumber","RegistrationForm","registerUser","completion","homeRedirect","stepNext","registrationStep","uploadStates","uploadSexes","uploadRoles","uploadRaces","IconButton_default","icons_Home_default","style","paperForm","Registration_BasicInformation","moveNextInvalid","Registration_BasicInformationPtTwo","RegisterInvalid","LoginDirect","TextField","middleInitial","Registration","Registration_RegistrationForm","MedicalInformation","editImmunizationRecord","editMedicalCondition","editAllergies","editProcedureRecord","margine","handleChangeImmunizationRecord","handleChangeMedicalCondition","handleChangeAllergies","handleChangeProcedureRecord","ProfileInfoTest","retrieveUserInfo","first","last","user","pass","email","dob","DOB","ssn","sex","cellnumber","streetaddr","cityaddr","stateaddr","AddressStateID","zipaddr","updateUserInfo","InsuranceID","_","saveChanges","revertChanges","noValidate","autoComplete","defaultValue","substring","PhoneMaskCustom","validateUsername","EmptyEntries","editerButtons","Save_default","Cancel_default","Edit_default","Profile","Profile_ProfileInfoTest","Profile_MedicalInformation","ModifyFacility","i","selectedFacility","handleDoneSelected","WorkSchedule","WeekDayID","Sub_DayID","getFacilityIDFromName","UpdateDayID","NewFacilityID","Sub_FacilityID","lookUpName","WhichDay","DayID","OpenDays","WeekDay","AddNewDay","getOpenDaysList","handleConfirmChange","newDayList","shouldAddNew","Weekdays","k","push","Scheduling_WhichDay","DaySchedule","grabWorkSchedule","getFacilities","getWeekday","dayID","selectedDayID","handleConfirmRemove","RemoveDayID","Scheduling_ModifyFacility","getDayName","Scheduling_AddNewDay","Scheduling","Scheduling_DaySchedule","FacilityReports","MinDateChange","MinimumDateDB","MinimumDate","MaxDateChange","MaximumDateDB","MaximumDate","handlechoseChange","_this$setState2","checked","fetchFacilityReport","checkAllDates","ChosenFacility","Report","DoctorsCount","Count","_this4","control","DoctorsWorking","UpcomingApps","CancelledApps","CompletedApps","totalApps","DoctorsReport","fetchDoctorReport","ChosenDoctor","Apps","Diagnoses","DaysWorking","CheckUpReport","fetchCheckUps","ReportsGenerator","Report_FacilityReports","Report_DoctorsReport","checkUp","Report_CheckUpReport","marginBottom","Report_ReportsGenerator","DoctorRegistration","Mapper","_React$Component","onMarkerClick","marker","selectedPlace","activeMarker","showingInfoWindow","_this$props$initialCe","initialCenter","lat","lng","currentLocation","isCurrMarkerShown","FacilitiesGeoCode","inherits","createClass","navigator","geolocation","getCurrentPosition","prevState","objectSpread","currentLatLng","coords","latitude","longitude","dist","google","zoom","center","defaultProps","centerAroundCurrentLocation","visible","GoogleApiWrapper","apiKey","Locator","apply","arguments","mapContainer","Mapper_Mapper","redirect","KeyboardArrowLeftRounded_default","background","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","Paths","react_router_dom","react_router","path","exact","Boolean","hostname","match","ReactDOM","render","src_Paths","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d9a8dd5a.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Tab, Tabs, CssBaseline } from '@material-ui/core';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  BarTitle: {\r\n    flexGrow: 1,\r\n    marginTop: \"1%\"\r\n  },\r\n  bar: {\r\n    backgroundColor: \"#e0e0e0\",\r\n    minHeight: 100,\r\n    height: '100%',\r\n\r\n  },\r\n  MenuIcon: {\r\n    marginLeft: -12,\r\n    marginRight: 20\r\n  },\r\n};\r\n\r\n  class NavigationBar extends React.Component {\r\n    state = {\r\n      loggedIn: null,\r\n      userid: null,\r\n      userType: null,\r\n      currentTab: this.props.Tab,\r\n    };\r\n\r\n    logInSet(storageLoggedIn) {\r\n      return localStorage.getItem(storageLoggedIn) === 'true' ? true : false;\r\n    }\r\n    AppointmentPageRedirect = () =>{\r\n      window.location.replace('/Appointments');\r\n    }\r\n    ProfilePageRedirect = () =>{\r\n      window.location.replace('/Profile');\r\n    }\r\n    SchedulePageRedirect = () =>{\r\n      window.location.replace('/Scheduling');\r\n    }\r\n    ReportPageRedirect = () =>{\r\n      window.location.replace('/Reports');\r\n    }\r\n    DocRegistrationRedirect = () =>{\r\n      window.location.replace('/DoctorRegistration');\r\n    }\r\n    LocatorPageRedirect = () =>{\r\n      window.location.replace('/Locator')\r\n    }\r\n    logout = () =>{\r\n      this.setState({loggedIn:false,userid:null,userType:null})\r\n      localStorage.setItem(\"userID\", null);\r\n      localStorage.setItem(\"userType\", null);\r\n      localStorage.setItem(\"LoginTableID\", null);\r\n      localStorage.setItem(\"loggedIn\", false);\r\n      window.location.replace('/')\r\n    }\r\n    componentDidMount() {\r\n      if(localStorage.userID !== null){\r\n        this.setState({loggedIn: true, userType: localStorage.userType});\r\n      }\r\n      else{\r\n        this.setState({loggedIn:false,userid:null,userType:null})\r\n      }\r\n      //HardCoding\r\n      //Query to see if the user is an employee or a Patient then\r\n      \r\n    }\r\n    render() {\r\n      const { classes, title } = this.props;\r\n      return (\r\n        <div className={classes.root}>\r\n          <AppBar className={classes.bar} position=\"static\">\r\n            <Toolbar>\r\n              {window.localStorage.loggedIn === \"true\" ? (\r\n                <div>\r\n                  <Toolbar >\r\n                    <Typography variant=\"h3\" className={classes.BarTitle}>\r\n                      {title}\r\n                    </Typography>\r\n                    <CssBaseline/>\r\n                  </Toolbar>\r\n                  <Tabs textColor=\"primary\" value={this.state.currentTab}>\r\n                      <Tab label=\"Appointments\" onClick={this.AppointmentPageRedirect}></Tab>\r\n                      <Tab label=\"My Profile\" onClick={this.ProfilePageRedirect}></Tab>\r\n                      {window.localStorage.userType !== \"2\" && window.localStorage.userType !== \"3\" ? (\r\n                        <Tab label=\"My Schedule\" onClick={this.SchedulePageRedirect}></Tab>\r\n                      ):(\r\n                        <div></div>\r\n                      )}\r\n                      {window.localStorage.userType === \"3\" ? (\r\n                          <Tab label=\"Reports\" onClick={this.ReportPageRedirect}></Tab>\r\n                          //<Tab label=\"Register A Doctor\" onClick={this.DocRegistrationRedirect}></Tab>\r\n\r\n                      ):(\r\n                        <div></div>\r\n                      )}\r\n                      {window.localStorage.userType === \"3\" ? (\r\n                          <Tab label=\"Register A New User\" onClick={this.DocRegistrationRedirect}></Tab>\r\n\r\n                      ):(\r\n                        <div></div>\r\n                      )}\r\n                      <Tab label=\"Facilities\" onClick={this.LocatorPageRedirect}></Tab>\r\n                      <Tab label=\"Logout\" onClick={this.logout}></Tab>\r\n                  </Tabs>\r\n                  \r\n                </div>\r\n              ):(\r\n                <Typography variant=\"h3\"className={classes.BarTitle}>\r\n                  {title}\r\n                </Typography>\r\n              )}\r\n            </Toolbar>\r\n          </AppBar>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nNavigationBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(NavigationBar);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport {Input, InputLabel, Button} from '@material-ui/core';\r\n\r\nconst styles = theme =>({\r\n  root: {\r\n    width: '25%',\r\n    marginLeft: '65%',\r\n    marginTop: '10%',\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: 'column',\r\n    backgroundColor: \"#e0e0e0\",\r\n    padding: theme.spacing.unit*3\r\n\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit\r\n  },\r\n  submitButton: {\r\n      marginTop: '20px'\r\n  }\r\n});\r\n\r\nclass HomeLoginBox extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            userType: null,\r\n            firstName:null,\r\n            Username: \"\",\r\n            password: \"\",\r\n            loggedIn: false,\r\n        };\r\n        this.handleChange=this.handleChange.bind(this);\r\n    }\r\n    \r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n        \r\n    }\r\n    handleRegistration = () => {\r\n        window.location.replace('/Registration');\r\n    }\r\n    handleLocator = () => {\r\n        window.location.replace('/Locator');\r\n    }\r\n    login = () => {\r\n        fetch(`http://162.243.165.50:4000/login/${this.state.Username}`)\r\n        .then(result => result.json())\r\n        .then(res => {\r\n            if(res.data.length === 1){\r\n                if(res.data[0].Password === this.state.password){\r\n                    window.localStorage.setItem(\"loggedIn\", 'true');\r\n                    window.localStorage.setItem(\"LoginTableID\", res.data[0].LoginTableID);\r\n                    this.setUserType();                }\r\n                else{\r\n                    window.localStorage.setItem(\"loggedIn\", 'false');\r\n                }\r\n            }\r\n            else{\r\n                window.localStorage.setItem(\"loggedIn\", 'false');\r\n            }\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    \r\n    setUserType(){\r\n        fetch(`http://162.243.165.50:4000/Employee/${window.localStorage.LoginTableID}`)\r\n        .then(result => result.json())\r\n        .then(res => {\r\n            if(res.data.length === 1){\r\n                window.localStorage.setItem(\"userType\", res.data[0].RoleID); \r\n                window.localStorage.setItem(\"userID\", res.data[0].EmployeeID);  \r\n                this.setState({loggedIn:true});      \r\n                this.updateAppTimes();\r\n            }\r\n            else{  \r\n                fetch(`http://162.243.165.50:4000/Patient/${window.localStorage.LoginTableID}`)\r\n                .then(result => result.json())\r\n                .then(res => {\r\n                    if(res.data.length === 1){\r\n                        window.localStorage.setItem(\"userType\", 2); \r\n                        window.localStorage.setItem(\"userID\", res.data[0].PatientID);   \r\n                        this.setState({loggedIn:true});   \r\n                        this.updateAppTimes();          \r\n                    }\r\n                })\r\n                .catch(err => console.log(err))\r\n            }\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    updateAppTimes(){\r\n        fetch(`http://162.243.165.50:4000/AppUpdate/`)\r\n        .then(result => result.json())\r\n\r\n    }\r\n    componentDidMount() {\r\n        window.localStorage.setItem(\"userID\", null);\r\n        window.localStorage.setItem(\"userType\", null);\r\n        window.localStorage.setItem(\"LoginTableID\", null);\r\n        window.localStorage.setItem(\"loggedIn\", false);\r\n    }\r\n  render(){\r\n    const {classes}=this.props;\r\n    if(this.state.loggedIn === false){\r\n        return(\r\n            <Paper elevation={15} className={classes.root}>\r\n              <Typography component=\"h1\" variant=\"h4\">\r\n                  Log In\r\n              </Typography>\r\n              <form className={classes.form}>\r\n                  <FormControl margin=\"normal\" fullWidth required>\r\n                      <InputLabel htmlFor=\"Username\">Username</InputLabel>\r\n                      <Input name=\"Username\" autoFocus value={this.state.Username} onChange={this.handleChange}></Input>\r\n                  </FormControl>\r\n                  <FormControl margin=\"normal\" fullWidth required>\r\n                      <InputLabel htmlFor=\"Password\">Password</InputLabel>\r\n                      <Input type =\"password\" value={this.state.password} name=\"password\" onChange={this.handleChange}></Input>\r\n                  </FormControl>\r\n                  <FormControl fullWidth className={classes.submitButton}>\r\n                      <Button\r\n                      variant=\"contained\"\r\n                      onClick={this.login}\r\n                      color=\"primary\">\r\n                          Log In\r\n                      </Button>\r\n                  </FormControl>\r\n                  <FormControl  className={classes.submitButton}>\r\n                      <Button\r\n                      size=\"small\"\r\n                      onClick={this.handleRegistration}\r\n                      color=\"primary\">\r\n                          Dont have an Account? Click here to Register\r\n                      </Button>\r\n                  </FormControl>\r\n                  <FormControl  className={classes.submitButton}>\r\n                      <Button\r\n                      size=\"small\"\r\n                      onClick={this.handleLocator}\r\n                      color=\"primary\">\r\n                          Need to find one of our Clinics?\r\n                      </Button>\r\n                  </FormControl>\r\n              </form>\r\n            </Paper>\r\n        );\r\n    }\r\n    else return(\r\n        <div>{window.location.replace('/Appointments')}</div>\r\n    );\r\n    \r\n  }\r\n}\r\n\r\nHomeLoginBox.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n  \r\n  export default withStyles(styles)(HomeLoginBox);","import React, { Component } from 'react';\r\nimport './Home.css';\r\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\r\nimport HomeLoginBox from '../Components/Home/HomeLoginBox';\r\n\r\n//</div>\r\nclass Home extends Component {\r\n  render() { \r\n    return (\r\n      <div className='Home-image'>\r\n        <div className='Home-overlay'>\r\n          <NavigationBar title={\"Team 7 Medical Database Project\"}/>\r\n            <HomeLoginBox/>\r\n        </div>\r\n      </div>\r\n    );\r\n  } \r\n}\r\n\r\nexport default Home;\r\n","import { TextField, MenuItem } from \"@material-ui/core\";\r\nimport React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\n\r\nfunction WhichFacility(props){\r\n    \r\n    return(\r\n        <div>\r\n            <FormControl margin=\"normal\" fullWidth>\r\n                    <TextField\r\n                        id=\"FacilityID\"\r\n                        select\r\n                        label=\"Please Choose A Facility\"\r\n                        name=\"FacilityID\"\r\n                        variant=\"standard\"\r\n                        onChange={props.handleChange}\r\n                        value={props.val.FacilityID}   \r\n                        required                   \r\n                    >\r\n                        {props.val.Facilities.map(option => (\r\n                            <MenuItem key={option.FacilityID} value={option.FacilityID}>\r\n                                {option.FacilityName}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WhichFacility;","import { TextField, MenuItem } from \"@material-ui/core\";\r\nimport React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\n\r\nfunction WhichDoctor(props){\r\n    return(\r\n        <div>\r\n            <FormControl margin=\"normal\" fullWidth>\r\n                    <TextField\r\n                        id=\"DoctorID\"\r\n                        select\r\n                        label=\"Please Choose A Doctor\"\r\n                        name=\"DoctorID\"\r\n                        variant=\"standard\"\r\n                        onChange={props.handleChange}\r\n                        value={props.val.DoctorID}   \r\n                        required                   \r\n                    >\r\n                    {props.val.Doctors.map(option => (\r\n                        <MenuItem key={option.EmployeeID} value={option.EmployeeID}>\r\n                            Dr. {option.FirstName}\r\n                        </MenuItem>\r\n                    ))}\r\n                    </TextField>\r\n                    <TextField \r\n                        name=\"Reason\"\r\n                        label=\"Reason for Appointment\" \r\n                        variant=\"standard\"\r\n                        onChange={props.handleChange}\r\n                        value={props.val.Reason}\r\n                        inputProps={{ maxLength: 100 }}\r\n                    />\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <DatePicker\r\n                            minDate={new Date()}\r\n                            label=\"Appointment Date\"\r\n                            name=\"AppointmentDate\"\r\n                            value={props.val.AppointmentDate}\r\n                            onChange={props.AppointmentDateChange}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WhichDoctor;\r\n","import React from 'react';\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing.unit,\r\n      marginRight: theme.spacing.unit,\r\n      width: 200,\r\n    },\r\n  });\r\n\r\n\r\n  //This function should allow the user to select a time for the appointment \r\nfunction CompleteNewAppointment(props){\r\n    return(\r\n        <div>\r\n            <FormControl fullWidth>\r\n                    <TextField\r\n                        id=\"AppointmentTimeID\"\r\n                        select\r\n                        label=\"Please Choose A Time\"\r\n                        name=\"AppointmentTimeID\"\r\n                        variant=\"standard\"\r\n                        onChange={e=>props.handleChange(e)}\r\n                        value={props.val.AppointmentTimeID}   \r\n                        required                   \r\n                    >\r\n                    {props.val.AppointmentTimes.map(option => (\r\n                        <MenuItem key={option.TimeSlotID} value={option.TimeSlotID}>\r\n                            {option.AppointmentTime}\r\n                        </MenuItem>\r\n                    ))}\r\n                    </TextField>\r\n                </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nCompleteNewAppointment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n  \r\n  export default withStyles(styles)(CompleteNewAppointment);","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport WhichFacility from './WhichFacility';\r\nimport WhichDoctor from './WhichDoctor';\r\nimport CompleteNewAppointment from './CompleteNewAppointment';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport AddButton from '@material-ui/icons/ControlPointOutlined';\r\nimport { withStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n      fontSize: 25,\r\n      color: \"#f5f5f5\",\r\n      '&:hover': {\r\n        color: '#e0e0e0',\r\n      },\r\n    },\r\n    Button: {\r\n        marginTop: \".5%\"\r\n    }\r\n});\r\n\r\nclass NewAppointmentForm extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            openForm: false,\r\n            step: 0,\r\n            FacilityID: \"\",\r\n            DoctorID: \"\",\r\n            AppointmentTimeID:\"\",\r\n            Facilities: [],\r\n            Doctors: [],\r\n            AppointmentTimes: [],\r\n            Reason: null,\r\n            AppointmentDate: null,\r\n            DBFormattedDate: null,\r\n        };\r\n        this.uploadDoctors=this.uploadDoctors.bind(this);\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({\r\n            AppointmentTimes: [{\r\n                TimeSlotID: -1,\r\n                AppointmentTime: \"No Appointment Times for the chosen Date\"\r\n            }]\r\n        })\r\n        this.uploadFacilities();\r\n    };\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ openForm: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.uploadFacilities();\r\n        this.setState({ \r\n            openForm: false,\r\n            step: 0,\r\n            FacilityID: \"\",\r\n            DoctorID: \"\",\r\n            AppointmentTimeID:\"\",\r\n            Facilities: [],\r\n            Doctors: [],\r\n            AppointmentTimes: [],\r\n            Reason: null,\r\n            AppointmentDate: null,\r\n            DBFormattedDate: null,\r\n        });\r\n    };\r\n\r\n    AppointmentDateChange = (d) =>{\r\n        let ApptDate=new Date(d)\r\n        ApptDate = this.FormatDate(ApptDate);\r\n        this.setState({DBFormattedDate:ApptDate});\r\n        this.setState({\r\n            AppointmentDate: d\r\n        })\r\n    }\r\n\r\n    FormatDate=(date)=>{\r\n        date = date.getFullYear() + '-' + (this.fixMonth(date)) + '-' + date.getDate();\r\n        return date;\r\n    }\r\n\r\n    fixMonth=(date)=>{\r\n        if(date.getMonth() + 1 < 10){\r\n            return \"0\" +(date.getMonth() +1);\r\n        }\r\n        else{\r\n            return date.getMonth()+1;\r\n        }\r\n    }\r\n\r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    getStepInfo(step){\r\n        switch(step){\r\n            case 0:\r\n                return (<div>\r\n                            <WhichFacility val={this.state} handleChange={this.handleChange}/>\r\n                            <Button onClick={this.handleNextStep} disabled={this.state.FacilityID===\"\"} color=\"primary\">\r\n                                Next\r\n                            </Button>\r\n                        </div>)\r\n            case 1:\r\n            \r\n                return (<div>\r\n                            <WhichDoctor val={this.state} handleChange={this.handleChange}  AppointmentDateChange={this.AppointmentDateChange}/>\r\n                            <Button onClick={this.handleBackStep} color=\"primary\">\r\n                                Back\r\n                            </Button>\r\n                            <Button onClick={this.handleNextStep} disabled={this.state.DoctorID===\"\" || this.state.AppointmentDate===\"\"} color=\"primary\">\r\n                                Next\r\n                            </Button>\r\n                        </div>)\r\n            case 2:\r\n                \r\n                return (<div>\r\n                            <CompleteNewAppointment  val={this.state} AppointmentDateChange={this.AppointmentDateChange} handleChange={this.handleChange}/>\r\n                            <Button onClick={this.handleBackStep} color=\"primary\">\r\n                                Back\r\n                            </Button>\r\n                            <Button onClick={this.handleSubmit} disabled={this.state.AppointmentTimeID=== \"\" || this.state.AppointmentTimeID=== -1} color=\"primary\">\r\n                                Submit\r\n                            </Button>\r\n\r\n                        </div>) \r\n            default:\r\n                return \"Cannot Find Appointment Step\"\r\n        }\r\n    };\r\n    uploadFacilities=()=> {\r\n        fetch(`http://162.243.165.50:4000/Facilities`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Facilities:Response.data }))\r\n        .catch(err => console.log(err))\r\n    };\r\n    uploadDoctors=()=> {\r\n        var Specialist=\"1\";//0 is false and 1 is true\r\n        if(window.localStorage.userType !== \"3\"){\r\n            Specialist=\"0\";\r\n        }\r\n        fetch(`http://162.243.165.50:4000/Doctors/${this.state.FacilityID}/${Specialist}`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Doctors:Response.data }))\r\n        .catch(err => console.log(err))\r\n    };\r\n    uploadTimes=()=> {\r\n        fetch(`http://162.243.165.50:4000/AppointmentTimes/`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                DoctorID: this.state.DoctorID,\r\n                FacilityID: this.state.FacilityID,\r\n                AppDate: this.state.DBFormattedDate,\r\n            })\r\n        })\r\n        .then(result => result.json())\r\n        .then(Response => \r\n            {if(Response.data.length !== 0) {\r\n                this.setState({ AppointmentTimes:Response.data})\r\n            }})\r\n        .catch(err => console.log(err));\r\n    };\r\n    handleNextStep= () =>{\r\n        this.uploadDoctors();\r\n        this.uploadTimes();\r\n        this.setState({step: this.state.step+1})\r\n    };\r\n    handleSubmit= () =>{\r\n        this.setState({openForm:false})\r\n        fetch(`http://162.243.165.50:4000/AddAppointment`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                FacilityID: this.state.FacilityID,\r\n                DoctorID:   this.state.DoctorID,\r\n                PatientID:  this.props.PatientID,\r\n                Reason:     this.state.Reason,\r\n                TimeID:     this.state.AppointmentTimeID,\r\n                AppDate:    this.state.DBFormattedDate\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n        //.then(window.location.replace('/Appointments'));\r\n        setTimeout(function(){\r\n            window.location.replace('/Appointments')\r\n        }, 200);\r\n    };\r\n    handleBackStep= () =>{\r\n        this.setState({\r\n            step: this.state.step-1,\r\n            AppointmentTimeID: \"\"\r\n        })\r\n    };\r\n    render(){\r\n        const {classes}=this.props;\r\n        return(\r\n            <div>\r\n                {window.localStorage.userType === \"2\" ? (\r\n                    <Button variant=\"filled\" fullWidth className={classes.Button} onClick={this.handleClickOpen}>\r\n                        <AddButton className={classes.icon}/>New Appointment\r\n                    </Button>\r\n                ) : (\r\n                    <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.Button} onClick={this.handleClickOpen}>\r\n                        <AddButton className={classes.icon}/>New Appointment\r\n                    </Button>\r\n                )}\r\n                <Dialog open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Book an Appointment</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Please fill out the information to add a new Appointment\r\n                        </DialogContentText>\r\n                        {this.getStepInfo(this.state.step)}\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nNewAppointmentForm.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  export default withStyles(styles)(NewAppointmentForm);","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles, TextField } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n      margin: theme.spacing.unit,\r\n      fontSize: 32,\r\n    },\r\n});\r\n\r\nclass AddDiagnosis extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            AppointmentID: this.props.AppID,\r\n            Diagnosis: \"\",\r\n            openForm: false,\r\n        };\r\n    }\r\n\r\n    handleDiagnosisAdd= () =>{\r\n        this.setState({openForm:false});\r\n        fetch(`http://162.243.165.50:4000/AddDiagnosis`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                AppointmentID: this.state.AppointmentID,\r\n                Diagnosis:   this.state.Diagnosis,\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n    };\r\n    handleClickOpen = () => {\r\n        this.setState({ \r\n            Diagnosis: \"\",\r\n            openForm: true \r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ openForm: false });\r\n    };\r\n\r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Button variant=\"contained\" color=\"primary\" fullWidth className={this.props.Button} onClick={this.handleClickOpen}>\r\n                    Add a Diagnosis\r\n                </Button>\r\n                <Dialog open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Add A Appointment</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Please fill out the information to add a new Diagnosis\r\n                        </DialogContentText>\r\n                        <TextField \r\n                            name=\"Diagnosis\"\r\n                            label=\"What is the Diagnosis\" \r\n                            variant=\"standard\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.Diagnosis}\r\n                            inputProps={{ maxLength: 45 }}\r\n                            fullWidth\r\n                        />\r\n                        <Button onClick={this.handleDiagnosisAdd} disabled={this.state.Diagnosis=== \"\"}>\r\n                            Add Diagnosis\r\n                        </Button>\r\n                    </DialogContent>\r\n\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nAddDiagnosis.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  export default withStyles(styles)(AddDiagnosis);\r\n\r\n\r\n\r\n  //Split show and add for Prescription and Diagnosis","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\n//Seperate Prescription and Diagnosis Tables\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n      margin: theme.spacing.unit,\r\n      fontSize: 32,\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing.unit * 3,\r\n        overflowX: 'auto',\r\n      },\r\n      table: {\r\n        minWidth: 800,\r\n      },\r\n});\r\n\r\nclass ShowDiagnosis extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            openForm: false,\r\n            Diagnosis: [],\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.uploadDiagnosis();\r\n    }\r\n    uploadDiagnosis(){\r\n        fetch(`http://162.243.165.50:4000/Diagnosis/${this.props.AppID}`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Diagnosis: Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    handleClickOpen = () => {\r\n        this.uploadDiagnosis();\r\n        this.setState({ openForm: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ openForm: false });\r\n    };\r\n\r\n    render(){\r\n        const {classes}=this.props;\r\n        return(\r\n            <div>\r\n                <Button variant=\"contained\" color=\"inherit\" className={this.props.Button} fullWidth onClick={this.handleClickOpen}>\r\n                    Show Diagnosis\r\n                </Button>\r\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Here are the Doctor's Diagnoses</DialogTitle>\r\n                    <DialogContent>\r\n                        {this.state.Diagnosis.length>=1 ? (\r\n                            <div>\r\n                                <DialogContentText>\r\n                                    These are the Diagnoses Assosciated with your Appointment\r\n                                </DialogContentText>\r\n                                <Table className={classes.table}>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Diagnosis</TableCell>\r\n                                            <TableCell align=\"right\">DiagnosisID</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {this.state.Diagnosis.map(Each => (\r\n                                            <TableRow key={Each.DiagnosisID}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {Each.Diagnosis}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">{Each.DiagnosisID}</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </div>\r\n                        ):(\r\n                            <DialogContentText>\r\n                                There are no Diagnoses Assosciated with your Appointment\r\n                            </DialogContentText>\r\n                        )}\r\n                        \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nShowDiagnosis.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  export default withStyles(styles)(ShowDiagnosis);\r\n                 ","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\n\r\n//Seperate Prescription and Diagnosis Tables\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n      margin: theme.spacing.unit,\r\n      fontSize: 32,\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing.unit * 3,\r\n        overflowX: 'auto',\r\n      },\r\n      table: {\r\n        minWidth: 800,\r\n      },\r\n});\r\n\r\nclass ShowPrescriptions extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            openForm: false,\r\n            Prescriptions: [],\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.uploadPrescriptions();\r\n    }\r\n    uploadPrescriptions(){\r\n        fetch(`http://162.243.165.50:4000/Prescriptions/${this.props.AppID}`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Prescriptions: Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    handleClickOpen = () => {\r\n        this.setState({ openForm: true });\r\n        this.uploadPrescriptions();\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ openForm: false });\r\n    };\r\n\r\n    render(){\r\n        const {classes}=this.props;\r\n        return(\r\n            <div>\r\n                <Button variant=\"contained\" color=\"inherit\" className={this.props.Button} fullWidth onClick={this.handleClickOpen}>\r\n                    Show Prescriptions\r\n                </Button>\r\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Here are your issued Prescriptions</DialogTitle>\r\n                    <DialogContent>\r\n                        {this.state.Prescriptions.length>=1 ? (\r\n                            <div>\r\n                                 <DialogContentText>\r\n                                    These are the Prescriptions Assosciated with your Appointment\r\n                                </DialogContentText>\r\n                                <Table className={classes.table}>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Prescription Issue ID</TableCell>\r\n                                            <TableCell align=\"right\">Refills</TableCell>\r\n                                            <TableCell align=\"right\">Due Date</TableCell>\r\n                                            <TableCell align=\"right\">Medicine</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {this.state.Prescriptions.map(Each => (\r\n                                            <TableRow key={Each.PrescriptionIssueID}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {Each.PrescriptionIssueID}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">{Each.RefillLeft}</TableCell>\r\n                                            <TableCell align=\"right\">{Each.DueDate.substr(0,10)}</TableCell>\r\n                                            <TableCell align=\"right\">{Each.Medicine}</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </div>\r\n                        ):(\r\n                            <DialogContentText>\r\n                                There are no Prescriptions Assosciated with your Appointment\r\n                            </DialogContentText>\r\n                        )}\r\n                       \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nShowPrescriptions.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  export default withStyles(styles)(ShowPrescriptions);\r\n                 ","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles, TextField, FormControl, MenuItem } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n      margin: theme.spacing.unit,\r\n      fontSize: 32,\r\n    },\r\n});\r\n\r\nclass AddPrescription extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            AppointmentID: this.props.AppID,\r\n            PrescriptionID: \"\",\r\n            Refills:\"\",\r\n            MedicineTypes: [],\r\n            DueDate: null,\r\n            DBDueDate: null,\r\n            openForm: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.uploadMedicineTypes()\r\n    };\r\n\r\n    uploadMedicineTypes(){\r\n        fetch(`http://162.243.165.50:4000/AllMedicines/`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ MedicineTypes:Response.data}))\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    handleSubmit= () =>{\r\n        this.setState({openForm:false});\r\n        fetch(`http://162.243.165.50:4000/AddPrescription`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                AppointmentID: this.state.AppointmentID,\r\n                PrescriptionID:   this.state.PrescriptionID,\r\n                DueDate:  this.state.DBDueDate,\r\n                Refills:     this.state.Refills,\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n    };\r\n    handleClickOpen = () => {\r\n        this.setState({ \r\n            openForm: true,\r\n            AppointmentID: this.props.AppID,\r\n            PrescriptionID: \"\",\r\n            Refills:\"\",\r\n            DueDate: null,\r\n            DBDueDate: null, \r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ openForm: false });\r\n    };\r\n\r\n    DueDateChange = (d) =>{\r\n        let DueDate=new Date(d)\r\n        DueDate = this.FormatDate(DueDate);\r\n        \r\n        this.setState({DBDueDate:DueDate});\r\n        this.setState({\r\n            DueDate: d\r\n        })\r\n    }\r\n\r\n    FormatDate=(date)=>{\r\n        date = date.getFullYear() + '-' + (this.fixMonth(date)) + '-' + date.getDate();\r\n        return date;\r\n    }\r\n\r\n    fixMonth=(date)=>{\r\n        if(date.getMonth() + 1 < 10){\r\n            return \"0\" +(date.getMonth() +1);\r\n        }\r\n        else{\r\n            return date.getMonth()+1;\r\n        }\r\n    }\r\n\r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Button variant=\"contained\" color=\"primary\" fullWidth className={this.props.Button} onClick={this.handleClickOpen}>\r\n                    Add a Prescription\r\n                </Button>\r\n                <Dialog open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Add A Appointment</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Please fill out the information to add a new Diagnosis\r\n                        </DialogContentText>\r\n                        <FormControl margin=\"normal\" fullWidth>\r\n                            <TextField\r\n                                id=\"PrescriptionID\"\r\n                                select\r\n                                label=\"Please Choose A Prescription\"\r\n                                name=\"PrescriptionID\"\r\n                                variant=\"standard\"\r\n                                onChange={e=>this.handleChange(e)}\r\n                                value={this.state.PrescriptionID}   \r\n                                required                   \r\n                            >\r\n                            {this.state.MedicineTypes.map(option => (\r\n                                <MenuItem key={option.PrescriptionID} value={option.PrescriptionID}>\r\n                                    {option.Medicine}\r\n                                </MenuItem>\r\n                            ))}\r\n                            </TextField>\r\n                            <TextField \r\n                                name=\"Refills\"\r\n                                label=\"Number of Total Refills\" \r\n                                type=\"number\"\r\n                                variant=\"standard\"\r\n                                onChange={this.handleChange}\r\n                                value={this.state.Refills}\r\n                            />\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <DatePicker\r\n                                    minDate={new Date()}\r\n                                    label=\"Due Date\"\r\n                                    name=\"DueDate\"\r\n                                    value={this.state.DueDate}\r\n                                    onChange={this.DueDateChange}\r\n                                />\r\n                            </MuiPickersUtilsProvider>\r\n                            <Button onClick={this.handleSubmit} disabled={this.state.Refills=== \"\" || this.state.PrescriptionID=== \"\" || this.state.DBDueDate=== null} color=\"primary\">\r\n                                Submit\r\n                            </Button>\r\n                        </FormControl>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nAddPrescription.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  export default withStyles(styles)(AddPrescription);","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles, TextField, MenuItem } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n      margin: theme.spacing.unit,\r\n      fontSize: 32,\r\n    },\r\n});\r\n\r\nclass AddSpecialistReccomendation extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            AppointmentID: this.props.AppID,\r\n            Specialist: \"\",\r\n            Specialists: [],\r\n            openForm: false,\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.uploadSpecialists()\r\n    }\r\n    uploadSpecialists(){\r\n        fetch(`http://162.243.165.50:4000/AllDoctors`)\r\n        .then(result => result.json())\r\n        .then(res => this.setState({ Specialists: res.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    handleSpecialistAdd= () =>{\r\n        this.setState({openForm:false});\r\n        fetch(`http://162.243.165.50:4000/AddSpecialist`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                AppointmentID: this.state.AppointmentID,\r\n                Specialist:   this.state.Specialist,\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n        setTimeout(function(){\r\n\t\t\twindow.location.replace('/Appointments')\r\n\t\t}, 1000);\r\n    };\r\n    handleClickOpen = () => {\r\n        this.setState({ \r\n            Specialist: \"\",\r\n            openForm: true \r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ openForm: false });\r\n    };\r\n\r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Button variant=\"contained\" color=\"primary\" fullWidth className={this.props.Button} onClick={this.handleClickOpen}>\r\n                    Add a Specialist Reccomendation\r\n                </Button>\r\n                <Dialog open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Add A Specialist Reccomendation</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Please select a Doctor (Specialist or General) that you reccomend for the patiet\r\n                        </DialogContentText>\r\n                        <FormControl margin=\"normal\" fullWidth>\r\n                            <TextField\r\n                                id=\"Specialist\"\r\n                                select\r\n                                label=\"Please Choose A Doctor to Reccomend\"\r\n                                name=\"Specialist\"\r\n                                variant=\"standard\"\r\n                                onChange={this.handleChange}\r\n                                value={this.state.Specialist}   \r\n                                required                   \r\n                            >\r\n                                {this.state.Specialists.map(option => (\r\n                                    <MenuItem key={option.EmployeeID} value={option.FirstName}>\r\n                                        Dr.{option.FirstName} {option.LastName}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                        </FormControl>\r\n                        <Button onClick={this.handleSpecialistAdd}>\r\n                            Add Specialist\r\n                        </Button>\r\n                    </DialogContent>\r\n\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nAddSpecialistReccomendation.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  export default withStyles(styles)(AddSpecialistReccomendation);\r\n\r\n\r\n\r\n  //Split show and add for Prescription and Diagnosis","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Button from '@material-ui/core/Button';\r\nimport InfoIcon from '@material-ui/icons/ChromeReaderMode';\r\nimport { withStyles, Typography } from '@material-ui/core';\r\nimport {Paper, TextField, Grid,} from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport PropTypes from 'prop-types';\r\nimport './AppointmentPage.css';\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n      fontSize: 25,\r\n      color: \"#f5f5f5\",\r\n      '&:hover': {\r\n        color: '#e0e0e0',\r\n      },\r\n    },\r\n    dialog: {\r\n        margin: 'normal',\r\n    },\r\n    Button: {\r\n        marginTop: \".5%\"\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: \"#e0e0e0\",\r\n        padding: theme.spacing.unit*6,\r\n        minHeight: '100vh',\r\n        margin:\"auto\",\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField:{\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n    },\r\n    dense: {\r\n        marginTop: 19,\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    },\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    table: {\r\n        height: 10,\r\n        width: '100%',\r\n        marginTop: theme.spacing.unit * 3,\r\n        overflow: '3',\r\n      },\r\n});\r\n\r\nclass PatientMedicalHistory extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            openForm: false,    \r\n            editing: false,   \r\n            allergies: '',\r\n            immunizationRecord: '',\r\n            medicalCondition: '',\r\n            procedureRecord: '',\r\n            MHLog: [],\r\n            deduct: \"\",\r\n            insuranceID: \"\",\r\n            insuranceContact: \"\",\r\n            company: \"\",\r\n        };\r\n        this.handleChange=this.handleChange.bind(this);\r\n        this.saveChange=this.saveChange.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        this.getInsurance();\r\n        this.getLog();\r\n    }\r\n    getMedicalRecord=()=>{\r\n        fetch(`http://162.243.165.50:4000/GetMedicalHistory/${this.props.PatientID}`)\r\n        .then(result => result.json())\r\n        .then(result => \r\n            {if(result.data.length !== 0){\r\n                this.setState({\r\n                    allergies: result.data[0].Allergies,\r\n                    immunizationRecord: result.data[0].ImmunizationRecord,\r\n                    medicalCondition: result.data[0].MedicalCondition,\r\n                    procedureRecord: result.data[0].ProcedureRecord,\r\n                })\r\n            }})\r\n        .catch(err => console.error(err))\r\n    };\r\n    getLog=()=>{\r\n        fetch(`http://162.243.165.50:4000/GetMedicalHistoryLog/${this.props.PatientID}`)\r\n        .then(result => result.json())\r\n        .then(result => this.setState({\r\n            MHLog: result.data\r\n        }))\r\n        .catch(err => console.error(err))\r\n    };\r\n    getInsurance(){\r\n            fetch(`http://162.243.165.50:4000/Insurance/${this.props.PatientID}`)\r\n            .then(result => result.json())\r\n            .then(res => this.setState({\r\n                deduct:res.data[0].Deductible,\r\n                insuranceID: res.data[0].InsuranceClientID,\r\n                insuranceContact: res.data[0].ContactNumber,\r\n                company: res.data[0].Name,\r\n\r\n            }))\r\n            .catch(err => console.log(err))\r\n}\r\n    updateMedicalRecord(){\r\n        fetch(`http://162.243.165.50:4000/UpdateMedicalHistory`, {\r\n          method:\"POST\",\r\n          headers: {\r\n            \"Content-Type\":\"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            patientID: this.props.PatientID,\r\n            lastUpdatedBy: window.localStorage.userID,\r\n            immunizationRecord: this.state.immunizationRecord,\r\n            allergies: this.state.allergies,\r\n            procedureRecord: this.state.procedureRecord,\r\n            medicalCondition: this.state.medicalCondition,\r\n          })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    saveChange(){\r\n        this.updateMedicalRecord();\r\n        this.getMedicalRecord();\r\n        this.setState({\r\n            editing: false\r\n        });\r\n    }\r\n    handleClickOpen = () => {\r\n        this.getMedicalRecord();\r\n        this.setState({openForm:true})\r\n    };\r\n    handleClose = () => {\r\n        this.setState({ \r\n            openForm: false,    \r\n            editing: false,   \r\n            allergies: '',\r\n            immunizationRecord: '',\r\n            medicalCondition: '',\r\n            procedureRecord: '',\r\n        });\r\n    };\r\n    editMode = () => {\r\n        console.log(this.state.MHLog)\r\n        this.setState({\r\n          editing: true\r\n        });\r\n    }\r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        const {classes}=this.props;\r\n        return(\r\n            <div>\r\n                {this.getMedicalRecord}\r\n                <Button variant=\"contained\" color=\"inherit\" className={this.props.Button} onClick={this.handleClickOpen} fullWidth >\r\n                    <InfoIcon/> Patient's Information\r\n                </Button>\r\n                <Dialog fullScreen className={classes.dialog} open={this.state.openForm} onClose={this.handleClose}>\r\n                    <Paper className={classes.root} fullWidth elevation={2}>\r\n                        <Typography variant=\"h3\" >Here are the Patients Information</Typography>\r\n                        <br />\r\n                        <Typography variant=\"h4\" >Summary</Typography>\r\n                        <TextField\r\n                            label=\"Patient ID\"\r\n                            margin=\"normal\"\r\n                            disabled\r\n                            className={classes.textField}\r\n                            value={this.props.PatientID}\r\n                        />\r\n                        <br/>\r\n                        <Grid container spacing={24}>\r\n                            <Grid item sm>\r\n                                <TextField\r\n                                    name=\"immunizationRecord\"\r\n                                    label=\"Immunization Record\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.immunizationRecord}\r\n                                    margin=\"normal\"\r\n                                    multiline\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    rows=\"2\"\r\n                                    inputProps={{ maxLength: 45 }}\r\n                                    disabled={!this.state.editing}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item sm>\r\n                                <TextField\r\n                                    name=\"medicalCondition\"\r\n                                    label=\"Medical Condition\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.medicalCondition}\r\n                                    margin=\"normal\"\r\n                                    fullWidth\r\n                                    multiline\r\n                                    variant=\"outlined\"\r\n                                    rows=\"2\"\r\n                                    inputProps={{ maxLength: 45 }}\r\n                                    disabled={!this.state.editing}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        \r\n                        <Grid container spacing={24}>\r\n                            <Grid item sm>\r\n                                <TextField\r\n                                    name=\"allergies\"\r\n                                    label=\"Allergies\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.allergies}\r\n                                    margin=\"normal\"\r\n                                    multiline\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    rows=\"2\"\r\n                                    inputProps={{ maxLength: 45 }}\r\n                                    disabled={!this.state.editing}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item sm>\r\n                                <TextField\r\n                                    name=\"procedureRecord\"\r\n                                    label=\"Procedures Record\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.procedureRecord}\r\n                                    margin=\"normal\"\r\n                                    multiline\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    rows=\"2\"\r\n                                    inputProps={{ maxLength: 100 }}\r\n                                    disabled={!this.state.editing}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow display={'flex'}>\r\n                                    <TableCell align=\"center\">Medical History Last Updated On</TableCell>\r\n                                    <TableCell align=\"center\">Medical History Last Updated By (EmployeeID)</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {this.state.MHLog.map(Each => (\r\n                                    <TableRow key={Each.UpdatedAt}>\r\n                                        <TableCell align=\"center\">{Each.UpdatedAt.substr(0,10)}</TableCell>\r\n                                        <TableCell align=\"center\">{Each.UpdatedBy}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>    \r\n                        <Grid container spacing={24}>\r\n                            <Grid item sm>\r\n                                <TextField\r\n                                    name=\"company\"\r\n                                    label=\"Insurance Company\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.company}\r\n                                    margin=\"normal\"\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    disabled\r\n                                />\r\n                            </Grid>\r\n                            <Grid item sm>\r\n                                <TextField\r\n                                    name=\"insuranceContact\"\r\n                                    label=\"Insurance Number\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.insuranceContact}\r\n                                    margin=\"normal\"\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    disabled\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={24}>\r\n                            <Grid item sm>\r\n                                <TextField\r\n                                    name=\"insuranceID\"\r\n                                    label=\"Insurance Client ID\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.insuranceID}\r\n                                    margin=\"normal\"\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    disabled\r\n                                />\r\n                            </Grid>\r\n                            <Grid item sm>\r\n                                <TextField\r\n                                    name=\"deduct\"\r\n                                    label=\"Deductible Amount\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.deduct}\r\n                                    margin=\"normal\"\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    disabled\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={8}>\r\n                            {!this.state.editing ? (\r\n                                <Grid item xs={12} sm={6}>\r\n                                        <Button variant=\"contained\" fullWidth color=\"primary\" className={classes.button} onClick={this.editMode}> Edit </Button>\r\n                                </Grid>\r\n                            ):(\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <Button variant=\"contained\" fullWidth color=\"secondary\" className={classes.button} onClick={this.saveChange}> Save </Button>\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item xs={12} sm={6}>\r\n                                <Button variant=\"contained\" fullWidth color=\"primary\" className={classes.button} onClick={this.handleClose}> Close </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                            \r\n                        \r\n                    </Paper>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nPatientMedicalHistory.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  export default withStyles(styles)(PatientMedicalHistory);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport NewAppointmentForm from './NewAppointmentForm';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { FormControl, Grid } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddDiagnosis from './AddDiagnosis';\r\nimport ShowDiagnosis from './ShowDiagnosis';\r\nimport ShowPrescriptions from './ShowPrescriptions';\r\nimport AddPrescription from './AddPrescription';\r\nimport AddSpecialistReccomendation from './AddSpecilaistReccomendation';\r\nimport './AppointmentPage.css';\r\nimport PatientMedicalHistory from './PatientMedicalHistory';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst styles = theme =>({\r\n    root: {\r\n        width: '75%',\r\n        alignItems: \"center\",\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        padding: theme.spacing.unit*3,\r\n        margin:\"auto\"\r\n  \r\n    },\r\n    page: {\r\n        padding: theme.spacing.unit*3,\r\n        margin:\"auto\"\r\n  \r\n    },\r\n    AdditionButton: {\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        padding: theme.spacing.unit,\r\n  \r\n    },\r\n    Button: {\r\n        marginTop: '.5%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '19%',\r\n        flexShrink: 0,\r\n    },\r\n    iconHistory: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '3%',\r\n        flexShrink: 10,\r\n    },\r\n    secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    flexBasis: '100%',\r\n    margin: 'auto'\r\n    },\r\n});\r\n\r\n\r\nclass AppointmentHistory extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            expanded: null,\r\n            Appointments: [],\r\n            Diagnosis: [],\r\n            cancelApptShow: false,\r\n\t\t\tselectedAppt: \"\",\r\n\t\t\topenForm: false\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.grabAppointments();\r\n    }\r\n    grabAppointments=()=>{\r\n        //backend call to grab the appointments for the user\r\n        fetch(`http://162.243.165.50:4000/Appointments/`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                UserType: window.localStorage.userType,\r\n                UserID: window.localStorage.userID,\r\n            })\r\n        })\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Appointments:Response.data}))\r\n        .catch(err => console.log(err));\r\n        \r\n    }\r\n    handleChange = panel => (event, expanded) => {\r\n        this.setState({\r\n            expanded: expanded ? panel : false,\r\n        });\r\n    }\r\n\r\n    placeDiagnosis(){\r\n        this.state.Diagnosis.map(option => (\r\n            <FormControl>\r\n                <Typography>Diagnosis: {option.Diagnosis}</Typography>\r\n                <Typography>Number of Refills:  {option.RefillLeft}</Typography>\r\n                <Typography>Due Date: {option.DueDate.substr(0,10)}</Typography>\r\n                <Typography>Medicine: {option.Medicine}</Typography>\r\n            </FormControl>\r\n        ))\r\n    }\r\n    handleAppointmentCancel = (AppID) => {\r\n        fetch(`http://162.243.165.50:4000/CancelAppointment/`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                AppointmentID: AppID,\r\n            })\r\n        })\r\n        .then(this.grabAppointments)\r\n        .catch(err => console.log(err));\r\n\t\tsetTimeout(function(){\r\n\t\t\twindow.location.replace('/Appointments')\r\n\t\t}, 200);\r\n    };\r\n\t\r\n\thandleClickOpenCancellation = (apptID) => {\r\n\t\tthis.setState({ selectedAppt: apptID });\r\n        this.setState({ openForm: true });\r\n    };\r\n\r\n    handleCloseCancellation = () => {\r\n        this.setState({ openForm: false });\r\n    };\r\n\t\r\n    render(){\r\n        const{classes}=this.props;\r\n        const { expanded } = this.state;\r\n        return(\r\n            <div className={classes.page}>\r\n                <div className='AppointmentPage-SmallBoxOverLay'>\r\n                <div className={classes.root}>\r\n                <h1 className='AppointmentHistory-h1'>All Appointments</h1>\r\n                    {this.state.Appointments.map(option => (\r\n                            <FormControl key={option.idAppointment} fullWidth>\r\n                                <ExpansionPanel square expanded={expanded === option.idAppointment}  onChange={this.handleChange(option.idAppointment)}>\r\n                                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                                        <Typography className={classes.heading}>Patient: {option.Patient}</Typography>\r\n                                        <Typography className={classes.heading}>Doctor: Dr. {option.Doctor}</Typography>\r\n                                        <Typography className={classes.heading}>Date: {option.AppointmentDate.substr(0,10)}</Typography>\r\n                                        <Typography className={classes.heading}>Time: {option.AppointmentTime.substr(0,5)}</Typography>\r\n                                        <Typography className={classes.heading}>Status: {option.currentStatus}</Typography>\r\n                                    </ExpansionPanelSummary>\r\n                                    <ExpansionPanelDetails>\r\n                                        <Typography className={classes.secondaryHeading}>\r\n                                            Reason:{option.Reason === \"null\" ? (<text> No Reason Specified</text>):(<text>{option.Reason}</text>)} <br/>\r\n                                            AppointmentID: {option.idAppointment} <br/>\r\n                                            Facility: {option.FacilityName} <br/>\r\n                                            Address: {option.Street}, {option.City}, {option.State} {option.ZipCode}<br/>\r\n                                            Doctor Reccomentation: {option.Specialist === null || option.Specialist === \"\" ? (<text>No Doctor Reccomendations</text>):(<text>Dr. {option.Specialist}</text>)}<br/>\r\n                                            {(window.localStorage.userType !== \"2\" &&  window.localStorage.userType !== \"3\")? (\r\n                                                <Grid container spacing={8}>\r\n                                                    <Grid item xs={12} sm={4}>  \r\n                                                        <AddDiagnosis Button={classes.Button} AppID={option.idAppointment}/>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12} sm={4}>\r\n                                                        <AddSpecialistReccomendation  Button={classes.Button} AppID={option.idAppointment}/>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12} sm={4}>  \r\n                                                        <AddPrescription Button={classes.Button} AppID={option.idAppointment}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            ):(\r\n                                                <div>\r\n                                                </div>\r\n                                            )}\r\n                                            {window.localStorage.userType !==\"2\" ? (\r\n                                                <Grid container spacing={8}>\r\n                                                    <Grid item xs={12} sm={4}>\r\n                                                        <ShowDiagnosis  Button={classes.Button} AppID={option.idAppointment}/>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12} sm={4}>\r\n                                                        <PatientMedicalHistory Button={classes.Button} PatientID={option.PatientID}/>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12} sm={4}>\r\n                                                        <ShowPrescriptions  Button={classes.Button} AppID={option.idAppointment}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            ):(\r\n                                                <Grid container spacing={8}>\r\n                                                    <Grid item xs={12} sm={6}>\r\n                                                        <ShowDiagnosis  Button={classes.Button} AppID={option.idAppointment}/>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12} sm={6}>\r\n                                                        <ShowPrescriptions  Button={classes.Button} AppID={option.idAppointment}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            )}\r\n                                            \r\n                                            {window.localStorage.userType === \"3\" ? (\r\n                                                    <Grid container spacing={8}>\r\n                                                        <Grid item xs={12} sm={6}>  \r\n                                                            <NewAppointmentForm PatientID={option.PatientID}/>                                                        \r\n                                                        </Grid>\r\n                                                        <Grid item xs={12} sm={6}>\r\n                                                            <Button variant=\"raised\" fullWidth  className={classes.Button} color=\"secondary\"  onClick={() =>  this.handleClickOpenCancellation(option.idAppointment) } marginTop=\"10%\">\r\n                                                                Cancel Appointment\r\n                                                            </Button>  \r\n                                                            \r\n                                                            <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleCloseCancellation}>\r\n                                                                <DialogTitle id=\"form-dialog-title\"></DialogTitle>\r\n                                                                <DialogContent>\r\n                                                                    <DialogContentText>\r\n                                                                        Are you sure you want to cancel appointment {this.state.selectedAppt}?\r\n                                                                    </DialogContentText>\r\n                                                                </DialogContent>\r\n                                                                <DialogActions>\r\n                                                                    <Button className={classes.Button} onClick={this.handleCloseCancellation} color=\"primary\" variant=\"contained\">\r\n                                                                        No\r\n                                                                    </Button>\r\n                                                                    <Button className={classes.Button} onClick={() => this.handleAppointmentCancel(this.state.selectedAppt)} color=\"secondary\" variant=\"contained\">\r\n                                                                        Yes\r\n                                                                    </Button>\r\n                                                                </DialogActions>\r\n                                                            </Dialog>\r\n                                                            \r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                            ):(\r\n                                                <div></div>\r\n                                            )}\r\n                                            \r\n                                            {window.localStorage.userType === \"2\" ? (\r\n                                                <div>\r\n                                                    <Button variant=\"raised\" fullWidth  className={classes.Button} color=\"secondary\"  onClick={() =>  this.handleClickOpenCancellation(option.idAppointment) } marginTop=\"10%\">\r\n                                                        Cancel Appointment\r\n                                                    </Button>\r\n                                                    \r\n                                                    <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleCloseCancellation}>\r\n                                                        <DialogTitle id=\"form-dialog-title\"></DialogTitle>\r\n                                                        <DialogContent>\r\n                                                            <DialogContentText>\r\n                                                                Are you sure you want to cancel appointment {this.state.selectedAppt}?\r\n                                                            </DialogContentText>\r\n                                                        </DialogContent>\r\n                                                        <DialogActions>\r\n                                                            <Button className={classes.Button} onClick={this.handleCloseCancellation} color=\"primary\" variant=\"contained\">\r\n                                                                No\r\n                                                            </Button>\r\n                                                            <Button className={classes.Button} onClick={() => this.handleAppointmentCancel(this.state.selectedAppt)} color=\"secondary\" variant=\"contained\">\r\n                                                                Yes\r\n                                                            </Button>\r\n                                                        </DialogActions>\r\n                                                    </Dialog>\r\n                                                    \r\n                                                </div>\r\n                                                \r\n                                            ):(\r\n                                                <div></div>\r\n                                            )}\r\n\r\n                                            \r\n                                            \r\n                                        </Typography>\r\n                                        \r\n                                    </ExpansionPanelDetails>\r\n                                </ExpansionPanel>\r\n                            </FormControl>\r\n                            \r\n                    ))}\r\n                    {this.state.Appointments.length === 0 && <Typography variant=\"subtitle1\">You Have no Appointments</Typography>}\r\n                    \r\n                    \r\n                    {window.localStorage.userType === \"2\" ? (\r\n                        <div className={classes.AdditionButton}>\r\n                            <NewAppointmentForm PatientID={window.localStorage.userID}/>\r\n                        </div>\r\n                    ):(\r\n                        <div></div>\r\n                    )}\r\n                    \r\n                    \r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nAppointmentHistory.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  \r\nexport default withStyles(styles)(AppointmentHistory);\r\n","import React, { Component } from 'react';\r\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\r\nimport AppointmentHistory from '../Components/Appointments/AppointmentHistory';\r\nimport '../Components/Appointments/AppointmentPage.css';\r\n\r\nclass Appointments extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n        firstName: \"\",\r\n        Facilities: []\r\n    };\r\n  }\r\n  componentDidMount(){\r\n    this.FirstName();\r\n  }\r\n\r\n  FirstName(){\r\n    if(window.localStorage.userType === \"2\"){\r\n      fetch(`http://162.243.165.50:4000/Patient/${window.localStorage.LoginTableID}`)\r\n      .then(result => result.json())\r\n      .then(res => {\r\n          this.setState(  { firstName: res.data[0].FirstName  } )\r\n        })\r\n      .catch(err => console.log(err))\r\n    }\r\n  \r\n    else{\r\n      fetch(`http://162.243.165.50:4000/Employee/${window.localStorage.LoginTableID}`)\r\n      .then(result => result.json())\r\n      .then(res => {this.setState(  { firstName: res.data[0].FirstName  } )})\r\n      .catch(err => console.log(err))\r\n    }\r\n  }\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <div className='AppointmentPage-image'>\r\n        <div className='AppointmentPage-overlay'>\r\n          <NavigationBar title={'Welcome, '+this.state.firstName} Tab={0}/>\r\n          <AppointmentHistory val={this.state}/>\r\n        </div>\r\n      </div>\r\n        \r\n    );\r\n  }\r\n}\r\n\r\nexport default Appointments;\r\n","import { TextField,  MenuItem, Typography } from \"@material-ui/core\";\r\nimport React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport {Input, InputLabel} from '@material-ui/core';  \r\n\r\n\r\nfunction validateUsername(){\r\n    return true;\r\n};\r\nfunction validatePassword(props){\r\n    if(props.val.password.length >=6 || props.val.password.length <=1 ){\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\nfunction BasicInformation(props){\r\n    \r\n    return(\r\n        <div>\r\n             <Typography>Registration Information</Typography>\r\n                <FormControl margin=\"normal\" fullWidth required>\r\n                    <InputLabel htmlFor=\"FirstName\">First Name</InputLabel>\r\n                    <Input name=\"FirstName\" autoFocus value={props.val.FirstName} onChange={props.handleChange}></Input>\r\n                </FormControl>\r\n                <FormControl margin=\"auto\" fullWidth required>\r\n                    <InputLabel htmlFor=\"LastName\">Last Name</InputLabel>\r\n                    <Input name=\"LastName\" value={props.val.LastName} onChange={props.handleChange}></Input>\r\n                </FormControl>\r\n                <FormControl margin=\"normal\" fullWidth>\r\n                    <TextField \r\n                        required\r\n                        name=\"username\" \r\n                        label=\"Username\" \r\n                        variant=\"standard\"\r\n                        onChange={props.handleChange}\r\n                        value={props.val.username}\r\n                        error={!validateUsername()}\r\n                        helperText={validateUsername() ? \"\":\"Username is not valid\"}\r\n                    />\r\n                </FormControl>\r\n                <FormControl margin=\"auto\" fullWidth required>\r\n                    <TextField \r\n                        name=\"password\"\r\n                        type=\"password\" \r\n                        label=\"Password\" \r\n                        variant=\"standard\"\r\n                        error={!validatePassword(props)}\r\n                        onChange={props.handleChange}\r\n                        value={props.val.password}\r\n                        required\r\n                    />\r\n                </FormControl>\r\n                {(window.localStorage.userType === \"3\") ? (\r\n                    <FormControl margin=\"auto\" fullWidth>\r\n                        <TextField\r\n                            id=\"userType\"\r\n                            select\r\n                            label=\"Type of User\"\r\n                            name=\"userType\"\r\n                            variant=\"standard\"\r\n                            onChange={props.handleChange}\r\n                            value={props.val.userType}   \r\n                            required                   \r\n                        >\r\n                            {props.val.roles.map(option => (\r\n                                <MenuItem key={option.RoleID} value={option.RoleID}>\r\n                                    {option.RoleTitle}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                    </FormControl>\r\n                ):(\r\n                    <div></div>\r\n                )}\r\n                    \r\n                <FormControl margin=\"auto\" fullWidth required>\r\n                    <TextField \r\n                        name=\"Email\" \r\n                        label=\"Email\" \r\n                        variant=\"standard\"\r\n                        type=\"email\"\r\n                        onChange={props.handleChange}\r\n                        value={props.val.Email}\r\n                        required\r\n                    />\r\n                </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BasicInformation;","import {  TextField, MenuItem, Typography, Grid, Input, InputLabel } from \"@material-ui/core\";\r\nimport React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';  \r\nimport MaskedInput from 'react-text-mask';\r\nimport PropTypes from 'prop-types'; \r\n\r\n\r\nfunction TextMaskCustom(props) {\r\n    const {...other } = props;\r\n  \r\n    return (\r\n      <MaskedInput\r\n        {...other}\r\n        guide={false}\r\n        mask={[/[1-9]/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\r\n        placeholderChar={'\\u2000'}\r\n        showMask\r\n      />\r\n    );\r\n}\r\n\r\nTextMaskCustom.propTypes = {\r\n    inputRef: PropTypes.func.isRequired,\r\n};\r\nfunction DateMaskCustom(props) {\r\n    const {...other } = props;\r\n  \r\n    return (\r\n      <MaskedInput\r\n        guide={false}\r\n        {...other}\r\n        mask={[/\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/,'-', /\\d/, /\\d/]}\r\n        placeholderChar={'\\u2000'}\r\n        showMask\r\n      />\r\n    );\r\n}\r\n\r\nfunction SSNMaskCustom(props) {\r\n    const {...other } = props;\r\n\r\n  \r\n    return (\r\n      <MaskedInput\r\n        guide={false}\r\n        {...other}\r\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\r\n        placeholderChar={'\\u2000'}\r\n        showMask\r\n      />\r\n    );\r\n}\r\n\r\nfunction BasicInformationPtTwo(props){\r\n    \r\n    return(\r\n        <div>\r\n            <Typography>Personal Information</Typography>\r\n            <FormControl margin=\"auto\" fullWidth required>\r\n                <InputLabel htmlFor=\"AddressStreet\">Street Address</InputLabel>\r\n                <Input name=\"AddressStreet\" autoFocus value={props.val.AddressStreet} onChange={props.handleChange}></Input>\r\n            </FormControl>\r\n            <Grid container spacing={8}>\r\n                <Grid item xs={12} sm={5}>\r\n                    <FormControl margin=\"normal\" fullWidth required>\r\n                        <InputLabel htmlFor=\"AddressCity\">City</InputLabel>\r\n                        <Input name=\"AddressCity\" value={props.val.AddressCity} onChange={props.handleChange}></Input>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} sm={2}>\r\n                    <FormControl margin=\"normal\" fullWidth>\r\n                        <TextField\r\n                            id=\"State\"\r\n                            select\r\n                            label=\"State\"\r\n                            name=\"AddressState\"\r\n                            variant=\"standard\"\r\n                            onChange={props.handleChange}\r\n                            value={props.val.AddressState}   \r\n                            required                   \r\n                        >\r\n                            {props.val.states.map(option => (\r\n                                <MenuItem key={option.StateID} value={option.StateID}>\r\n                                    {option.StateString}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} sm={5}>\r\n                    <FormControl margin=\"normal\" fullWidth required>\r\n                        <InputLabel htmlFor=\"AddressZip\">Zip Code</InputLabel>\r\n                        <Input name=\"AddressZip\"  value={props.val.AddressZip} onChange={props.handleChange}></Input>\r\n                    </FormControl>\r\n                </Grid>\r\n            </Grid>\r\n            <FormControl margin=\"normal\" fullWidth required>\r\n                <InputLabel htmlFor=\"DateOfBirth\">Date Of Birth</InputLabel>\r\n                <Input name=\"DateOfBirth\" placeholder=\"YYYY-MM-DD\" value={props.val.DateOfBirth}  inputComponent={DateMaskCustom} onChange={props.handleChange}></Input>\r\n            </FormControl>\r\n            <FormControl margin=\"auto\" fullWidth>\r\n                <TextField\r\n                    id=\"Sex\"\r\n                    select\r\n                    label=\"Gender\"\r\n                    name=\"Sex\"\r\n                    variant=\"standard\"\r\n                    onChange={props.handleChange}\r\n                    value={props.val.Sex}   \r\n                    required                   \r\n                >\r\n                    {props.val.sexes.map(option => (\r\n                        <MenuItem key={option.SexID} value={option.SexID}>\r\n                            {option.Gender}\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n            </FormControl>\r\n            <FormControl margin=\"auto\" fullWidth>\r\n                <TextField\r\n                    id=\"Race\"\r\n                    select\r\n                    label=\"Race\"\r\n                    name=\"raceID\"\r\n                    variant=\"standard\"\r\n                    onChange={props.handleChange}\r\n                    value={props.val.raceID}   \r\n                    required                   \r\n                >\r\n                    {props.val.races.map(option => (\r\n                        <MenuItem key={option.RaceID} value={option.RaceID}>\r\n                            {option.Race}\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n            </FormControl>\r\n            <FormControl margin=\"normal\" fullWidth required>\r\n                <InputLabel htmlFor=\"SSN\">Social Security</InputLabel>\r\n                <Input name=\"SSN\" placeholder=\"XXX-XX-XXXX\"  inputComponent={SSNMaskCustom} value={props.val.SSN} onChange={props.handleChange}></Input>\r\n            </FormControl>\r\n            <FormControl margin=\"normal\" required>\r\n                <InputLabel htmlFor=\"CellNuber\">Contact Number</InputLabel>\r\n                <Input\r\n                    onChange={props.handleChange}\r\n                    name=\"CellNumber\"\r\n                    id=\"Contact Number\"\r\n                    value={props.val.CellNumber}\r\n                    inputComponent={TextMaskCustom}\r\n                />\r\n            </FormControl>\r\n            \r\n                \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BasicInformationPtTwo;","import { Paper, Typography, Dialog, DialogTitle, DialogContent, DialogActions, DialogContentText } from \"@material-ui/core\";\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport HomeLogo  from '@material-ui/icons/Home';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport {Button} from '@material-ui/core';    \r\nimport BasicInformation from '../Registration/BasicInformation';\r\nimport BasicInformationPtTwo from '../Registration/BasicInformationPtTwo';\r\n\r\n\r\nconst styles = theme => ({\r\n    paperForm: {\r\n        width: '25%',\r\n        marginLeft: '7%',\r\n        marginTop: '-15%',\r\n        padding: theme.spacing.unit*2,\r\n        flexDirection: 'column',\r\n        backgroundColor: \"#e0e0e0\",\r\n    },\r\n    icon: {\r\n        margin: theme.spacing.unit,\r\n        fontSize: \"150%\",\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n    TextField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        margin: theme.spacing.unit*2,\r\n    },\r\n    middleInitial: {\r\n        width:\"15%\",\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        margin: theme.spacing.unit*2\r\n    },\r\n    heading: {\r\n        margin: theme.spacing.unit,\r\n        marginLeft: \"70%\",\r\n        marginTop: \"10%\",\r\n        color: \"white\",\r\n    },\r\n});\r\n\r\nclass RegistrationForm extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Sex: \"\",\r\n            Email:\"\",\r\n            username: \"\",\r\n            password: \"\",\r\n            CellNumber: \"\",\r\n            AddressStreet: \"\",\r\n            AddressCity:\"\",\r\n            AddressState: \"\",\r\n            AddressZip: \"\",\r\n            DateOfBirth:\"\",\r\n            SSN: \"\",\r\n            userType: \"\",\r\n            registrationStep: 0,\r\n            raceID: \"\",\r\n            states:[],\r\n            sexes:[],\r\n            roles:[],\r\n            races:[],\r\n            completion: false,\r\n\r\n        };\r\n        this.handleChange=this.handleChange.bind(this);\r\n    }\r\n    moveNextInvalid(){\r\n        return  this.state.FirstName === \"\"||\r\n                this.state.LastName === \"\" ||\r\n                this.state.username === \"\" ||\r\n                this.state.password === \"\" ||\r\n                this.state.Email === \"\"\r\n    }\r\n    RegisterInvalid(){\r\n        return  this.state.Sex === \"\" ||\r\n                this.state.CellNumber.length !== 12 ||\r\n                this.state.AddressStreet === \"\" ||\r\n                this.state.AddressCity === \"\" ||\r\n                this.state.AddressState === \"\" ||\r\n                this.state.AddressZip.length !== 5 ||\r\n                this.state.DateOfBirth.length !== 10 ||\r\n                this.state.SSN.length !== 11 \r\n    }\r\n    componentDidMount(){\r\n        this.uploadStates();\r\n        this.uploadSexes();\r\n        this.uploadRoles();\r\n        this.uploadRaces();\r\n    }\r\n    handleChange = e =>{\r\n        console.log(this.state.userType)\r\n        if(window.localStorage.loggedIn !== \"true\"){\r\n            this.setState({ userType:2})\r\n        }\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    registerUser=()=>{\r\n        //backend call to add the user to the backend\r\n        fetch(`http://162.243.165.50:4000/RegisterUser`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                FirstName: this.state.FirstName,\r\n                LastName: this.state.LastName,\r\n                Sex: this.state.Sex,\r\n                Email: this.state.Email,\r\n                username: this.state.username,\r\n                password: this.state.password,\r\n                CellNumber: this.state.CellNumber,\r\n                AddressStreet: this.state.AddressStreet,\r\n                AddressCity: this.state.AddressCity,\r\n                AddressState: this.state.AddressState,\r\n                AddressZip: this.state.AddressZip,\r\n                DateOfBirth: this.state.DateOfBirth,\r\n                SSN: this.state.SSN,\r\n                userType:this.state.userType,\r\n                raceID: this.state.raceID\r\n            })\r\n        })\r\n        .then(this.setState({completion:true}))\r\n        .catch(err => console.log(err))\r\n        \r\n    }\r\n    \r\n    LoginDirect(){\r\n        window.location.replace('/')\r\n    }\r\n    homeRedirect = () =>{\r\n        window.location.replace('/DoctorRegistration')\r\n    }\r\n    \r\n    stepNext=()=>{\r\n        this.setState(state => ({\r\n            registrationStep:state.registrationStep+1\r\n        }))\r\n    }\r\n\r\n    uploadStates=()=> {\r\n        fetch(`http://162.243.165.50:4000/states`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ states:Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    uploadSexes=()=> {\r\n        fetch(`http://162.243.165.50:4000/sexes`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ sexes:Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    uploadRoles=()=> {\r\n        fetch(`http://162.243.165.50:4000/roles`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ roles:Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    uploadRaces=()=> {\r\n        fetch(`http://162.243.165.50:4000/races`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ races:Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    render(){\r\n        const {classes}=this.props;\r\n        return(\r\n            <div>\r\n                <IconButton onClick={this.homeRedirect}>\r\n                    <HomeLogo style={{color: \"#212121\"}} className={classes.icon} />\r\n                </IconButton>\r\n                <Typography variant=\"h3\" className={classes.heading}>Medical Center Registration</Typography>\r\n                <Paper elevation={10} className={classes.paperForm}>\r\n                    {this.state.registrationStep===0 ? (\r\n                        <div>\r\n                            <BasicInformation handleChange={this.handleChange} val={this.state}/>\r\n                            <FormControl margin=\"normal\" fullWidth >\r\n                                <Button onClick={this.stepNext} disabled={this.moveNextInvalid()}>\r\n                                    Next\r\n                                </Button>\r\n                            </FormControl>\r\n                        </div>\r\n                    ):(\r\n                        <div>\r\n                            <BasicInformationPtTwo handleChange={this.handleChange} val={this.state}/>\r\n                            <FormControl margin=\"normal\" fullWidth >\r\n                                <Button disabled={this.RegisterInvalid()} onClick={this.registerUser}>\r\n                                    Register\r\n                                </Button>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                    )}\r\n                </Paper>\r\n                    {window.localStorage.userType !== \"3\" ? (\r\n                        <Dialog maxWidth=\"md\" open={this.state.completion}>\r\n                            <DialogTitle id=\"form-dialog-title\"></DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText>\r\n                                    Welcome to T7 Clinics {this.state.FirstName}, please proceed to the login page to book your first appointment\r\n                                </DialogContentText>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button onClick={this.LoginDirect} color=\"primary\" fullWidth variant=\"contained\">\r\n                                    Login\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    ):(\r\n                        <Dialog maxWidth=\"md\" open={this.state.completion}>\r\n                            <DialogTitle id=\"form-dialog-title\"></DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText>\r\n                                    Thank you for registering {this.state.FirstName}\r\n                                </DialogContentText>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button onClick={this.homeRedirect} fullWidth color=\"primary\" variant=\"contained\">\r\n                                    Ok\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    )}\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nRegistrationForm.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n  \r\n  export default withStyles(styles)(RegistrationForm);","import React from 'react';\r\nimport RegistrationForm from '../Components/Registration/RegistrationForm';\r\nimport './Home.css';\r\n\r\nclass Registration extends React.Component{\r\n    render() {\r\n        return(\r\n            <div className='Home-image'>\r\n                <div className='Home-overlay'>\r\n                    <RegistrationForm/>\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Registration;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {Paper, Typography, TextField, Divider, Grid} from '@material-ui/core';\r\n\r\n\r\n\r\n//Define the looks\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '75%',\r\n    backgroundColor: \"#e0e0e0\",\r\n    padding: theme.spacing.unit*3,\r\n    height: '98%',\r\n    margin:\"auto\",\r\n    marginTop: '2%',\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField:{\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  dense: {\r\n    marginTop: 19,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n});\r\n\r\n\r\nclass MedicalInformation extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      patientID: '',\r\n      editImmunizationRecord: '',\r\n      editMedicalCondition: '',\r\n      editAllergies: '',\r\n      editProcedureRecord: '',\r\n\r\n    };\r\n  }\r\n\r\ncomponentDidMount(){\r\n  this.getMedicalRecord();\r\n};\r\n\r\ngetMedicalRecord=()=>{\r\n  fetch(`http://162.243.165.50:4000/GetMedicalHistory/${window.localStorage.userID}`)\r\n  .then(result => result.json())\r\n  .then(res => this.setState({\r\n    patientID: res.data[0].PatientID,\r\n    editImmunizationRecord: res.data[0].ImmunizationRecord,\r\n    editMedicalCondition: res.data[0].MedicalCondition,\r\n    editAllergies: res.data[0].Allergies,\r\n    editProcedureRecord: res.data[0].ProcedureRecord\r\n  }))\r\n  .catch(err => console.error(err))\r\n};\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n    return (\r\n      <div>\r\n          <Paper className={classes.root} elevation={2}>\r\n              <Typography variant=\"h3\" >Patient Medical Record</Typography>\r\n              <br />\r\n              <Typography variant=\"h4\" >Summary</Typography>\r\n              <TextField\r\n                label=\"Patient ID\"\r\n                margin=\"normal\"\r\n                className={classes.textField}\r\n                value={this.state.patientID}\r\n                disabled\r\n                onChange={this.handleChange}\r\n              />\r\n              <br/>\r\n              <Grid container spacing={24}>\r\n                <Grid item sm>\r\n                <TextField\r\n                  label=\"Immunization Record\"\r\n                  className={classes.textField}\r\n                  value={this.state.editImmunizationRecord}\r\n                  margine=\"normal\"\r\n                  multiline\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  rows=\"8\"\r\n                  disabled\r\n                  onChange={this.handleChangeImmunizationRecord}\r\n                />\r\n              </Grid>\r\n                <Grid item sm>\r\n                  <TextField\r\n                  label=\"Medical Condition\"\r\n                  className={classes.textField}\r\n                  value={this.state.editMedicalCondition}\r\n                  margine=\"normal\"\r\n                  multiline\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  rows=\"8\"\r\n                  disabled\r\n                  onChange={this.handleChangeMedicalCondition}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              \r\n              <Grid container spacing={24}>\r\n                <Grid item sm>\r\n                <TextField\r\n                  label=\"Allergies\"\r\n                  className={classes.textField}\r\n                  value={this.state.editAllergies}\r\n                  margine=\"normal\"\r\n                  multiline\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  rows=\"8\"\r\n                  disabled\r\n                  onChange={this.handleChangeAllergies}\r\n                />\r\n              </Grid>\r\n                <Grid item sm>\r\n                  <TextField\r\n                  label=\"Procedures Record\"\r\n                  className={classes.textField}\r\n                  value={this.state.editProcedureRecord}\r\n                  margine=\"normal\"\r\n                  multiline\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  rows=\"8\"\r\n                  disabled\r\n                  onChange={this.handleChangeProcedureRecord}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Divider variant=\"middle\"/>\r\n          </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMedicalInformation.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MedicalInformation);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Paper, Divider, Button, TextField, Typography, FormControl, withStyles, Grid } from \"@material-ui/core\";\r\nimport MaskedInput from 'react-text-mask';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst styles = theme => ({\r\n    paperForm: {\r\n        width: '75%',\r\n        display: \"flex\",\r\n        backgroundColor: \"#e0e0e0\",\r\n        padding: theme.spacing.unit*3,\r\n        height: '98%',\r\n        margin:\"auto\",\r\n        marginTop: '2%',\r\n    },\r\n      container: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n      },\r\n      editerButtons: {\r\n        margin: theme.spacing.unit,\r\n        fontSize: 16,\r\n    },\r\n});\r\n\r\n\r\nclass ProfileInfoTest extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            first: \"\",\r\n            last: \"\",\r\n            user: \"\",\r\n            pass: \"\",\r\n            email:\"\",\r\n            cellnumber: \"\",\r\n            streetaddr: \"\",\r\n            cityaddr:\"\",\r\n            stateaddr: \"\",\r\n            zipaddr: \"\",\r\n            dob:\"\",\r\n            ssn: \"\",\r\n            sex: \"\",\r\n            insuranceID: \"\",\r\n            insuranceContact: \"\",\r\n            deduct: \"\",\r\n            company: \"\",\r\n            editing: false\r\n        };\r\n        this.handleChange=this.handleChange.bind(this);\r\n    }\r\n    retrieveUserInfo=()=> {\r\n        if(window.localStorage.userType === \"2\"){\r\n            fetch(`http://162.243.165.50:4000/Patient/${window.localStorage.LoginTableID}`)\r\n            .then(result => result.json())\r\n            .then(res => this.setState( {    first: res.data[0].FirstName,\r\n                                            last: res.data[0].LastName,\r\n                                            user: res.data[0].Username, \r\n                                            pass: res.data[0].Password, \r\n                                            email: res.data[0].Email,\r\n                                            dob: res.data[0].DOB,\r\n                                            ssn: res.data[0].SSN, \r\n                                            sex: res.data[0].SexID, \r\n                                            cellnumber: res.data[0].CellNumber,\r\n                                            streetaddr:res.data[0].AddressStreet,\r\n                                            cityaddr: res.data[0].AddressCity,\r\n                                            stateaddr: res.data[0].AddressStateID,\r\n                                            zipaddr: res.data[0].AddressZip}))\r\n            .catch(err => console.log(err));\r\n        }\r\n        else{\r\n            fetch(`http://162.243.165.50:4000/Employee/${window.localStorage.LoginTableID}`)\r\n            .then(result => result.json())\r\n            .then(res => this.setState( {    first: res.data[0].FirstName,\r\n                                            last: res.data[0].LastName,\r\n                                            user: res.data[0].Username, \r\n                                            pass: res.data[0].Password, \r\n                                            email: res.data[0].Email,\r\n                                            dob: res.data[0].DOB,\r\n                                            ssn: res.data[0].SSN, \r\n                                            sex: res.data[0].SexID, \r\n                                            cellnumber: res.data[0].CellNumber,\r\n                                            streetaddr:res.data[0].AddressStreet,\r\n                                            cityaddr: res.data[0].AddressCity,\r\n                                            stateaddr: res.data[0].AddressStateID,\r\n                                            zipaddr: res.data[0].AddressZip}))\r\n            .catch(err => console.log(err))\r\n        }\r\n    }\r\n    getInsurance(){\r\n            if(window.localStorage.userType === \"2\") {\r\n                fetch(`http://162.243.165.50:4000/Insurance/${window.localStorage.userID}`)\r\n                .then(result => result.json())\r\n                .then(res => this.setState({\r\n                    deduct:res.data[0].Deductible,\r\n                    insuranceID: res.data[0].InsuranceClientID,\r\n                    insuranceContact: res.data[0].ContactNumber,\r\n                    company: res.data[0].Name,\r\n\r\n                }))\r\n                .catch(err => console.log(err))\r\n        }\r\n\r\n    }\r\n    updateUserInfo=()=>{\r\n        //backend call to add the user to the backend\r\n        if(window.localStorage.userType!== \"2\"){\r\n            fetch(`http://162.243.165.50:4000/UpdateUser`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },body: JSON.stringify({\r\n                    UserID: window.localStorage.userID,\r\n                    InsuranceID: 0,\r\n                    FirstName:this.state.first,\r\n                    LastName:this.state.last,\r\n                    Sex: this.state.sex,\r\n                    Email: this.state.email,\r\n                    username: this.state.user,\r\n                    password: this.state.pass,\r\n                    CellNumber: this.state.cellnumber,\r\n                    AddressStreet: this.state.streetaddr,\r\n                    AddressCity: this.state.cityaddr,\r\n                    AddressState: this.state.stateaddr,\r\n                    AddressZip: this.state.zipaddr,\r\n                    userType: window.localStorage.userType,\r\n                    LoginTableID: window.localStorage.LoginTableID,\r\n                    Deductible: 0,\r\n                    Name: \"Name\",\r\n                    ContactNumber: \"000-000-0000\"\r\n                })\r\n            })\r\n        .catch(err => console.log(err))\r\n        }\r\n        else{\r\n            fetch(`http://162.243.165.50:4000/UpdateUser`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },body: JSON.stringify({\r\n                    UserID: window.localStorage.userID,\r\n                    InsuranceID: this.state.insuranceID,\r\n                    FirstName:this.state.first,\r\n                    LastName:this.state.last,\r\n                    Sex: this.state.sex,\r\n                    Email: this.state.email,\r\n                    username: this.state.user,\r\n                    password: this.state.pass,\r\n                    CellNumber: this.state.cellnumber,\r\n                    AddressStreet: this.state.streetaddr,\r\n                    AddressCity: this.state.cityaddr,\r\n                    AddressState: this.state.stateaddr,\r\n                    AddressZip: this.state.zipaddr,\r\n                    userType: window.localStorage.userType,\r\n                    LoginTableID: window.localStorage.LoginTableID,\r\n                    Deductible: this.state.deduct,\r\n                    Name: this.state.company,\r\n                    ContactNumber: this.state.insuranceContact\r\n                })\r\n            })\r\n        .catch(err => console.log(err))\r\n        }\r\n        \r\n        \r\n    }\r\n    EmptyEntries(){\r\n        return  this.state.first === \"\"||\r\n                this.state.last === \"\" ||\r\n                this.state.sex === \"\" ||\r\n                this.state.email === \"\" ||\r\n                this.state.user === \"\" ||\r\n                this.state.pass === \"\" ||\r\n                this.state.cellnumber === \"\" ||\r\n                this.state.streetaddr=== \"\" ||\r\n                this.state.cityaddr === \"\" ||\r\n                this.state.stateaddr === \"\" ||\r\n                this.state.zipaddr === \"\"\r\n    }\r\n    validateUsername(){\r\n        if(this.state.user.length >=6 || this.state.user.length <=1 ){\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n    validatePassword(){\r\n        if(this.state.pass.length >=6 || this.state.pass.length <=1 ){\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n    SSNMaskCustom(props) {\r\n        const {...other } = props;\r\n        return (\r\n          <MaskedInput\r\n            guide={false}\r\n            {...other}\r\n            mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\r\n            placeholderChar={'\\u2000'}\r\n            showMask\r\n          />\r\n        );\r\n    }\r\n    PhoneMaskCustom(props) {\r\n        const {...other } = props;\r\n      \r\n        return (\r\n          <MaskedInput\r\n            {...other}\r\n            guide={false}\r\n            mask={[/[1-9]/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\r\n            placeholderChar={'\\u2000'}\r\n            showMask\r\n          />\r\n        );\r\n    }\r\n    componentDidMount(){\r\n        this.retrieveUserInfo();\r\n        this.getInsurance();\r\n    }\r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    editMode = _ => {\r\n        console.log(this.state)\r\n        this.setState({\r\n            editing: true\r\n        });\r\n    }\r\n    saveChanges = _ => {\r\n        this.updateUserInfo();\r\n        this.setState({\r\n            editing: false\r\n        });\r\n    }\r\n    revertChanges = _ => {\r\n        this.retrieveUserInfo();\r\n        this.setState({\r\n            editing: false\r\n        });\r\n    }\r\n//for implementation of user menu, Paper className will be removed and\r\n// user menu will define css styles. \r\n  render() { \r\n      const {classes}=this.props;\r\n    return (\r\n      <div>\r\n          <Paper className={classes.paperForm}>\r\n            <form  noValidate autoComplete=\"off\">\r\n                <div>\r\n                    {window.localStorage.userType=== \"2\" ? (\r\n                        <Typography variant=\"h5\">Welcome {this.state.first}</Typography>\r\n                    ):(\r\n                        <Typography variant=\"h5\">Welcome Dr. {this.state.last}</Typography>        \r\n                    )}\r\n                    <br/>\r\n                    <Divider variant=\"middle\"/>\r\n                    <br/>\r\n                </div>\r\n                <div>\r\n                    <Typography variant=\"h6\" >User Information</Typography>\r\n                    <Grid container spacing={8}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <FormControl  margin=\"dense\" fullWidth>\r\n                                <TextField disabled={!this.state.editing}\r\n                                    name=\"first\"\r\n                                    label=\"First Name\"\r\n                                    variant=\"outlined\"\r\n                                    value={this.state.first}\r\n                                    defaultValue={this.state.first}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <FormControl  margin=\"dense\" fullWidth>\r\n                                <TextField disabled={!this.state.editing}\r\n                                    name=\"last\"\r\n                                    label=\"Last Name\"\r\n                                    variant=\"outlined\"\r\n                                    value={this.state.last}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={5}>\r\n                            <FormControl  margin=\"dense\" fullWidth>\r\n                                <TextField disabled={!this.state.editing}\r\n                                    name=\"streetaddr\"\r\n                                    label=\"Street Address\"\r\n                                    variant=\"outlined\"\r\n                                    value={this.state.streetaddr}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <FormControl  margin=\"dense\" fullWidth>\r\n                                <TextField disabled={!this.state.editing}\r\n                                    name=\"cityaddr\"\r\n                                    label=\"City\"\r\n                                    variant=\"outlined\"\r\n                                    value={this.state.cityaddr}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={1}>\r\n                            <FormControl  margin=\"dense\" fullWidth>\r\n                                <TextField disabled={!this.state.editing}\r\n                                    name=\"stateaddr\"\r\n                                    label=\"State\"\r\n                                    variant=\"outlined\"\r\n                                    value={this.state.stateaddr}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={2}>\r\n                            <FormControl  margin=\"dense\" fullWidth>\r\n                                <TextField disabled={!this.state.editing}\r\n                                    name=\"zipaddr\"\r\n                                    label=\"Zip Code\"\r\n                                    variant=\"outlined\"\r\n                                    value={this.state.zipaddr}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <FormControl fullWidth margin=\"dense\">\r\n                                <TextField disabled\r\n                                    name=\"dob\"\r\n                                    label=\"Birthdate\"\r\n                                    variant=\"outlined\"\r\n                                    value={this.state.dob.substring(0,10)}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <FormControl fullWidth margin=\"dense\" >\r\n                                <TextField disabled={!this.state.editing}\r\n                                    name=\"cellnumber\"\r\n                                    label=\"Contact Phone\"\r\n                                    variant=\"outlined\"\r\n                                    value={this.state.cellnumber}\r\n                                    inputComponent={this.PhoneMaskCustom(classes)}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <FormControl fullWidth margin=\"dense\" >\r\n                                <TextField disabled\r\n                                    name=\"ssn\"\r\n                                    label=\"Last Four of SSN\"\r\n                                    variant=\"outlined\"\r\n                                    value={this.state.ssn}\r\n                                    inputComponent={this.SSNMaskCustom(classes)}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br/>\r\n                    <Divider variant=\"middle\" />\r\n                    <br/>\r\n                </div> \r\n                { window.localStorage.userType === \"2\" &&\r\n                    <div>\r\n                        <Typography variant=\"h6\">Insurance Information</Typography>\r\n                            <Grid container spacing= {8}>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <FormControl fullWidth margin=\"dense\" >\r\n                                        <TextField disabled={!this.state.editing}\r\n                                            name=\"company\"\r\n                                            label=\"Network\"\r\n                                            variant=\"outlined\"\r\n                                            value={this.state.company}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <FormControl fullWidth margin=\"dense\" >\r\n                                        <TextField disabled={!this.state.editing}\r\n                                            name=\"insuranceID\"\r\n                                            label=\"Insurance ID\"\r\n                                            variant=\"outlined\"\r\n                                            value={this.state.insuranceID}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <FormControl fullWidth margin=\"dense\" >\r\n                                        <TextField disabled={!this.state.editing}\r\n                                            name=\"deduct\"\r\n                                            label=\"Deductible\"\r\n                                            variant=\"outlined\"\r\n                                            value={this.state.deduct}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <FormControl fullWidth margin=\"dense\" >\r\n                                        <TextField disabled={!this.state.editing}\r\n                                            name=\"insuranceContact\"\r\n                                            label=\"Insurance Contact Number\"\r\n                                            variant=\"outlined\"\r\n                                            value={this.state.insuranceContact}\r\n                                            inputComponent={this.PhoneMaskCustom(classes)}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                        <br/>\r\n                        <Divider variant=\"middle\" />\r\n                        <br/>\r\n                    </div>\r\n                }\r\n\r\n                <div>\r\n                    <Typography variant=\"h6\">Account Information</Typography>\r\n                    <Grid container spacing={8}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <FormControl  margin=\"dense\" fullWidth>\r\n                                <TextField disabled={!this.state.editing}\r\n                                    name=\"user\" \r\n                                    label=\"Username\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.user}\r\n                                    error={!this.validateUsername()}\r\n                                    helperText={this.validateUsername() ? \"\":\"Username is not valid\"}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <FormControl  margin=\"dense\" fullWidth>\r\n                                <TextField disabled={!this.state.editing}\r\n                                    name=\"pass\"\r\n                                    type=\"password\" \r\n                                    label=\"Password\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.pass}\r\n                                    error={!this.validatePassword()}\r\n                                    helperText={this.validatePassword() ? \"\":\"Password is not valid\"}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <FormControl margin=\"dense\" fullWidth>\r\n                                <TextField disabled={!this.state.editing}\r\n                                    name=\"email\" \r\n                                    label=\"Email\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.email}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        \r\n                        <br/>\r\n                        <Divider variant=\"middle\"/>\r\n                        <br/>\r\n\r\n                    </Grid>\r\n                </div>\r\n                {!this.state.editing ? (\r\n                    <div>\r\n                        {this.retrieveUserInfo}\r\n                        <FormControl margin=\"none\">\r\n                         <Button variant=\"contained\" size=\"small\" className={classes.editerButtons} onClick={this.editMode}>\r\n                            <EditIcon />\r\n                                Edit\r\n                          </Button>\r\n                        </FormControl>\r\n                      </div>\r\n                  ):(\r\n                      <div>\r\n                          <FormControl margin=\"right\">\r\n                             <Button disabled={this.EmptyEntries()} variant=\"contained\" size=\"small\" className={classes.editerButtons} onClick={this.saveChanges}>\r\n                                <SaveIcon />\r\n                                    Save\r\n                              </Button>\r\n                              </FormControl>\r\n                              <FormControl margin=\"left\">\r\n                             <Button variant=\"contained\" size=\"small\" className={classes.editerButtons} onClick={this.revertChanges} >\r\n                                <CancelIcon />\r\n                                    Revert\r\n                              </Button>\r\n                          </FormControl>\r\n                      </div>\r\n                  )}  \r\n                        {/* //CLOSE HERER */}\r\n            </form>\r\n          </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProfileInfoTest.propTypes={\r\n    classes: PropTypes.object.isRequired\r\n};\r\n//PhoneMaskCustom.propTypes = {\r\n//    inputRef: PropTypes.func.isRequired,\r\n//};\r\nexport default withStyles (styles)(ProfileInfoTest);","import React, { Component } from 'react';\r\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\r\nimport MedicalInformation from '../Components/Profile/MedicalInformation';\r\n//import ProfileInfo from '../Components/Profile/ProfileInfo';\r\nimport { withStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport './Profile.css'\r\nimport ProfileInfoTest from '../Components/Profile/ProfileInfoTest';\r\n\r\nconst styles = theme =>({\r\n\r\n});\r\n\r\nclass Profile extends Component {\r\n  render() { \r\n    return (\r\n      <div className='Profile-image'>\r\n        <NavigationBar title={\"My Profile\"} Tab={1}/>\r\n        <ProfileInfoTest/>\r\n        {window.localStorage.userType === \"2\" &&\r\n        <MedicalInformation/>}\r\n        <br/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProfile.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Profile);\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport WhichFacility from '../Appointments/WhichFacility';\r\n\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n      margin: theme.spacing.unit,\r\n      fontSize: 32,\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing.unit * 3,\r\n        overflowX: 'auto',\r\n      },\r\n      table: {\r\n        minWidth: 800,\r\n      },\r\n});\r\n\r\nclass ModifyFacility extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\topenForm: false,\r\n\t\t\tselectedFacility: \"\",\r\n\t\t\tFacilities: this.props.val.Facilities,\r\n\t\t\tFacilityID: \"\",\r\n\t\t}\r\n\t}\r\n\t\r\n\tcomponentDidMount(){\r\n\t\tthis.setState({FacilityID: this.props.Sub_FacilityID})\r\n        //this.getFacilities();\r\n    }\r\n\t\r\n\t// Get Facility information\r\n\t/*getFacilities=()=> {\r\n        fetch(`http://162.243.165.50:4000/Facilities`)\r\n        .then(result => result.json())\r\n        .then(res => this.setState({ Facilities:res.data }))\r\n        .catch(err => console.log(err))\r\n    };*/\r\n\t\r\n\tgetFacilityIDFromName(lookUpName){\r\n\t\tfor(var i = 0; i < this.state.Facilities.length; i++){\r\n\t\t\tif(this.state.Facilities[i].FacilityName === lookUpName){\r\n\t\t\t\treturn this.state.Facilities[i].FacilityID\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1\r\n\t}\r\n\t\r\n\thandleClickOpen = () => {\r\n        //this.getFacilities();\r\n        this.setState({ Facilities: this.props.val.Facilities,\r\n\t\t\t\t\t\topenForm: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ openForm: false });\r\n    };\r\n\t\r\n\thandleChange = e =>{\r\n        this.setState({\r\n\t\t\t[e.target.name] : e.target.value,\r\n\r\n\t\t})\r\n\t\tvar i;\r\n\t\tfor(i=0; i<this.state.Facilities.length;i++){\r\n\t\t\tif(this.state.Facilities[i].FacilityID === e.target.value){\r\n\t\t\t\tthis.setState({selectedFacility:this.state.Facilities[i].FacilityName})\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n\t\r\n\thandleDoneSelected = () =>{\r\n\t\tif(this.state.selectedFacility !== \"\"){\r\n\t\t\tfor(var i=0; i < this.props.val.WorkSchedule.length; i++){\r\n\t\t\t\tif(this.props.val.WorkSchedule[i].WeekDayID === this.props.Sub_DayID){\r\n\t\t\t\t\tconsole.log(\"Facility: \" + this.state.selectedFacility)\r\n\t\t\t\t\tconsole.log(this.props.val.WorkSchedule[i])\r\n\t\t\t\t\tthis.props.val.WorkSchedule[i].FacilityName = this.state.selectedFacility\r\n\t\t\t\t\tthis.props.val.WorkSchedule[i].FacilityID = this.getFacilityIDFromName(this.state.selectedFacility)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconsole.log(\"UPDATING\")\r\n\t\t\tfetch(`http://162.243.165.50:4000/UpdateWorkScheduleDay/`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                UpdateDayID: this.props.Sub_DayID,\r\n\t\t\t\tEmployeeID: window.localStorage.userID,\r\n\t\t\t\tNewFacilityID: this.getFacilityIDFromName(this.state.selectedFacility)\r\n            })\r\n        })\r\n        .then(this.grabAppointments)\r\n        .catch(err => console.log(err));\r\n\t\t}\r\n\t\tthis.handleClose()\r\n\t\tsetTimeout(function(){\r\n\t\t\twindow.location.replace('/Scheduling')\r\n\t\t}, 200);\r\n\t}\r\n\t\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<Button variant=\"contained\" color=\"inherit\" className={this.props.Button} fullWidth onClick={this.handleClickOpen}>\r\n                    Change Facility\r\n                </Button>\r\n\t\t\t\t<Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\r\n\t\t\t\t\t<DialogTitle id=\"form-dialog-title\"></DialogTitle>\r\n\t\t\t\t\t<DialogContent>\r\n                        <DialogContentText>\r\n                            Please select a new facilty for this weekday\r\n                        </DialogContentText>\r\n                        <WhichFacility val={this.state} handleChange={this.handleChange}/>\r\n                    </DialogContent>\r\n\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t<Button onClick={this.handleDoneSelected} disabled={this.state.FacilityID===\"\"} color=\"primary\">\r\n                            Done\r\n                        </Button>\r\n                    </DialogActions>\r\n\t\t\t\t</Dialog>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nModifyFacility.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ModifyFacility);\r\n\r\n","import { TextField, MenuItem } from \"@material-ui/core\";\r\nimport React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nfunction WhichDay(props){\r\n    \r\n    return(\r\n        <div>\r\n            <FormControl margin=\"normal\" fullWidth>\r\n                    <TextField\r\n                        id=\"DayID\"\r\n                        select\r\n                        label=\"Please Choose A Day\"\r\n                        name=\"DayID\"\r\n                        variant=\"standard\"\r\n                        onChange={props.handleChange}\r\n                        value={props.val.DayID}   \r\n                        required                   \r\n                    >\r\n                        {props.val.OpenDays.map(option => (\r\n                            <MenuItem key={option.DayID} value={option.DayID}>\r\n                                {option.WeekDay}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WhichDay;","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport WhichFacility from '../Appointments/WhichFacility';\r\nimport WhichDay from './WhichDay';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n      margin: theme.spacing.unit,\r\n      fontSize: 32,\r\n    },\r\n});\r\n\r\nclass AddNewDay extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n\t\t\topenForm: false,\r\n\t\t\tFacilities: [],\r\n\t\t\tOpenDays: [],\r\n\t\t\tDayID: -1,\r\n\t\t\tFacilityID: -1,\r\n\t\t}\r\n\t}\r\n\t\r\n\tgetOpenDaysList(){\r\n\t\tvar newDayList = []\r\n\t\tvar shouldAddNew = true\r\n\t\tfor(var i = 0; i < this.props.val.Weekdays.length; i++){\r\n\t\t\tfor(var k = 0; k < this.props.val.WorkSchedule.length; k++){\r\n\t\t\t\tif(this.props.val.WorkSchedule[k].WeekDayID === this.props.val.Weekdays[i].DayID)\r\n\t\t\t\t\tshouldAddNew = false\r\n\t\t\t}\r\n\t\t\tif(shouldAddNew){\r\n\t\t\t\tnewDayList.push(this.props.val.Weekdays[i])\r\n\t\t\t}\r\n\t\t\tshouldAddNew = true\r\n\t\t}\r\n\t\treturn newDayList\r\n\t}\r\n\t\r\n\thandleClickOpen = () => {\r\n        this.setState({ Facilities: this.props.val.Facilities,\r\n\t\t\t\t\t\tOpenDays : this.getOpenDaysList(),\r\n\t\t\t\t\t\topenForm: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ openForm: false,\r\n\t\t\t\t\t\tDayID: -1,\r\n\t\t\t\t\t\tFacilityID: -1 });\r\n    };\r\n\t\r\n\thandleChange = e =>{\r\n        this.setState({\r\n\t\t\t[e.target.name] : e.target.value\r\n        })\r\n    }\r\n\t\r\n\thandleConfirmChange = () => {\r\n\t\tfetch(`http://162.243.165.50:4000/AddNewWorkSchedule/`, {\r\n\t\tmethod:\"POST\",\r\n        headers: {\r\n            \"Content-Type\":\"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n            DayID: this.state.DayID,\r\n\t\t\tEmployeeID: window.localStorage.userID,\r\n\t\t\tFacilityID: this.state.FacilityID\r\n        })})\r\n\t\tconsole.log(\"DayID : \" + this.state.DayID)\r\n\t\tconsole.log(\"EmployeeID : \" + window.localStorage.userID)\r\n\t\tconsole.log(\"FacilityID : \" + this.state.FacilityID)\r\n\t\tthis.handleClose()\r\n\t\tsetTimeout(function(){\r\n\t\t\twindow.location.replace('/Scheduling')\r\n\t\t}, 1000);\r\n\t};\r\n\t\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>\r\n                    Add New Day\r\n                </Button>\r\n                <Dialog open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Add a new day</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Please fill out the information for a new day\r\n                        </DialogContentText>\r\n\t\t\t\t\t\t<WhichFacility val={this.state} handleChange={this.handleChange}/>\r\n\t\t\t\t\t\t<WhichDay val={this.state} handleChange={this.handleChange}/>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n\t\t\t\t\t\t<Button onClick={this.handleConfirmChange} color=\"primary\">\r\n                            Confirm\r\n                        </Button>\r\n                        <Button onClick={this.handleClose} color=\"secondary\">\r\n                            Cancel\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nAddNewDay.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  export default withStyles(styles)(AddNewDay);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Typography, FormControl, withStyles, Grid } from \"@material-ui/core\";\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ModifyFacility from './ModifyFacility';\r\nimport AddNewDay from './AddNewDay';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n//import WhichFacility from '../Appointments/WhichFacility';'\r\n\r\nconst styles = theme => ({\r\n\troot: {\r\n        width: '100%',\r\n        alignItems: \"center\",\r\n        display: \"flex\",\r\n        height: \"100vh\",\r\n        flexDirection: 'column',\r\n        backgroundColor: \"#a09d9d\",\r\n        padding: theme.spacing.unit*3,\r\n        margin:\"auto\",\r\n  \r\n    },\r\n    AdditionButton: {\r\n        marginLeft:\"70%\",\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        backgroundColor: \"#a09d9d\",\r\n        padding: theme.spacing.unit*3,\r\n  \r\n    },\r\n    Button: {\r\n        marginTop: '.5%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '20%',\r\n        flexShrink: 0,\r\n      },\r\n      secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n        flexBasis: '100%',\r\n        margin: 'auto'\r\n      },\r\n});\r\n\r\nclass DaySchedule extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\topenForm: false, // Toggle for dialog box when removing day\r\n\t\t\tselectedDayID: -1, // Selected day for removal assigned when opening remove day box\r\n\t\t\tFacilityID: \"\", // Selected facility to be changed\r\n\t\t\tWorkSchedule: [], // WorkSchedule for specified Employee\r\n            Facilities: [], // All Facility information\r\n            Weekdays: [] // All WeekDay information \r\n        };\r\n\t\tthis.handleChange=this.handleChange.bind(this);\r\n\t}\r\n\t\r\n\tcomponentDidMount(){\r\n        this.grabWorkSchedule();\r\n\t\tthis.getFacilities();\r\n\t\tthis.getWeekday();\r\n    }\r\n\t\r\n\t// Get the WorkSchedule list for specified employee\r\n\tgrabWorkSchedule=()=>{\r\n\t\tfetch(`http://162.243.165.50:4000/WorkSchdule/${window.localStorage.userID}`)\r\n        .then(result => result.json())\r\n        .then(res => this.setState({ WorkSchedule:res.data[0]}))\r\n        .catch(err => console.log(err));\r\n\t}\r\n\t\r\n\t// Get Facility information\r\n\tgetFacilities=()=> {\r\n        fetch(`http://162.243.165.50:4000/Facilities`)\r\n        .then(result => result.json())\r\n        .then(res => this.setState({ Facilities:res.data }))\r\n        .catch(err => console.log(err))\r\n    };\r\n\t\r\n\t// Get Weekday information\r\n\tgetWeekday=()=> {\r\n        fetch(`http://162.243.165.50:4000/Weekday`)\r\n        .then(result => result.json())\r\n        .then(res => this.setState({ Weekdays:res.data }))\r\n        .catch(err => console.log(err))\r\n    };\r\n\t\r\n\thandleChange = panel => (event, expanded) => {\r\n        this.setState({\r\n            expanded: expanded ? panel : false,\r\n        });\r\n    }\r\n\t\r\n\thandleClickOpen = (dayID) => {\r\n\t\tthis.setState({selectedDayID: dayID});\r\n        this.setState({ openForm: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ openForm: false });\r\n    };\r\n\t\r\n\thandleConfirmRemove = () => {\r\n\t\tconsole.log(this.state.selectedDayID)\r\n\t\tconsole.log(this.state.WorkSchedule)\r\n\t\tfetch(`http://162.243.165.50:4000/RemoveWorkScheduleDay/`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                RemoveDayID: this.state.selectedDayID,\r\n\t\t\t\tEmployeeID: window.localStorage.userID,\r\n            })\r\n        })\r\n        .then(this.grabAppointments)\r\n        .catch(err => console.log(err));\r\n\t\tthis.handleClose()\r\n\t\tsetTimeout(function(){\r\n\t\t\twindow.location.replace('/Scheduling')\r\n\t\t}, 200);\r\n\t}\r\n\t\r\n\tgetDayName(dayID){\r\n\t\tfor(var i = 0; i < this.state.Weekdays.length; i++){\r\n\t\t\tif(this.state.Weekdays[i].DayID === dayID){\r\n\t\t\t\treturn this.state.Weekdays[i].WeekDay\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\trender(){\r\n\t\tconst {classes}=this.props;\r\n\t\tconst { expanded } = this.state;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className={classes.root}>\r\n\t\t\t\t\t{this.state.WorkSchedule.map(option => (\r\n\t\t\t\t\t\t<FormControl key={option.WeekDayID} fullWidth>\r\n\t\t\t\t\t\t\t<ExpansionPanel square expanded={expanded === option.WeekDayID}  onChange={this.handleChange(option.WeekDayID)}>\r\n\t\t\t\t\t\t\t\t<ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n\t\t\t\t\t\t\t\t\t<Typography className={classes.heading}>Day:  <b>{option.WeekDay}</b></Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography className={classes.heading}>Facility:  <b>{option.FacilityName}</b></Typography>\r\n\t\t\t\t\t\t\t\t</ExpansionPanelSummary>\r\n\t\t\t\t\t\t\t\t<ExpansionPanelDetails>\r\n\t\t\t\t\t\t\t\t\t<Typography className={classes.secondaryHeading}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid container spacing={8}>\r\n\t\t\t\t                            <Grid item xs={12} sm={9}>\r\n                                                <ModifyFacility  val={this.state} Button={classes.Button} Sub_DayID={option.WeekDayID} Sub_FacilityID={option.FacilityID}/>\r\n                                            </Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm={3}>\r\n                                                <Button fullWidth variant=\"contained\" className={classes.Button} onClick={()=>this.handleClickOpen(option.WeekDayID)} color=\"secondary\" marginTop=\"10%\">\r\n                                                    Remove Day\r\n                                                </Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogTitle id=\"form-dialog-title\"></DialogTitle>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogContent>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogContentText>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAre you sure you want to remove {this.getDayName(this.state.selectedDayID)} from your Schedule?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DialogContentText>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</DialogContent>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button className={classes.Button} onClick={this.handleClose} color=\"primary\" variant=\"contained\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNo\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button className={classes.Button} onClick={this.handleConfirmRemove} color=\"secondary\" variant=\"contained\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tYes\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</DialogActions>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Dialog>\r\n                                            </Grid>\r\n                                        </Grid>\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</ExpansionPanelDetails>\r\n\t\t\t\t\t\t\t</ExpansionPanel>\r\n\t\t\t\t\t\t</FormControl>\t\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<div className={classes.AdditionButton}>\r\n                        <AddNewDay val={this.state} Button={classes.Button}/>\r\n                    </div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nDaySchedule.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DaySchedule);","import React, { Component } from 'react';\r\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\r\nimport DaySchedule from '../Components/Scheduling/DaySchedule';\r\n\r\nclass Scheduling extends Component {\r\n  render() { \r\n    return (\r\n      <div>\r\n        <NavigationBar title={\"My Schedule\"} Tab={2}/>\r\n        <DaySchedule/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Scheduling;\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles, Typography, Checkbox, FormControlLabel } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nconst styles = theme =>({\r\n    Button: {\r\n        marginTop: '2%',\r\n    },\r\n});\r\n\r\n\r\nclass FacilityReports extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            openForm: false,\r\n            checkAllDates: false,\r\n            ChosenFacility: \"\",\r\n            MinimumDate: null,\r\n            MaximumDate: null,\r\n            MinimumDateDB: \"null\",\r\n            MaximumDateDB: \"null\",\r\n            Facilities: [],\r\n            Report:[],\r\n\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.uploadFacilities();\r\n    }\r\n    uploadDoctors(){\r\n\r\n    }\r\n    fetchFacilityReport(){\r\n        \r\n        fetch(`http://162.243.165.50:4000/FacilityAppointmentReport/${this.state.ChosenFacility}/${this.state.MinimumDateDB}/${this.state.MaximumDateDB}`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Report:Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    fetchDoctorReport(){\r\n        fetch(`http://162.243.165.50:4000/DoctorReport/${this.state.ChosenFacility}`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ DoctorsCount:Response.data[0].Count }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    uploadFacilities(){\r\n        fetch(`http://162.243.165.50:4000/Facilities`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Facilities:Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    MinDateChange = (d) =>{\r\n        let ApptDate=new Date(d)\r\n        ApptDate = this.FormatDate(ApptDate);\r\n        this.setState({MinimumDateDB:ApptDate});\r\n        this.setState({\r\n            MinimumDate: d\r\n        })\r\n    }\r\n    MaxDateChange = (d) =>{\r\n        let ApptDate=new Date(d)\r\n        ApptDate = this.FormatDate(ApptDate);\r\n        this.setState({MaximumDateDB:ApptDate});\r\n        this.setState({\r\n            MaximumDate: d\r\n        })\r\n    }\r\n    FormatDate=(date)=>{\r\n        date = date.getFullYear() + '-' + (this.fixMonth(date)) + '-' + date.getDate();\r\n        return date;\r\n    }\r\n\r\n    fixMonth=(date)=>{\r\n        if(date.getMonth() + 1 < 10){\r\n            return \"0\" +(date.getMonth() +1);\r\n        }\r\n        else{\r\n            return date.getMonth()+1;\r\n        }\r\n    }\r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    handlechoseChange = name => event =>{\r\n        this.setState({ \r\n            [name]: event.target.checked,\r\n            MinimumDate: null,\r\n            MaximumDate: null,\r\n            MinimumDateDB: \"null\",\r\n            MaximumDateDB: \"null\"});\r\n      };\r\n    handleClickOpen = () => {\r\n        this.fetchFacilityReport();\r\n        this.setState({ openForm: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ \r\n            openForm: false,\r\n            checkAllDates: false,\r\n            ChosenFacility: \"\",\r\n            MinimumDate: null,\r\n            MaximumDate: null,\r\n            MinimumDateDB: \"null\",\r\n            MaximumDateDB: \"null\", \r\n            Report:[],\r\n        });\r\n    };\r\n    render(){\r\n        const {classes} = this.props;\r\n        return(\r\n            <div>\r\n            <Typography variant=\"h5\">Facility Report</Typography>\r\n                <FormControl margin=\"normal\" fullWidth>\r\n                    <TextField\r\n                        id=\"ChosenFacility\"\r\n                        select\r\n                        label=\"Please Choose A Facility\"\r\n                        name=\"ChosenFacility\"\r\n                        variant=\"standard\"\r\n                        onChange={this.handleChange}\r\n                        value={this.state.ChosenFacility}   \r\n                        required                   \r\n                    >\r\n                        <MenuItem key=\"-1\" value=\"-1\">\r\n                            All Facilities\r\n                        </MenuItem>\r\n                        {this.state.Facilities.map(option => (\r\n                            <MenuItem key={option.FacilityID} value={option.FacilityID}>\r\n                                {option.FacilityName}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                </FormControl>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox\r\n                        checked={this.state.checkAllDates}\r\n                        onChange={this.handlechoseChange('checkAllDates')}\r\n                        value=\"checkAllDates\"\r\n                        />\r\n                    }\r\n                    label=\"Generate Report for all Dates\"\r\n                />\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <DatePicker\r\n                        label=\"From Date\"\r\n                        name=\"MinimumDate\"\r\n                        value={this.state.MinimumDate}\r\n                        onChange={this.MinDateChange}\r\n                        fullWidth\r\n                        disabled={this.state.checkAllDates}\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <DatePicker\r\n                        label=\"To Date\"\r\n                        name=\"MaximumDate\"\r\n                        value={this.state.MaximumDate}\r\n                        onChange={this.MaxDateChange}\r\n                        fullWidth\r\n                        disabled={this.state.checkAllDates}\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n                <Button variant=\"contained\" color=\"inherit\" fullWidth className={classes.Button} onClick={this.handleClickOpen} disabled={((this.state.MinimumDate === null || this.state.MaximumDate === null) && !this.state.checkAllDates) || this.state.ChosenFacility === \"\"}>\r\n                    Show reports for the Chosen Facility\r\n                </Button>\r\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Here is the Facility Report</DialogTitle>\r\n                    <DialogContent>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>FacilityID</TableCell>\r\n                                    <TableCell align=\"center\">Number of Doctors</TableCell>\r\n                                    <TableCell align=\"center\">Upcoming Appointments</TableCell>\r\n                                    <TableCell align=\"center\">Cancelled Appointments</TableCell>\r\n                                    <TableCell align=\"center\">Completed Appointments</TableCell>\r\n                                    <TableCell align=\"center\">Total Appointments</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {this.state.Report.map(Each => (\r\n                                    <TableRow key={Each.FacilityID}>\r\n                                        <TableCell align=\"center\">{Each.FacilityID}</TableCell>\r\n                                        <TableCell align=\"center\">{Each.DoctorsWorking}</TableCell>\r\n                                        <TableCell align=\"center\">{Each.UpcomingApps}</TableCell>\r\n                                        <TableCell align=\"center\">{Each.CancelledApps}</TableCell>\r\n                                        <TableCell align=\"center\">{Each.CompletedApps}</TableCell>\r\n                                        <TableCell align=\"center\">{Each.totalApps}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>                        \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nFacilityReports.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  \r\nexport default withStyles(styles)(FacilityReports);\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles, Typography, Checkbox, FormControlLabel } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nconst styles = theme =>({\r\n    Button: {\r\n        marginTop: '2%',\r\n    },\r\n});\r\n\r\n\r\nclass DoctorsReport extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            openForm: false,\r\n            checkAllDates: false,\r\n            ChosenDoctor: \"\",\r\n            MinimumDate: null,\r\n            MaximumDate: null,\r\n            MinimumDateDB: \"null\",\r\n            MaximumDateDB: \"null\",\r\n            Doctors: [],\r\n            Report:[],\r\n\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.uploadDoctors();\r\n    }\r\n    fetchDoctorReport(){\r\n        fetch(`http://162.243.165.50:4000/DoctorReport/${this.state.ChosenDoctor}/${this.state.MinimumDateDB}/${this.state.MaximumDateDB}`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Report:Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    uploadDoctors(){\r\n        fetch(`http://162.243.165.50:4000/AllDoctors`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Doctors:Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    MinDateChange = (d) =>{\r\n        let ApptDate=new Date(d)\r\n        ApptDate = this.FormatDate(ApptDate);\r\n        this.setState({MinimumDateDB:ApptDate});\r\n        this.setState({\r\n            MinimumDate: d\r\n        })\r\n    }\r\n    MaxDateChange = (d) =>{\r\n        let ApptDate=new Date(d)\r\n        ApptDate = this.FormatDate(ApptDate);\r\n        this.setState({MaximumDateDB:ApptDate});\r\n        this.setState({\r\n            MaximumDate: d\r\n        })\r\n    }\r\n    FormatDate=(date)=>{\r\n        date = date.getFullYear() + '-' + (this.fixMonth(date)) + '-' + date.getDate();\r\n        return date;\r\n    }\r\n\r\n    fixMonth=(date)=>{\r\n        if(date.getMonth() + 1 < 10){\r\n            return \"0\" +(date.getMonth() +1);\r\n        }\r\n        else{\r\n            return date.getMonth()+1;\r\n        }\r\n    }\r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    handlechoseChange = name => event =>{\r\n        this.setState({ \r\n            [name]: event.target.checked,\r\n            MinimumDate: null,\r\n            MaximumDate: null,\r\n            MinimumDateDB: \"null\",\r\n            MaximumDateDB: \"null\"});\r\n      };\r\n    handleClickOpen = () => {\r\n        this.fetchDoctorReport();\r\n        this.setState({ openForm: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ \r\n            openForm: false,\r\n            checkAllDates: false,\r\n            ChosenDoctor: \"\",\r\n            MinimumDate: null,\r\n            MaximumDate: null,\r\n            MinimumDateDB: \"null\",\r\n            MaximumDateDB: \"null\", \r\n            Report:[],\r\n        });\r\n    };\r\n    render(){\r\n        const {classes} = this.props;\r\n        return(\r\n            <div>\r\n            <Typography variant=\"h5\">Doctor Report</Typography>\r\n                <FormControl margin=\"normal\" fullWidth>\r\n                    <TextField\r\n                        id=\"ChosenDoctor\"\r\n                        select\r\n                        label=\"Please Choose A Facility\"\r\n                        name=\"ChosenDoctor\"\r\n                        variant=\"standard\"\r\n                        onChange={this.handleChange}\r\n                        value={this.state.ChosenDoctor}   \r\n                        required                   \r\n                    >\r\n                        <MenuItem key=\"-1\" value=\"-1\">\r\n                            All Doctors\r\n                        </MenuItem>\r\n                        {this.state.Doctors.map(option => (\r\n                            <MenuItem key={option.EmployeeID} value={option.EmployeeID}>\r\n                                Dr. {option.FirstName} {option.LastName}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                </FormControl>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox\r\n                        checked={this.state.checkAllDates}\r\n                        onChange={this.handlechoseChange('checkAllDates')}\r\n                        value=\"checkAllDates\"\r\n                        />\r\n                    }\r\n                    label=\"Generate Report for all Dates\"\r\n                />\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <DatePicker\r\n                        label=\"From Date\"\r\n                        name=\"MinimumDate\"\r\n                        value={this.state.MinimumDate}\r\n                        onChange={this.MinDateChange}\r\n                        fullWidth\r\n                        disabled={this.state.checkAllDates}\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <DatePicker\r\n                        label=\"To Date\"\r\n                        name=\"MaximumDate\"\r\n                        value={this.state.MaximumDate}\r\n                        onChange={this.MaxDateChange}\r\n                        fullWidth\r\n                        disabled={this.state.checkAllDates}\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n                <Button variant=\"contained\" color=\"inherit\" fullWidth className={classes.Button} onClick={this.handleClickOpen} disabled={((this.state.MinimumDate === null || this.state.MaximumDate === null) && !this.state.checkAllDates) || this.state.ChosenDoctor === \"\"}>\r\n                    Show reports for the Chosen Doctor\r\n                </Button>\r\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Here is the Doctor Report</DialogTitle>\r\n                    <DialogContent>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">EmployeeID</TableCell>\r\n                                    <TableCell align=\"center\">Number of Appointments</TableCell>\r\n                                    <TableCell align=\"center\">Number of Diagnoses</TableCell>\r\n                                    <TableCell align=\"center\">Number of Cancelled Appointments</TableCell>\r\n                                    <TableCell align=\"center\">Number of Days Working in a week</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {this.state.Report.map(Each => (\r\n                                    <TableRow key={Each.EmployeeID}>\r\n                                        <TableCell align=\"center\">{Each.EmployeeID}</TableCell>\r\n                                        <TableCell align=\"center\">{Each.Apps}</TableCell>\r\n                                        <TableCell align=\"center\">{Each.Diagnoses}</TableCell>\r\n                                        <TableCell align=\"center\">{Each.CancelledApps}</TableCell>\r\n                                        <TableCell align=\"center\">{Each.DaysWorking}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>                        \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nDoctorsReport.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  \r\nexport default withStyles(styles)(DoctorsReport);\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles, Typography,} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst styles = theme =>({\r\n    Button: {\r\n        marginTop: '2%',\r\n    },\r\n});\r\n\r\n\r\nclass CheckUpReport extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            Report: [],\r\n        };\r\n    }\r\n    fetchCheckUps(){\r\n        fetch(`http://162.243.165.50:4000/CheckUp`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Report:Response.data }))\r\n        .catch(err => console.log(err))\r\n    };\r\n \r\n    handleClickOpen = () => {\r\n        this.fetchCheckUps();\r\n        this.setState({ openForm: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ \r\n            Report: [],\r\n            openForm:false,\r\n        });\r\n    };\r\n    render(){\r\n        const {classes} = this.props;\r\n        return(\r\n            <div>\r\n            <Typography variant=\"h5\">Six Month Check Up Report</Typography>\r\n               \r\n                <Button variant=\"contained\" color=\"inherit\" fullWidth className={classes.Button} onClick={this.handleClickOpen}>\r\n                    Show Patients Who need a 6-Month CheckUp\r\n                </Button>\r\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Patients that need to be contacted</DialogTitle>\r\n                    <DialogContent>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">Name </TableCell>\r\n                                    <TableCell align=\"center\">Contact Number</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                        {this.state.Report.map(Each => (\r\n                                            <TableRow key={Each.FirstName}>\r\n                                                <TableCell align=\"center\">{Each.FirstName} {Each.LastName}</TableCell>\r\n                                                <TableCell align=\"center\">{Each.CellNumber}</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                \r\n                            </TableBody>\r\n                        </Table>                        \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nCheckUpReport.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  \r\nexport default withStyles(styles)(CheckUpReport);\r\n","import React, { Component } from 'react';\r\nimport FacilityReports from '../Report/FacilityReports';\r\nimport { Paper, withStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport DoctorsReport from './DoctorsReport';\r\nimport CheckUpReport from './CheckUpReport';\r\n\r\nconst styles = theme =>({\r\n    root: {\r\n        width: '55%',\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        padding: theme.spacing.unit*3,\r\n        marginTop:\"5%\",\r\n        marginBottom:\"5%\",\r\n        margin:\"auto\"\r\n  \r\n    },\r\n    checkUp: {\r\n      width: '55%',\r\n      display: \"flex\",\r\n      flexDirection: 'column',\r\n      padding: theme.spacing.unit*3,\r\n      marginTop:\"5%\",\r\n      marginBottom:\"5%\",\r\n      margin:\"auto\"\r\n\r\n  },\r\n});\r\n\r\nclass ReportsGenerator extends Component {\r\n  render() { \r\n    const{classes}=this.props;\r\n    return (\r\n      <div>\r\n          <Paper className={classes.root}>\r\n            <FacilityReports/>\r\n          </Paper>\r\n          <Paper className={classes.root}>\r\n            <DoctorsReport/>\r\n          </Paper>\r\n          <Paper className={classes.checkUp}>\r\n            <CheckUpReport/>\r\n          </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReportsGenerator.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  \r\nexport default withStyles(styles)(ReportsGenerator);\r\n","import React, { Component } from 'react';\r\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\r\nimport ReportsGenerator from '../Components/Report/ReportsGenerator';\r\nimport '../Components/Report/Report.css';\r\n\r\nclass Report extends Component {\r\n  render() { \r\n    return (\r\n      <div className='ReportsPage-image'><div/>\r\n        <div className='ReportsPage-overlay'>\r\n          <NavigationBar title={\"Analytical Reports\"} Tab={3}/>\r\n          <ReportsGenerator/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Report;\r\n","import React from 'react';\r\nimport RegistrationForm from '../Components/Registration/RegistrationForm';\r\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\r\nimport './Home.css';\r\n\r\nclass DoctorRegistration extends React.Component{\r\n    render() {\r\n        return(\r\n            <div className='Home-image'>\r\n                <div className='Home-overlay'>\r\n                    <NavigationBar title={\"Register A New User\"} Tab={4}/>\r\n                    <RegistrationForm/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default DoctorRegistration;","import React from 'react';\r\nimport { GoogleApiWrapper, Marker, Map } from 'google-maps-react';\r\n\r\n\r\nexport class Mapper extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    const { lat, lng } = this.props.initialCenter;\r\n    this.state = {\r\n      currentLocation: {\r\n        lat: lat,\r\n        lng: lng\r\n      },\r\n      isCurrMarkerShown:false,\r\n      showingInfoWindow: false,\r\n      activeMarker: {},\r\n      selectedPlace: {},\r\n      Facilities: [],\r\n      FacilitiesGeoCode:[],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n      //upon initialization, get browser geolocation\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(\r\n          position => {\r\n            this.setState(prevState => ({\r\n              currentLocation: {\r\n                ...prevState.currentLatLng,\r\n                lat: position.coords.latitude,\r\n                lng: position.coords.longitude\r\n              },\r\n              isCurrMarkerShown: true\r\n            }))\r\n          }\r\n        )\r\n      } else {\r\n        console.log(\"Failed to mount current location\")\r\n      }\r\n  }\r\n \r\n  onMarkerClick = (props, marker, e) =>\r\n    this.setState({\r\n      selectedPlace: props,\r\n      activeMarker: marker,\r\n      showingInfoWindow: true,\r\n  });\r\n\r\n  onClose = props => {\r\n        if (this.state.showingInfoWindow) {\r\n          this.setState({\r\n            showingInfoWindow: false,\r\n            activeMarker: null\r\n          });\r\n        }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Map google={this.props.google}\r\n          style={{width: '100vw', height: '100vh', position: 'center', margin: 'auto'}}\r\n          className={'map'}\r\n          zoom={12}\r\n          center={{\r\n            lat: this.state.currentLocation.lat,\r\n            lng: this.state.currentLocation.lng\r\n          }}\r\n        >\r\n          <Marker\r\n                name={'Your location'}\r\n                onClick={this.onMarkerClick}\r\n                position={{\r\n                  lat: this.state.currentLocation.lat,\r\n                  lng: this.state.currentLocation.lng\r\n                }}\r\n          />\r\n          <Marker\r\n                name={'Your location'}\r\n                onClick={this.onMarkerClick}\r\n                position={{\r\n                  lat: '29.705566',\r\n                  lng: '-95.474180'\r\n                }}\r\n          />\r\n          <Marker\r\n                name={'Your location'}\r\n                onClick={this.onMarkerClick}\r\n                position={{\r\n                  lat: '29.761526',\r\n                  lng: '-95.365127'\r\n                }}\r\n          />\r\n          <Marker\r\n                name={'Your location'}\r\n                onClick={this.onMarkerClick}\r\n                position={{\r\n                  lat: '29.760987',\r\n                  lng: '-95.367759'\r\n                }}\r\n          />\r\n        </Map>\r\n      </div>\r\n      )\r\n   }\r\n}\r\n\r\n//initial centering positioned at UH.\r\nMapper.defaultProps = {\r\n  zoom: 14,\r\n  initialCenter: {\r\n    lat: -29.41,\r\n    lng: 95.38\r\n  },\r\n  centerAroundCurrentLocation: false,\r\n  visible: true\r\n};\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyDKOXGgce4aWbeOHVnhgD8S0NJJph3ShCc'\r\n})(Mapper)\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport HomeLogo  from '@material-ui/icons/KeyboardArrowLeftRounded';\r\nimport { Mapper } from '../Components/Locator/Mapper';\r\n\r\nconst styles = theme => ({\r\n    background: {\r\n      backgroundImage: '../Components/Home/BackgroundPicture.jpg',\r\n      /* Full height */\r\n      height: '100vh',\r\n      /* Center and scale the image nicely */\r\n      backgroundPosition: 'center',\r\n      backgroundRepeat: 'repeat',\r\n      backgroundSize: 'cover',\r\n    },\r\n    mapContainer: {\r\n      width: '100vw',\r\n      height: '100vh',\r\n      flexDirection: 'column',\r\n      backgroundColor: \"#a09d9d\",\r\n      margin:\"auto\",\r\n      display: 'flex',\r\n\r\n    },\r\n    icon: {\r\n      fontSize: \"150%\",\r\n  },\r\n});\r\n\r\nexport class Locator extends React.Component {\r\n\r\n  redirect(){\r\n    if(window.localStorage.loggedIn !== \"true\"){\r\n      window.location.replace('/')\r\n    }\r\n    else{\r\n      window.location.replace('/Appointments')\r\n    }\r\n  }\r\n  render() { \r\n    const{classes}=this.props;\r\n    return (\r\n      <div className={classes.mapContainer}>\r\n      <Mapper/>\r\n        <IconButton onClick={this.redirect}>\r\n            <HomeLogo style={{color: \"#212121\"}} className={classes.icon} />\r\n        </IconButton>\r\n         \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLocator.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Locator);","import React, { Component } from 'react';\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport {Route} from 'react-router-dom';\r\nimport Home from './Pages/Home';\r\nimport Appointments from './Pages/Appointments';\r\nimport Registration from './Pages/Registration';\r\nimport Profile from './Pages/Profile';\r\nimport Scheduling from './Pages/Scheduling';\r\nimport Report from './Pages/Report';\r\nimport DoctorRegistration from './Pages/DoctorRegistration';\r\nimport Locator from './Pages/Locator';\r\n\r\nclass Paths extends Component{\r\n    state = {\r\n        loggedIn: true,\r\n    }\r\n    render() {\r\n        return(\r\n            <BrowserRouter>\r\n                <div className=\"Routes\">\r\n                    <Route path=\"/\" exact component={Home}/>\r\n                    <Route path=\"/Appointments\" exact component={Appointments}/>\r\n                    <Route path=\"/Registration\" exact component={Registration}/>\r\n                    <Route path=\"/Profile\" exact component={Profile}/>\r\n                    <Route path=\"/Locator\" exact component={Locator}/>\r\n                    <Route path=\"/Scheduling\" exact component={Scheduling}/>\r\n                    <Route path=\"/Reports\" exact component={Report}/>\r\n                    <Route path=\"/DoctorRegistration\" exact component={DoctorRegistration}/>\r\n                </div>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Paths;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Paths from './Paths';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Paths />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}