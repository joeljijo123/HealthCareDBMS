{"version":3,"sources":["Components/GeneralComponents/NavigationBar.js","Components/Home/HomeLoginBox.js","Pages/Home.js","Components/Appointments/WhichFacility.js","Components/Appointments/WhichDoctor.js","Components/Appointments/CompleteNewAppointment.js","Components/Appointments/NewAppointmentForm.js","Components/Appointments/AddDiagnosis.js","Components/Appointments/ShowDiagnosis.js","Components/Appointments/ShowPrescriptions.js","Components/Appointments/AddPrescription.js","Components/Appointments/AddSpecilaistReccomendation.js","Components/Appointments/PatientMedicalHistory.js","Components/Appointments/AppointmentHistory.js","Pages/Appointments.js","Components/Registration/BasicInformation.js","Components/Registration/BasicInformationPtTwo.js","Components/Registration/RegistrationForm.js","Pages/Registration.js","Components/Profile/MedicalInformation.js","Components/Profile/ProfileInfo.js","Pages/Profile.js","Components/Scheduling/ModifyFacility.js","Components/Scheduling/WhichDay.js","Components/Scheduling/AddNewDay.js","Components/Scheduling/DaySchedule.js","Pages/Scheduling.js","Components/Report/FacilityReports.js","Components/Report/DoctorsReport.js","Components/Report/ReportsGenerator.js","Pages/Report.js","Pages/DoctorRegistration.js","Paths.js","serviceWorker.js","index.js"],"names":["NavigationBar","state","loggedIn","userid","userType","currentTab","_this","props","Tab","AppointmentPageRedirect","window","location","replace","ProfilePageRedirect","SchedulePageRedirect","ReportPageRedirect","DocRegistrationRedirect","logout","setState","localStorage","setItem","storageLoggedIn","getItem","userID","this","_this$props","classes","title","react_default","a","createElement","className","root","AppBar_default","bar","position","Toolbar_default","Typography_default","variant","BarTitle","index_es","textColor","value","label","onClick","React","Component","withStyles","flexGrow","marginTop","backgroundColor","minHeight","height","MenuIcon","marginLeft","marginRight","HomeLoginBox","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","defineProperty","target","name","handleRegistration","login","fetch","concat","Username","then","result","json","res","data","length","Password","password","LoginTableID","setUserType","catch","err","console","log","firstName","bind","assertThisInitialized","_this2","RoleID","EmployeeID","updateAppTimes","PatientID","Paper_default","elevation","component","form","FormControl_default","margin","fullWidth","required","htmlFor","autoFocus","onChange","type","submitButton","color","size","theme","width","alignItems","display","flexDirection","padding","spacing","unit","Home","GeneralComponents_NavigationBar","Home_HomeLoginBox","WhichFacility","id","select","val","FacilityID","Facilities","map","option","key","FacilityName","WhichDoctor","DoctorID","Doctors","FirstName","Reason","inputProps","maxLength","material_ui_pickers_esm","utils","DateFnsUtils","minDate","Date","AppointmentDate","AppointmentDateChange","container","flexWrap","textField","AppointmentTimeID","AppointmentTimes","TimeSlotID","AppointmentTime","NewAppointmentForm","componentDidMount","uploadFacilities","handleClickOpen","openForm","handleClose","step","DBFormattedDate","d","ApptDate","FormatDate","date","getFullYear","fixMonth","getDate","getMonth","Response","uploadDoctors","Specialist","uploadTimes","method","headers","Content-Type","body","JSON","stringify","AppDate","handleNextStep","handleSubmit","TimeID","setTimeout","handleBackStep","Appointments_WhichFacility","Button_default","disabled","Appointments_WhichDoctor","Appointments_CompleteNewAppointment","Button","ControlPointOutlined_default","icon","Dialog_default","open","onClose","DialogTitle_default","DialogContent_default","DialogContentText_default","getStepInfo","DialogActions_default","fontSize","&:hover","AddDiagnosis","handleDiagnosisAdd","AppointmentID","Diagnosis","AppID","ShowDiagnosis","uploadDiagnosis","maxWidth","Table_default","table","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","Each","DiagnosisID","scope","overflowX","minWidth","ShowPrescriptions","uploadPrescriptions","Prescriptions","PrescriptionIssueID","RefillLeft","DueDate","substr","Medicine","AddPrescription","uploadMedicineTypes","PrescriptionID","DBDueDate","Refills","DueDateChange","MedicineTypes","_this3","AddSpecialistReccomendation","handleSpecialistAdd","Specialists","uploadSpecialists","LastName","PatientMedicalHistory","getMedicalRecord","allergies","Allergies","immunizationRecord","ImmunizationRecord","medicalCondition","MedicalCondition","procedureRecord","ProcedureRecord","error","editing","editMode","saveChange","patientID","lastUpdatedBy","updateMedicalRecord","ChromeReaderMode_default","fullScreen","dialog","item","sm","multiline","rows","button","dense","menu","AppointmentHistory","grabAppointments","UserType","UserID","Appointments","panel","event","expanded","handleAppointmentCancel","handleClickOpenCancellation","apptID","selectedAppt","handleCloseCancellation","cancelApptShow","page","idAppointment","ExpansionPanel_default","square","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","heading","Patient","Doctor","currentStatus","ExpansionPanelDetails_default","secondaryHeading","Street","City","State","ZipCode","xs","Appointments_AddDiagnosis","AddSpecilaistReccomendation","Appointments_AddPrescription","Appointments_ShowDiagnosis","Appointments_PatientMedicalHistory","Appointments_ShowPrescriptions","Appointments_NewAppointmentForm","AdditionButton","typography","pxToRem","flexBasis","flexShrink","iconHistory","palette","text","secondary","Appointments_AppointmentHistory","validatePassword","BasicInformation","username","helperText","roles","RoleTitle","Email","TextMaskCustom","other","esm_extends","reactTextMask_default","assign","guide","mask","placeholderChar","showMask","DateMaskCustom","SSNMaskCustom","BasicInformationPtTwo","AddressStreet","AddressCity","AddressState","states","StateID","StateString","AddressZip","placeholder","DateOfBirth","inputComponent","Sex","sexes","SexID","Gender","raceID","races","RaceID","Race","SSN","CellNumber","RegistrationForm","registerUser","homeRedirect","stepNext","registrationStep","uploadStates","uploadSexes","uploadRoles","uploadRaces","IconButton_default","icons_Home_default","style","paperForm","Registration_BasicInformation","Registration_BasicInformationPtTwo","EmptyEntries","TextField","middleInitial","Registration","Registration_RegistrationForm","MedicalInformation","editImmunizationRecord","editMedicalCondition","editAllergies","editProcedureRecord","margine","handleChangeImmunizationRecord","handleChangeMedicalCondition","handleChangeAllergies","handleChangeProcedureRecord","ProfileInfo","retrieveUserInfo","first","last","user","pass","email","insuranceID","InsuranceClientID","dob","DOB","ssn","sex","cellnumber","streetaddr","cityaddr","stateaddr","AddressStateID","zipaddr","updateUserInfo","InsuranceID","_","saveChanges","revertChanges","usern","noValidate","autoComplete","defaultValue","PhoneMaskCustom","substring","validateUsername","editerButtons","Save_default","Cancel_default","Edit_default","Profile","Profile_ProfileInfo","Profile_MedicalInformation","ModifyFacility","selectedFacility","handleDoneSelected","i","WorkSchedule","WeekDayID","Sub_DayID","getFacilityIDFromName","UpdateDayID","NewFacilityID","Sub_FacilityID","lookUpName","WhichDay","DayID","OpenDays","WeekDay","AddNewDay","getOpenDaysList","handleConfirmChange","newDayList","shouldAddNew","Weekdays","k","push","Scheduling_WhichDay","DaySchedule","grabWorkSchedule","getFacilities","getWeekday","dayID","selectedDayID","handleConfirmRemove","RemoveDayID","Scheduling_ModifyFacility","getDayName","Scheduling_AddNewDay","Scheduling","Scheduling_DaySchedule","FacilityReports","MinDateChange","MinimumDateDB","MinimumDate","MaxDateChange","MaximumDateDB","MaximumDate","handlechoseChange","_this$setState2","checked","fetchFacilityReport","checkAllDates","ChosenFacility","Report","DoctorsCount","Count","_this4","control","DoctorsWorking","UpcomingApps","CancelledApps","CompletedApps","totalApps","DoctorsReport","fetchDoctorReport","ChosenDoctor","Apps","Diagnoses","DaysWorking","ReportsGenerator","Report_FacilityReports","Report_DoctorsReport","marginBottom","Report_ReportsGenerator","DoctorRegistration","Paths","react_router_dom","react_router","path","exact","Boolean","hostname","match","ReactDOM","render","src_Paths","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fcc8722e.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Tab, Tabs, CssBaseline } from '@material-ui/core';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  BarTitle: {\r\n    flexGrow: 1,\r\n    marginTop: \"1%\"\r\n  },\r\n  bar: {\r\n    backgroundColor: \"#e0e0e0\",\r\n    minHeight: 100,\r\n    height: '100%',\r\n\r\n  },\r\n  MenuIcon: {\r\n    marginLeft: -12,\r\n    marginRight: 20 \r\n  },\r\n};\r\n\r\n  class NavigationBar extends React.Component {\r\n    state = {\r\n      loggedIn: null,\r\n      userid: null,\r\n      userType: null,\r\n      currentTab: this.props.Tab,\r\n    };\r\n\r\n    logInSet(storageLoggedIn) {\r\n      return localStorage.getItem(storageLoggedIn) === 'true' ? true : false;\r\n    }\r\n    AppointmentPageRedirect = () =>{\r\n      window.location.replace('/Appointments');\r\n    }\r\n    ProfilePageRedirect = () =>{\r\n      window.location.replace('/Profile');\r\n    }\r\n    SchedulePageRedirect = () =>{\r\n      window.location.replace('/Scheduling');\r\n    }\r\n    ReportPageRedirect = () =>{\r\n      window.location.replace('/Reports');\r\n    }\r\n    DocRegistrationRedirect = () =>{\r\n      window.location.replace('/DoctorRegistration');\r\n    }\r\n    logout = () =>{\r\n      this.setState({loggedIn:false,userid:null,userType:null})\r\n      localStorage.setItem(\"userID\", null);\r\n      localStorage.setItem(\"userType\", null);\r\n      localStorage.setItem(\"LoginTableID\", null);\r\n      localStorage.setItem(\"loggedIn\", false);\r\n      window.location.replace('/')\r\n    }\r\n    componentDidMount() {\r\n      if(localStorage.userID !== null){\r\n        this.setState({loggedIn: true, userType: localStorage.userType});\r\n      }\r\n      else{\r\n        this.setState({loggedIn:false,userid:null,userType:null})\r\n      }\r\n      //HardCoding\r\n      //Query to see if the user is an employee or a Patient then\r\n      \r\n    }\r\n    render() {\r\n      const { classes, title } = this.props;\r\n      return (\r\n        <div className={classes.root}>\r\n          <AppBar className={classes.bar} position=\"static\">\r\n            <Toolbar>\r\n              {window.localStorage.loggedIn === \"true\" ? (\r\n                <div>\r\n                  <Toolbar >\r\n                    <Typography variant=\"h3\" className={classes.BarTitle}>\r\n                      {title}\r\n                    </Typography>\r\n                    <CssBaseline/>\r\n                  </Toolbar>\r\n                  <Tabs textColor=\"primary\" value={this.state.currentTab}>\r\n                      <Tab label=\"Appointments\" onClick={this.AppointmentPageRedirect}></Tab>\r\n                      <Tab label=\"My Profile\" onClick={this.ProfilePageRedirect}></Tab>\r\n                      {window.localStorage.userType !== \"2\" && window.localStorage.userType !== \"3\" ? (\r\n                        <Tab label=\"My Schedule\" onClick={this.SchedulePageRedirect}></Tab>\r\n                      ):(\r\n                        <div></div>\r\n                      )}\r\n                      {window.localStorage.userType === \"3\" ? (\r\n                          <Tab label=\"Reports\" onClick={this.ReportPageRedirect}></Tab>\r\n                          //<Tab label=\"Register A Doctor\" onClick={this.DocRegistrationRedirect}></Tab>\r\n\r\n                      ):(\r\n                        <div></div>\r\n                      )}\r\n                      {window.localStorage.userType === \"3\" ? (\r\n                          <Tab label=\"Register A New User\" onClick={this.DocRegistrationRedirect}></Tab>\r\n\r\n                      ):(\r\n                        <div></div>\r\n                      )}\r\n                      <Tab label=\"Logout\" onClick={this.logout}></Tab>\r\n                  </Tabs>\r\n                  \r\n                </div>\r\n              ):(\r\n                <Typography variant=\"h3\"className={classes.BarTitle}>\r\n                  {title}\r\n                </Typography>\r\n              )}\r\n            </Toolbar>\r\n          </AppBar>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nNavigationBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(NavigationBar);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport {Input, InputLabel, Button} from '@material-ui/core';\r\n\r\nconst styles = theme =>({\r\n  root: {\r\n    width: '25%',\r\n    marginLeft: '65%',\r\n    marginTop: '10%',\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: 'column',\r\n    backgroundColor: \"#e0e0e0\",\r\n    padding: theme.spacing.unit*3\r\n\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit\r\n  },\r\n  submitButton: {\r\n      marginTop: '20px'\r\n  }\r\n});\r\n\r\nclass HomeLoginBox extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            userType: null,\r\n            firstName:null,\r\n            Username: \"\",\r\n            password: \"\",\r\n            loggedIn: false,\r\n        };\r\n        this.handleChange=this.handleChange.bind(this);\r\n    }\r\n    \r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n        \r\n    }\r\n    handleRegistration = () => {\r\n        window.location.replace('/Registration');\r\n    }\r\n\r\n    login = () => {\r\n        fetch(`http://162.243.165.50:4000/login/${this.state.Username}`)\r\n        .then(result => result.json())\r\n        .then(res => {\r\n            if(res.data.length === 1){\r\n                if(res.data[0].Password === this.state.password){\r\n                    window.localStorage.setItem(\"loggedIn\", 'true');\r\n                    window.localStorage.setItem(\"LoginTableID\", res.data[0].LoginTableID);\r\n                    this.setUserType();                }\r\n                else{\r\n                    window.localStorage.setItem(\"loggedIn\", 'false');\r\n                }\r\n            }\r\n            else{\r\n                window.localStorage.setItem(\"loggedIn\", 'false');\r\n            }\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    \r\n    setUserType(){\r\n        fetch(`http://162.243.165.50:4000/Employee/${window.localStorage.LoginTableID}`)\r\n        .then(result => result.json())\r\n        .then(res => {\r\n            if(res.data.length === 1){\r\n                window.localStorage.setItem(\"userType\", res.data[0].RoleID); \r\n                window.localStorage.setItem(\"userID\", res.data[0].EmployeeID);  \r\n                this.setState({loggedIn:true});      \r\n                this.updateAppTimes();\r\n            }\r\n            else{  \r\n                fetch(`http://162.243.165.50:4000/Patient/${window.localStorage.LoginTableID}`)\r\n                .then(result => result.json())\r\n                .then(res => {\r\n                    if(res.data.length === 1){\r\n                        window.localStorage.setItem(\"userType\", 2); \r\n                        window.localStorage.setItem(\"userID\", res.data[0].PatientID);   \r\n                        this.setState({loggedIn:true});   \r\n                        this.updateAppTimes();          \r\n                    }\r\n                })\r\n                .catch(err => console.log(err))\r\n            }\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    updateAppTimes(){\r\n        if(window.localStorage.userType !== \"3\"){\r\n            if(window.localStorage.userType === \"2\"){\r\n                fetch(`http://162.243.165.50:4000/EmployeeAppUpdate/${window.localStorage.LoginTableID}`)\r\n                .then(result => result.json())\r\n            }\r\n            else{\r\n                fetch(`http://162.243.165.50:4000/PatientAppUpdate/${window.localStorage.LoginTableID}`)\r\n                .then(result => result.json())\r\n            }\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        window.localStorage.setItem(\"userID\", null);\r\n        window.localStorage.setItem(\"userType\", null);\r\n        window.localStorage.setItem(\"LoginTableID\", null);\r\n        window.localStorage.setItem(\"loggedIn\", false);\r\n    }\r\n  render(){\r\n    const {classes}=this.props;\r\n    if(this.state.loggedIn === false){\r\n        return(\r\n            <Paper elevation={15} className={classes.root}>\r\n              <Typography component=\"h1\" variant=\"h4\">\r\n                  Log In\r\n              </Typography>\r\n              <form className={classes.form}>\r\n                  <FormControl margin=\"normal\" fullWidth required>\r\n                      <InputLabel htmlFor=\"Username\">Username</InputLabel>\r\n                      <Input name=\"Username\" autoFocus value={this.state.Username} onChange={this.handleChange}></Input>\r\n                  </FormControl>\r\n                  <FormControl margin=\"normal\" fullWidth required>\r\n                      <InputLabel htmlFor=\"Password\">Password</InputLabel>\r\n                      <Input type =\"password\" value={this.state.password} name=\"password\" onChange={this.handleChange}></Input>\r\n                  </FormControl>\r\n                  <FormControl fullWidth className={classes.submitButton}>\r\n                      <Button\r\n                      variant=\"contained\"\r\n                      onClick={this.login}\r\n                      color=\"primary\">\r\n                          Log In\r\n                      </Button>\r\n                  </FormControl>\r\n                  <FormControl  className={classes.submitButton}>\r\n                      <Button\r\n                      size=\"small\"\r\n                      onClick={this.handleRegistration}\r\n                      color=\"primary\">\r\n                          Dont have an Account? Click here to Register\r\n                      </Button>\r\n                  </FormControl>\r\n              </form>\r\n            </Paper>\r\n        );\r\n    }\r\n    else return(\r\n        <div>{window.location.replace('/Appointments')}</div>\r\n    );\r\n    \r\n  }\r\n}\r\n\r\nHomeLoginBox.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n  \r\n  export default withStyles(styles)(HomeLoginBox);","import React, { Component } from 'react';\r\nimport './Home.css';\r\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\r\nimport HomeLoginBox from '../Components/Home/HomeLoginBox';\r\n\r\n\r\nclass Home extends Component {\r\n  render() { \r\n    return (\r\n      <div className='Home-image'>\r\n        <div className='Home-overlay'>\r\n          <NavigationBar title={\"Team 7 Medical Database Project\"}/>\r\n            <HomeLoginBox/>\r\n        </div>\r\n      </div>\r\n    );\r\n  } \r\n}\r\n\r\nexport default Home;\r\n","import { TextField, MenuItem } from \"@material-ui/core\";\r\nimport React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\n\r\nfunction WhichFacility(props){\r\n    \r\n    return(\r\n        <div>\r\n            <FormControl margin=\"normal\" fullWidth>\r\n                    <TextField\r\n                        id=\"FacilityID\"\r\n                        select\r\n                        label=\"Please Choose A Facility\"\r\n                        name=\"FacilityID\"\r\n                        variant=\"standard\"\r\n                        onChange={props.handleChange}\r\n                        value={props.val.FacilityID}   \r\n                        required                   \r\n                    >\r\n                        {props.val.Facilities.map(option => (\r\n                            <MenuItem key={option.FacilityID} value={option.FacilityID}>\r\n                                {option.FacilityName}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WhichFacility;","import { TextField, MenuItem } from \"@material-ui/core\";\r\nimport React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\n\r\nfunction WhichDoctor(props){\r\n    return(\r\n        <div>\r\n            <FormControl margin=\"normal\" fullWidth>\r\n                    <TextField\r\n                        id=\"DoctorID\"\r\n                        select\r\n                        label=\"Please Choose A Doctor\"\r\n                        name=\"DoctorID\"\r\n                        variant=\"standard\"\r\n                        onChange={props.handleChange}\r\n                        value={props.val.DoctorID}   \r\n                        required                   \r\n                    >\r\n                    {props.val.Doctors.map(option => (\r\n                        <MenuItem key={option.EmployeeID} value={option.EmployeeID}>\r\n                            Dr. {option.FirstName}\r\n                        </MenuItem>\r\n                    ))}\r\n                    </TextField>\r\n                    <TextField \r\n                        name=\"Reason\"\r\n                        label=\"Reason for Appointment\" \r\n                        variant=\"standard\"\r\n                        onChange={props.handleChange}\r\n                        value={props.val.Reason}\r\n                        inputProps={{ maxLength: 100 }}\r\n                    />\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <DatePicker\r\n                            minDate={new Date()}\r\n                            label=\"Appointment Date\"\r\n                            name=\"AppointmentDate\"\r\n                            value={props.val.AppointmentDate}\r\n                            onChange={props.AppointmentDateChange}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WhichDoctor;\r\n","import React from 'react';\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing.unit,\r\n      marginRight: theme.spacing.unit,\r\n      width: 200,\r\n    },\r\n  });\r\n\r\n\r\n  //This function should allow the user to select a time for the appointment \r\nfunction CompleteNewAppointment(props){\r\n    return(\r\n        <div>\r\n            <FormControl fullWidth>\r\n                    <TextField\r\n                        id=\"AppointmentTimeID\"\r\n                        select\r\n                        label=\"Please Choose A Time\"\r\n                        name=\"AppointmentTimeID\"\r\n                        variant=\"standard\"\r\n                        onChange={e=>props.handleChange(e)}\r\n                        value={props.val.AppointmentTimeID}   \r\n                        required                   \r\n                    >\r\n                    {props.val.AppointmentTimes.map(option => (\r\n                        <MenuItem key={option.TimeSlotID} value={option.TimeSlotID}>\r\n                            {option.AppointmentTime}\r\n                        </MenuItem>\r\n                    ))}\r\n                    </TextField>\r\n                </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nCompleteNewAppointment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n  \r\n  export default withStyles(styles)(CompleteNewAppointment);","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport WhichFacility from './WhichFacility';\r\nimport WhichDoctor from './WhichDoctor';\r\nimport CompleteNewAppointment from './CompleteNewAppointment';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport AddButton from '@material-ui/icons/ControlPointOutlined';\r\nimport { withStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n      fontSize: 25,\r\n      color: \"#f5f5f5\",\r\n      '&:hover': {\r\n        color: '#e0e0e0',\r\n      },\r\n    },\r\n    Button: {\r\n        marginTop: \".5%\"\r\n    }\r\n});\r\n\r\nclass NewAppointmentForm extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            openForm: false,\r\n            step: 0,\r\n            FacilityID: \"\",\r\n            DoctorID: \"\",\r\n            AppointmentTimeID:\"\",\r\n            Facilities: [],\r\n            Doctors: [],\r\n            AppointmentTimes: [],\r\n            Reason: null,\r\n            AppointmentDate: null,\r\n            DBFormattedDate: null,\r\n        };\r\n        this.uploadDoctors=this.uploadDoctors.bind(this);\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({\r\n            AppointmentTimes: [{\r\n                TimeSlotID: -1,\r\n                AppointmentTime: \"No Appointment Times for the chosen Date\"\r\n            }]\r\n        })\r\n        this.uploadFacilities();\r\n    };\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ openForm: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.uploadFacilities();\r\n        this.setState({ \r\n            openForm: false,\r\n            step: 0,\r\n            FacilityID: \"\",\r\n            DoctorID: \"\",\r\n            AppointmentTimeID:\"\",\r\n            Facilities: [],\r\n            Doctors: [],\r\n            AppointmentTimes: [],\r\n            Reason: null,\r\n            AppointmentDate: null,\r\n            DBFormattedDate: null,\r\n        });\r\n    };\r\n\r\n    AppointmentDateChange = (d) =>{\r\n        let ApptDate=new Date(d)\r\n        ApptDate = this.FormatDate(ApptDate);\r\n        this.setState({DBFormattedDate:ApptDate});\r\n        this.setState({\r\n            AppointmentDate: d\r\n        })\r\n    }\r\n\r\n    FormatDate=(date)=>{\r\n        date = date.getFullYear() + '-' + (this.fixMonth(date)) + '-' + date.getDate();\r\n        return date;\r\n    }\r\n\r\n    fixMonth=(date)=>{\r\n        if(date.getMonth() + 1 < 10){\r\n            return \"0\" +(date.getMonth() +1);\r\n        }\r\n        else{\r\n            return date.getMonth()+1;\r\n        }\r\n    }\r\n\r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    getStepInfo(step){\r\n        switch(step){\r\n            case 0:\r\n                return (<div>\r\n                            <WhichFacility val={this.state} handleChange={this.handleChange}/>\r\n                            <Button onClick={this.handleNextStep} disabled={this.state.FacilityID===\"\"} color=\"primary\">\r\n                                Next\r\n                            </Button>\r\n                        </div>)\r\n            case 1:\r\n            \r\n                return (<div>\r\n                            <WhichDoctor val={this.state} handleChange={this.handleChange}  AppointmentDateChange={this.AppointmentDateChange}/>\r\n                            <Button onClick={this.handleBackStep} color=\"primary\">\r\n                                Back\r\n                            </Button>\r\n                            <Button onClick={this.handleNextStep} disabled={this.state.DoctorID===\"\" || this.state.AppointmentDate===\"\"} color=\"primary\">\r\n                                Next\r\n                            </Button>\r\n                        </div>)\r\n            case 2:\r\n                \r\n                return (<div>\r\n                            <CompleteNewAppointment  val={this.state} AppointmentDateChange={this.AppointmentDateChange} handleChange={this.handleChange}/>\r\n                            <Button onClick={this.handleBackStep} color=\"primary\">\r\n                                Back\r\n                            </Button>\r\n                            <Button onClick={this.handleSubmit} disabled={this.state.AppointmentTimeID=== \"\" || this.state.AppointmentTimeID=== -1} color=\"primary\">\r\n                                Submit\r\n                            </Button>\r\n\r\n                        </div>) \r\n            default:\r\n                return \"Cannot Find Appointment Step\"\r\n        }\r\n    };\r\n    uploadFacilities=()=> {\r\n        fetch(`http://162.243.165.50:4000/Facilities`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Facilities:Response.data }))\r\n        .catch(err => console.log(err))\r\n    };\r\n    uploadDoctors=()=> {\r\n        var Specialist=\"1\";//0 is false and 1 is true\r\n        if(window.localStorage.userType !== \"3\"){\r\n            Specialist=\"0\";\r\n        }\r\n        fetch(`http://162.243.165.50:4000/Doctors/${this.state.FacilityID}/${Specialist}`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Doctors:Response.data }))\r\n        .catch(err => console.log(err))\r\n    };\r\n    uploadTimes=()=> {\r\n        fetch(`http://162.243.165.50:4000/AppointmentTimes/`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                DoctorID: this.state.DoctorID,\r\n                FacilityID: this.state.FacilityID,\r\n                AppDate: this.state.DBFormattedDate,\r\n            })\r\n        })\r\n        .then(result => result.json())\r\n        .then(Response => \r\n            {if(Response.data.length !== 0) {\r\n                this.setState({ AppointmentTimes:Response.data})\r\n            }})\r\n        .catch(err => console.log(err));\r\n    };\r\n    handleNextStep= () =>{\r\n        this.uploadDoctors();\r\n        this.uploadTimes();\r\n        this.setState({step: this.state.step+1})\r\n    };\r\n    handleSubmit= () =>{\r\n        this.setState({openForm:false})\r\n        fetch(`http://162.243.165.50:4000/AddAppointment`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                FacilityID: this.state.FacilityID,\r\n                DoctorID:   this.state.DoctorID,\r\n                PatientID:  this.props.PatientID,\r\n                Reason:     this.state.Reason,\r\n                TimeID:     this.state.AppointmentTimeID,\r\n                AppDate:    this.state.DBFormattedDate\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n        //.then(window.location.replace('/Appointments'));\r\n        setTimeout(function(){\r\n            window.location.replace('/Appointments')\r\n        }, 200);\r\n    };\r\n    handleBackStep= () =>{\r\n        this.setState({\r\n            step: this.state.step-1,\r\n            AppointmentTimeID: \"\"\r\n        })\r\n    };\r\n    render(){\r\n        const {classes}=this.props;\r\n        return(\r\n            <div>\r\n                {window.localStorage.userType === \"2\" ? (\r\n                    <Button variant=\"filled\" fullWidth className={classes.Button} onClick={this.handleClickOpen}>\r\n                        <AddButton className={classes.icon}/>New Appointment\r\n                    </Button>\r\n                ) : (\r\n                    <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.Button} onClick={this.handleClickOpen}>\r\n                        <AddButton className={classes.icon}/>New Appointment\r\n                    </Button>\r\n                )}\r\n                <Dialog open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Book an Appointment</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Please fill out the information to add a new Appointment\r\n                        </DialogContentText>\r\n                        {this.getStepInfo(this.state.step)}\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nNewAppointmentForm.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  export default withStyles(styles)(NewAppointmentForm);","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles, TextField } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n      margin: theme.spacing.unit,\r\n      fontSize: 32,\r\n    },\r\n});\r\n\r\nclass AddDiagnosis extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            AppointmentID: this.props.AppID,\r\n            Diagnosis: \"\",\r\n            openForm: false,\r\n        };\r\n    }\r\n\r\n    handleDiagnosisAdd= () =>{\r\n        this.setState({openForm:false});\r\n        fetch(`http://162.243.165.50:4000/AddDiagnosis`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                AppointmentID: this.state.AppointmentID,\r\n                Diagnosis:   this.state.Diagnosis,\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n    };\r\n    handleClickOpen = () => {\r\n        this.setState({ \r\n            Diagnosis: \"\",\r\n            openForm: true \r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ openForm: false });\r\n    };\r\n\r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Button variant=\"contained\" color=\"primary\" fullWidth className={this.props.Button} onClick={this.handleClickOpen}>\r\n                    Add a Diagnosis\r\n                </Button>\r\n                <Dialog open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Add A Appointment</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Please fill out the information to add a new Diagnosis\r\n                        </DialogContentText>\r\n                        <TextField \r\n                            name=\"Diagnosis\"\r\n                            label=\"What is the Diagnosis\" \r\n                            variant=\"standard\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.Diagnosis}\r\n                            inputProps={{ maxLength: 45 }}\r\n                            fullWidth\r\n                        />\r\n                        <Button onClick={this.handleDiagnosisAdd} disabled={this.state.Diagnosis=== \"\"}>\r\n                            Add Diagnosis\r\n                        </Button>\r\n                    </DialogContent>\r\n\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nAddDiagnosis.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  export default withStyles(styles)(AddDiagnosis);\r\n\r\n\r\n\r\n  //Split show and add for Prescription and Diagnosis","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\n//Seperate Prescription and Diagnosis Tables\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n      margin: theme.spacing.unit,\r\n      fontSize: 32,\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing.unit * 3,\r\n        overflowX: 'auto',\r\n      },\r\n      table: {\r\n        minWidth: 800,\r\n      },\r\n});\r\n\r\nclass ShowDiagnosis extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            openForm: false,\r\n            Diagnosis: [],\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.uploadDiagnosis();\r\n    }\r\n    uploadDiagnosis(){\r\n        fetch(`http://162.243.165.50:4000/Diagnosis/${this.props.AppID}`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Diagnosis: Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    handleClickOpen = () => {\r\n        this.uploadDiagnosis();\r\n        this.setState({ openForm: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ openForm: false });\r\n    };\r\n\r\n    render(){\r\n        const {classes}=this.props;\r\n        return(\r\n            <div>\r\n                <Button variant=\"contained\" color=\"inherit\" className={this.props.Button} fullWidth onClick={this.handleClickOpen}>\r\n                    Show Diagnosis\r\n                </Button>\r\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Here are the Doctor's Diagnoses</DialogTitle>\r\n                    <DialogContent>\r\n                        {this.state.Diagnosis.length>=1 ? (\r\n                            <div>\r\n                                <DialogContentText>\r\n                                    These are the Diagnoses Assosciated with your Appointment\r\n                                </DialogContentText>\r\n                                <Table className={classes.table}>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Diagnosis</TableCell>\r\n                                            <TableCell align=\"right\">DiagnosisID</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {this.state.Diagnosis.map(Each => (\r\n                                            <TableRow key={Each.DiagnosisID}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {Each.Diagnosis}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">{Each.DiagnosisID}</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </div>\r\n                        ):(\r\n                            <DialogContentText>\r\n                                There are no Diagnoses Assosciated with your Appointment\r\n                            </DialogContentText>\r\n                        )}\r\n                        \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nShowDiagnosis.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  export default withStyles(styles)(ShowDiagnosis);\r\n                 ","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\n\r\n//Seperate Prescription and Diagnosis Tables\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n      margin: theme.spacing.unit,\r\n      fontSize: 32,\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing.unit * 3,\r\n        overflowX: 'auto',\r\n      },\r\n      table: {\r\n        minWidth: 800,\r\n      },\r\n});\r\n\r\nclass ShowPrescriptions extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            openForm: false,\r\n            Prescriptions: [],\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.uploadPrescriptions();\r\n    }\r\n    uploadPrescriptions(){\r\n        fetch(`http://162.243.165.50:4000/Prescriptions/${this.props.AppID}`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Prescriptions: Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    handleClickOpen = () => {\r\n        this.setState({ openForm: true });\r\n        this.uploadPrescriptions();\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ openForm: false });\r\n    };\r\n\r\n    render(){\r\n        const {classes}=this.props;\r\n        return(\r\n            <div>\r\n                <Button variant=\"contained\" color=\"inherit\" className={this.props.Button} fullWidth onClick={this.handleClickOpen}>\r\n                    Show Prescriptions\r\n                </Button>\r\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Here are your issued Prescriptions</DialogTitle>\r\n                    <DialogContent>\r\n                        {this.state.Prescriptions.length>=1 ? (\r\n                            <div>\r\n                                 <DialogContentText>\r\n                                    These are the Prescriptions Assosciated with your Appointment\r\n                                </DialogContentText>\r\n                                <Table className={classes.table}>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Prescription Issue ID</TableCell>\r\n                                            <TableCell align=\"right\">Refills</TableCell>\r\n                                            <TableCell align=\"right\">Due Date</TableCell>\r\n                                            <TableCell align=\"right\">Medicine</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {this.state.Prescriptions.map(Each => (\r\n                                            <TableRow key={Each.PrescriptionIssueID}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {Each.PrescriptionIssueID}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">{Each.RefillLeft}</TableCell>\r\n                                            <TableCell align=\"right\">{Each.DueDate.substr(0,10)}</TableCell>\r\n                                            <TableCell align=\"right\">{Each.Medicine}</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </div>\r\n                        ):(\r\n                            <DialogContentText>\r\n                                There are no Prescriptions Assosciated with your Appointment\r\n                            </DialogContentText>\r\n                        )}\r\n                       \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nShowPrescriptions.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  export default withStyles(styles)(ShowPrescriptions);\r\n                 ","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles, TextField, FormControl, MenuItem } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n      margin: theme.spacing.unit,\r\n      fontSize: 32,\r\n    },\r\n});\r\n\r\nclass AddPrescription extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            AppointmentID: this.props.AppID,\r\n            PrescriptionID: \"\",\r\n            Refills:\"\",\r\n            MedicineTypes: [],\r\n            DueDate: null,\r\n            DBDueDate: null,\r\n            openForm: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.uploadMedicineTypes()\r\n    };\r\n\r\n    uploadMedicineTypes(){\r\n        fetch(`http://162.243.165.50:4000/AllMedicines/`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ MedicineTypes:Response.data}))\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    handleSubmit= () =>{\r\n        this.setState({openForm:false});\r\n        fetch(`http://162.243.165.50:4000/AddPrescription`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                AppointmentID: this.state.AppointmentID,\r\n                PrescriptionID:   this.state.PrescriptionID,\r\n                DueDate:  this.state.DBDueDate,\r\n                Refills:     this.state.Refills,\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n    };\r\n    handleClickOpen = () => {\r\n        this.setState({ \r\n            openForm: true,\r\n            AppointmentID: this.props.AppID,\r\n            PrescriptionID: \"\",\r\n            Refills:\"\",\r\n            DueDate: null,\r\n            DBDueDate: null, \r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ openForm: false });\r\n    };\r\n\r\n    DueDateChange = (d) =>{\r\n        let DueDate=new Date(d)\r\n        DueDate = this.FormatDate(DueDate);\r\n        \r\n        this.setState({DBDueDate:DueDate});\r\n        this.setState({\r\n            DueDate: d\r\n        })\r\n    }\r\n\r\n    FormatDate=(date)=>{\r\n        date = date.getFullYear() + '-' + (this.fixMonth(date)) + '-' + date.getDate();\r\n        return date;\r\n    }\r\n\r\n    fixMonth=(date)=>{\r\n        if(date.getMonth() + 1 < 10){\r\n            return \"0\" +(date.getMonth() +1);\r\n        }\r\n        else{\r\n            return date.getMonth()+1;\r\n        }\r\n    }\r\n\r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Button variant=\"contained\" color=\"primary\" fullWidth className={this.props.Button} onClick={this.handleClickOpen}>\r\n                    Add a Prescription\r\n                </Button>\r\n                <Dialog open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Add A Appointment</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Please fill out the information to add a new Diagnosis\r\n                        </DialogContentText>\r\n                        <FormControl margin=\"normal\" fullWidth>\r\n                            <TextField\r\n                                id=\"PrescriptionID\"\r\n                                select\r\n                                label=\"Please Choose A Prescription\"\r\n                                name=\"PrescriptionID\"\r\n                                variant=\"standard\"\r\n                                onChange={e=>this.handleChange(e)}\r\n                                value={this.state.PrescriptionID}   \r\n                                required                   \r\n                            >\r\n                            {this.state.MedicineTypes.map(option => (\r\n                                <MenuItem key={option.PrescriptionID} value={option.PrescriptionID}>\r\n                                    {option.Medicine}\r\n                                </MenuItem>\r\n                            ))}\r\n                            </TextField>\r\n                            <TextField \r\n                                name=\"Refills\"\r\n                                label=\"Number of Total Refills\" \r\n                                type=\"number\"\r\n                                variant=\"standard\"\r\n                                onChange={this.handleChange}\r\n                                value={this.state.Refills}\r\n                            />\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <DatePicker\r\n                                    minDate={new Date()}\r\n                                    label=\"Due Date\"\r\n                                    name=\"DueDate\"\r\n                                    value={this.state.DueDate}\r\n                                    onChange={this.DueDateChange}\r\n                                />\r\n                            </MuiPickersUtilsProvider>\r\n                            <Button onClick={this.handleSubmit} disabled={this.state.Refills=== \"\" || this.state.PrescriptionID=== \"\" || this.state.DBDueDate=== null} color=\"primary\">\r\n                                Submit\r\n                            </Button>\r\n                        </FormControl>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nAddPrescription.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  export default withStyles(styles)(AddPrescription);","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles, TextField, MenuItem } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n      margin: theme.spacing.unit,\r\n      fontSize: 32,\r\n    },\r\n});\r\n\r\nclass AddSpecialistReccomendation extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            AppointmentID: this.props.AppID,\r\n            Specialist: \"\",\r\n            Specialists: [],\r\n            openForm: false,\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.uploadSpecialists()\r\n    }\r\n    uploadSpecialists(){\r\n        fetch(`http://162.243.165.50:4000/AllDoctors`)\r\n        .then(result => result.json())\r\n        .then(res => this.setState({ Specialists: res.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    handleSpecialistAdd= () =>{\r\n        this.setState({openForm:false});\r\n        fetch(`http://162.243.165.50:4000/AddSpecialist`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                AppointmentID: this.state.AppointmentID,\r\n                Specialist:   this.state.Specialist,\r\n            })\r\n        })\r\n        .then(window.location.replace('/Appointments'))\r\n        .catch(err => console.log(err));\r\n    };\r\n    handleClickOpen = () => {\r\n        this.setState({ \r\n            Specialist: \"\",\r\n            openForm: true \r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ openForm: false });\r\n    };\r\n\r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Button variant=\"contained\" color=\"primary\" fullWidth className={this.props.Button} onClick={this.handleClickOpen}>\r\n                    Add a Specialist Reccomendation\r\n                </Button>\r\n                <Dialog open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Add A Specialist Reccomendation</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Please select a Doctor (Specialist or General) that you reccomend for the patiet\r\n                        </DialogContentText>\r\n                        <FormControl margin=\"normal\" fullWidth>\r\n                            <TextField\r\n                                id=\"Specialist\"\r\n                                select\r\n                                label=\"Please Choose A Doctor to Reccomend\"\r\n                                name=\"Specialist\"\r\n                                variant=\"standard\"\r\n                                onChange={this.handleChange}\r\n                                value={this.state.Specialist}   \r\n                                required                   \r\n                            >\r\n                                {this.state.Specialists.map(option => (\r\n                                    <MenuItem key={option.EmployeeID} value={option.FirstName}>\r\n                                        Dr.{option.FirstName} {option.LastName}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                        </FormControl>\r\n                        <Button onClick={this.handleSpecialistAdd}>\r\n                            Add Specialist\r\n                        </Button>\r\n                    </DialogContent>\r\n\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nAddSpecialistReccomendation.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  export default withStyles(styles)(AddSpecialistReccomendation);\r\n\r\n\r\n\r\n  //Split show and add for Prescription and Diagnosis","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Button from '@material-ui/core/Button';\r\nimport InfoIcon from '@material-ui/icons/ChromeReaderMode';\r\nimport { withStyles, Typography } from '@material-ui/core';\r\nimport {Paper, TextField, Grid,} from '@material-ui/core';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n      fontSize: 25,\r\n      color: \"#f5f5f5\",\r\n      '&:hover': {\r\n        color: '#e0e0e0',\r\n      },\r\n    },\r\n    dialog: {\r\n        margin: 'normal',\r\n    },\r\n    Button: {\r\n        marginTop: \".5%\"\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: \"#e0e0e0\",\r\n        padding: theme.spacing.unit*15,\r\n        height: '100%',\r\n        margin:\"auto\",\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField:{\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n    },\r\n    dense: {\r\n        marginTop: 19,\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    },\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n});\r\n\r\nclass PatientMedicalHistory extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            openForm: false,    \r\n            editing: false,   \r\n            allergies: '',\r\n            immunizationRecord: '',\r\n            medicalCondition: '',\r\n            procedureRecord: '',\r\n        };\r\n        this.handleChange=this.handleChange.bind(this);\r\n        this.saveChange=this.saveChange.bind(this);\r\n    }\r\n    getMedicalRecord=()=>{\r\n        fetch(`http://162.243.165.50:4000/GetMedicalHistory/${this.props.PatientID}`)\r\n        .then(result => result.json())\r\n        .then(result => \r\n            {if(result.data.length !== 0){\r\n                this.setState({\r\n                    allergies: result.data[0].Allergies,\r\n                    immunizationRecord: result.data[0].ImmunizationRecord,\r\n                    medicalCondition: result.data[0].MedicalCondition,\r\n                    procedureRecord: result.data[0].ProcedureRecord,\r\n                })\r\n            }})\r\n        .catch(err => console.error(err))\r\n    };\r\n    updateMedicalRecord(){\r\n        fetch(`http://162.243.165.50:4000/UpdateMedicalHistory`, {\r\n          method:\"POST\",\r\n          headers: {\r\n            \"Content-Type\":\"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            patientID: this.props.PatientID,\r\n            lastUpdatedBy: window.localStorage.userID,\r\n            immunizationRecord: this.state.immunizationRecord,\r\n            allergies: this.state.allergies,\r\n            procedureRecord: this.state.procedureRecord,\r\n            medicalCondition: this.state.medicalCondition,\r\n          })\r\n        })\r\n        .then(this.getMedicalRecord())\r\n        .catch(err => console.log(err))\r\n    }\r\n    saveChange(){\r\n        this.updateMedicalRecord();\r\n        this.getMedicalRecord();\r\n        this.setState({\r\n            editing: false\r\n        });\r\n    }\r\n    handleClickOpen = () => {\r\n        this.getMedicalRecord();\r\n        this.setState({openForm:true})\r\n    };\r\n    handleClose = () => {\r\n        this.setState({ \r\n            openForm: false,    \r\n            editing: false,   \r\n            allergies: '',\r\n            immunizationRecord: '',\r\n            medicalCondition: '',\r\n            procedureRecord: '',\r\n        });\r\n    };\r\n    editMode = () => {\r\n        this.setState({\r\n          editing: true\r\n        });\r\n    }\r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        const {classes}=this.props;\r\n        return(\r\n            <div>\r\n                <Button variant=\"contained\" color=\"inherit\" className={this.props.Button} onClick={this.handleClickOpen} fullWidth >\r\n                    <InfoIcon/> Patient's Medical History\r\n                </Button>\r\n                <Dialog fullScreen className={classes.dialog} open={this.state.openForm} onClose={this.handleClose}>\r\n                    <Paper className={classes.root} elevation={2}>\r\n                        <Typography variant=\"h3\" >Patient Medical Record</Typography>\r\n                        <br />\r\n                        <Typography variant=\"h4\" >Summary</Typography>\r\n                        <TextField\r\n                            label=\"Patient ID\"\r\n                            margin=\"normal\"\r\n                            disabled\r\n                            className={classes.textField}\r\n                            value={this.props.PatientID}\r\n                        />\r\n                        <br/>\r\n                        <Grid container spacing={24}>\r\n                            <Grid item sm>\r\n                                <TextField\r\n                                    name=\"immunizationRecord\"\r\n                                    label=\"Immunization Record\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.immunizationRecord}\r\n                                    margin=\"normal\"\r\n                                    multiline\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    rows=\"8\"\r\n                                    inputProps={{ maxLength: 45 }}\r\n                                    disabled={!this.state.editing}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item sm>\r\n                                <TextField\r\n                                    name=\"medicalCondition\"\r\n                                    label=\"Medical Condition\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.medicalCondition}\r\n                                    margin=\"normal\"\r\n                                    fullWidth\r\n                                    multiline\r\n                                    variant=\"outlined\"\r\n                                    rows=\"8\"\r\n                                    inputProps={{ maxLength: 45 }}\r\n                                    disabled={!this.state.editing}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        \r\n                        <Grid container spacing={24}>\r\n                            <Grid item sm>\r\n                                <TextField\r\n                                    name=\"allergies\"\r\n                                    label=\"Allergies\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.allergies}\r\n                                    margin=\"normal\"\r\n                                    multiline\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    rows=\"8\"\r\n                                    inputProps={{ maxLength: 45 }}\r\n                                    disabled={!this.state.editing}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item sm>\r\n                                <TextField\r\n                                    name=\"procedureRecord\"\r\n                                    label=\"Procedures Record\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.procedureRecord}\r\n                                    margin=\"normal\"\r\n                                    multiline\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    rows=\"8\"\r\n                                    inputProps={{ maxLength: 100 }}\r\n                                    disabled={!this.state.editing}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid>\r\n                            {!this.state.editing ? (\r\n                                <div>\r\n                                        <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.button} onClick={this.editMode}> Edit </Button>\r\n                                </div>\r\n                            ):(\r\n                                <div>\r\n                                    <Button variant=\"contained\" color=\"secondary\" fullWidth className={classes.button} onClick={this.saveChange}> Save </Button>\r\n                                </div>      \r\n                            )}\r\n                            <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.button} onClick={this.handleClose}> Close </Button>\r\n\r\n                        </Grid>\r\n                    </Paper>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nPatientMedicalHistory.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  export default withStyles(styles)(PatientMedicalHistory);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport NewAppointmentForm from './NewAppointmentForm';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { FormControl, Grid } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddDiagnosis from './AddDiagnosis';\r\nimport ShowDiagnosis from './ShowDiagnosis';\r\nimport ShowPrescriptions from './ShowPrescriptions';\r\nimport AddPrescription from './AddPrescription';\r\nimport AddSpecialistReccomendation from './AddSpecilaistReccomendation';\r\nimport './AppointmentPage.css';\r\nimport PatientMedicalHistory from './PatientMedicalHistory';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst styles = theme =>({\r\n    root: {\r\n        width: '75%',\r\n        alignItems: \"center\",\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        padding: theme.spacing.unit*3,\r\n        margin:\"auto\"\r\n  \r\n    },\r\n    page: {\r\n        padding: theme.spacing.unit*3,\r\n        margin:\"auto\"\r\n  \r\n    },\r\n    AdditionButton: {\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        padding: theme.spacing.unit,\r\n  \r\n    },\r\n    Button: {\r\n        marginTop: '.5%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '19%',\r\n        flexShrink: 0,\r\n    },\r\n    iconHistory: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '3%',\r\n        flexShrink: 10,\r\n    },\r\n    secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    flexBasis: '100%',\r\n    margin: 'auto'\r\n    },\r\n});\r\n\r\n\r\nclass AppointmentHistory extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            expanded: null,\r\n            Appointments: [],\r\n            Diagnosis: [],\r\n            cancelApptShow: false,\r\n\t\t\tselectedAppt: \"\",\r\n\t\t\topenForm: false\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.grabAppointments();\r\n    }\r\n    grabAppointments=()=>{\r\n        //backend call to grab the appointments for the user\r\n        fetch(`http://162.243.165.50:4000/Appointments/`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                UserType: window.localStorage.userType,\r\n                UserID: window.localStorage.userID,\r\n            })\r\n        })\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Appointments:Response.data}))\r\n        .catch(err => console.log(err));\r\n        \r\n    }\r\n    handleChange = panel => (event, expanded) => {\r\n        this.setState({\r\n            expanded: expanded ? panel : false,\r\n        });\r\n    }\r\n\r\n    placeDiagnosis(){\r\n        this.state.Diagnosis.map(option => (\r\n            <FormControl>\r\n                <Typography>Diagnosis: {option.Diagnosis}</Typography>\r\n                <Typography>Number of Refills:  {option.RefillLeft}</Typography>\r\n                <Typography>Due Date: {option.DueDate.substr(0,10)}</Typography>\r\n                <Typography>Medicine: {option.Medicine}</Typography>\r\n            </FormControl>\r\n        ))\r\n    }\r\n    handleAppointmentCancel = (AppID) => {\r\n        fetch(`http://162.243.165.50:4000/CancelAppointment/`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                AppointmentID: AppID,\r\n            })\r\n        })\r\n        .then(this.grabAppointments)\r\n        .catch(err => console.log(err));\r\n\t\tsetTimeout(function(){\r\n\t\t\twindow.location.replace('/Appointments')\r\n\t\t}, 200);\r\n    };\r\n\t\r\n\thandleClickOpenCancellation = (apptID) => {\r\n\t\tthis.setState({ selectedAppt: apptID });\r\n        this.setState({ openForm: true });\r\n    };\r\n\r\n    handleCloseCancellation = () => {\r\n        this.setState({ openForm: false });\r\n    };\r\n\t\r\n    render(){\r\n        const{classes}=this.props;\r\n        const { expanded } = this.state;\r\n        return(\r\n            <div className={classes.page}>\r\n                <div className='AppointmentPage-SmallBoxOverLay'>\r\n                <div className={classes.root}>\r\n                <h1 className='AppointmentHistory-h1'>Upcoming Appointments</h1>\r\n                    {this.state.Appointments.map(option => (\r\n                            <FormControl key={option.idAppointment} fullWidth>\r\n                                <ExpansionPanel square expanded={expanded === option.idAppointment}  onChange={this.handleChange(option.idAppointment)}>\r\n                                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                                        <Typography className={classes.heading}>Patient: {option.Patient}</Typography>\r\n                                        <Typography className={classes.heading}>Doctor: Dr. {option.Doctor}</Typography>\r\n                                        <Typography className={classes.heading}>Date: {option.AppointmentDate.substr(0,10)}</Typography>\r\n                                        <Typography className={classes.heading}>Time: {option.AppointmentTime.substr(0,5)}</Typography>\r\n                                        <Typography className={classes.heading}>Status: {option.currentStatus}</Typography>\r\n                                    </ExpansionPanelSummary>\r\n                                    <ExpansionPanelDetails>\r\n                                        <Typography className={classes.secondaryHeading}>\r\n                                            Reason:{option.Reason === \"null\" ? (<text> No Reason Specified</text>):(<text>{option.Reason}</text>)} <br/>\r\n                                            AppointmentID: {option.idAppointment} <br/>\r\n                                            Facility: {option.FacilityName} <br/>\r\n                                            Address: {option.Street}, {option.City}, {option.State} {option.ZipCode}<br/>\r\n                                            Doctor Reccomentation: {option.Specialist === null || option.Specialist === \"\" ? (<text>No Doctor Reccomendations</text>):(<text>Dr. {option.Specialist}</text>)}<br/>\r\n                                            {(window.localStorage.userType !== \"2\" &&  window.localStorage.userType !== \"3\")? (\r\n                                                <Grid container spacing={8}>\r\n                                                    <Grid item xs={12} sm={4}>  \r\n                                                        <AddDiagnosis Button={classes.Button} AppID={option.idAppointment}/>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12} sm={4}>\r\n                                                        <AddSpecialistReccomendation  Button={classes.Button} AppID={option.idAppointment}/>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12} sm={4}>  \r\n                                                        <AddPrescription Button={classes.Button} AppID={option.idAppointment}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            ):(\r\n                                                <div>\r\n                                                </div>\r\n                                            )}\r\n                                            {window.localStorage.userType !==\"2\" ? (\r\n                                                <Grid container spacing={8}>\r\n                                                    <Grid item xs={12} sm={4}>\r\n                                                        <ShowDiagnosis  Button={classes.Button} AppID={option.idAppointment}/>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12} sm={4}>\r\n                                                        <PatientMedicalHistory Button={classes.Button} PatientID={option.PatientID}/>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12} sm={4}>\r\n                                                        <ShowPrescriptions  Button={classes.Button} AppID={option.idAppointment}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            ):(\r\n                                                <Grid container spacing={8}>\r\n                                                    <Grid item xs={12} sm={6}>\r\n                                                        <ShowDiagnosis  Button={classes.Button} AppID={option.idAppointment}/>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12} sm={6}>\r\n                                                        <ShowPrescriptions  Button={classes.Button} AppID={option.idAppointment}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            )}\r\n                                            \r\n                                            {window.localStorage.userType === \"3\" ? (\r\n                                                    <Grid container spacing={8}>\r\n                                                        <Grid item xs={12} sm={6}>  \r\n                                                            <NewAppointmentForm PatientID={option.PatientID}/>                                                        \r\n                                                        </Grid>\r\n                                                        <Grid item xs={12} sm={6}>\r\n                                                            <Button variant=\"raised\" fullWidth  className={classes.Button} color=\"secondary\"  onClick={() =>  this.handleClickOpenCancellation(option.idAppointment) } marginTop=\"10%\">\r\n                                                                Cancel Appointment\r\n                                                            </Button>  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleCloseCancellation}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogTitle id=\"form-dialog-title\"></DialogTitle>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogContent>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogContentText>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAre you sure you want to cancel appointment {this.state.selectedAppt}?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DialogContentText>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DialogContent>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button className={classes.Button} onClick={this.handleCloseCancellation} color=\"primary\" variant=\"contained\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNo\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button className={classes.Button} onClick={() => this.handleAppointmentCancel(this.state.selectedAppt)} color=\"secondary\" variant=\"contained\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tYes\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DialogActions>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Dialog>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                            ):(\r\n                                                <div></div>\r\n                                            )}\r\n                                            \r\n                                            {window.localStorage.userType === \"2\" ? (\r\n                                                <div>\r\n                                                    <Button variant=\"raised\" fullWidth  className={classes.Button} color=\"secondary\"  onClick={() =>  this.handleClickOpenCancellation(option.idAppointment) } marginTop=\"10%\">\r\n                                                        Cancel Appointment\r\n                                                    </Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleCloseCancellation}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogTitle id=\"form-dialog-title\"></DialogTitle>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogContent>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogContentText>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAre you sure you want to cancel appointment {this.state.selectedAppt}?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DialogContentText>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DialogContent>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button className={classes.Button} onClick={this.handleCloseCancellation} color=\"primary\" variant=\"contained\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNo\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button className={classes.Button} onClick={() => this.handleAppointmentCancel(this.state.selectedAppt)} color=\"secondary\" variant=\"contained\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tYes\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DialogActions>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Dialog>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n                                                </div>\r\n                                                \r\n                                            ):(\r\n                                                <div></div>\r\n                                            )}\r\n\r\n                                            \r\n                                            \r\n                                        </Typography>\r\n                                        \r\n                                    </ExpansionPanelDetails>\r\n                                </ExpansionPanel>\r\n                            </FormControl>\r\n                            \r\n                    ))}\r\n                    {window.localStorage.userType === \"2\" ? (\r\n                        <div className={classes.AdditionButton}>\r\n                            <NewAppointmentForm PatientID={window.localStorage.userID}/>\r\n                        </div>\r\n                    ):(\r\n                        <div></div>\r\n                    )}\r\n                    \r\n                    \r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nAppointmentHistory.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  \r\nexport default withStyles(styles)(AppointmentHistory);\r\n","import React, { Component } from 'react';\r\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\r\nimport AppointmentHistory from '../Components/Appointments/AppointmentHistory';\r\nimport '../Components/Appointments/AppointmentPage.css';\r\n\r\nclass Appointments extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n        firstName: \"\",\r\n        Facilities: []\r\n    };\r\n  }\r\n  componentDidMount(){\r\n    this.FirstName();\r\n  }\r\n\r\n  FirstName(){\r\n    if(window.localStorage.userType === \"2\"){\r\n      fetch(`http://162.243.165.50:4000/Patient/${window.localStorage.LoginTableID}`)\r\n      .then(result => result.json())\r\n      .then(res => {\r\n          this.setState(  { firstName: res.data[0].FirstName  } )\r\n        })\r\n      .catch(err => console.log(err))\r\n    }\r\n  \r\n    else{\r\n      fetch(`http://162.243.165.50:4000/Employee/${window.localStorage.LoginTableID}`)\r\n      .then(result => result.json())\r\n      .then(res => {this.setState(  { firstName: res.data[0].FirstName  } )})\r\n      .catch(err => console.log(err))\r\n    }\r\n  }\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <div className='AppointmentPage-image'>\r\n        <div className='AppointmentPage-overlay'>\r\n          <NavigationBar title={'Welcome, '+this.state.firstName} Tab={0}/>\r\n          <AppointmentHistory val={this.state}/>\r\n        </div>\r\n      </div>\r\n        \r\n    );\r\n  }\r\n}\r\n\r\nexport default Appointments;\r\n","import { TextField,  MenuItem, Typography } from \"@material-ui/core\";\r\nimport React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport {Input, InputLabel} from '@material-ui/core';  \r\n\r\n\r\nfunction validateUsername(){\r\n    return true;\r\n};\r\nfunction validatePassword(props){\r\n    if(props.val.password.length >=6 || props.val.password.length <=1 ){\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\nfunction BasicInformation(props){\r\n    \r\n    return(\r\n        <div>\r\n             <Typography>Registration Information</Typography>\r\n                <FormControl margin=\"normal\" fullWidth required>\r\n                    <InputLabel htmlFor=\"FirstName\">First Name</InputLabel>\r\n                    <Input name=\"FirstName\" autoFocus value={props.val.FirstName} onChange={props.handleChange}></Input>\r\n                </FormControl>\r\n                <FormControl margin=\"auto\" fullWidth required>\r\n                    <InputLabel htmlFor=\"LastName\">Last Name</InputLabel>\r\n                    <Input name=\"LastName\" value={props.val.LastName} onChange={props.handleChange}></Input>\r\n                </FormControl>\r\n                <FormControl margin=\"normal\" fullWidth>\r\n                    <TextField \r\n                        required\r\n                        name=\"username\" \r\n                        label=\"Username\" \r\n                        variant=\"standard\"\r\n                        onChange={props.handleChange}\r\n                        value={props.val.username}\r\n                        error={!validateUsername()}\r\n                        helperText={validateUsername() ? \"\":\"Username is not valid\"}\r\n                    />\r\n                </FormControl>\r\n                <FormControl margin=\"auto\" fullWidth required>\r\n                    <TextField \r\n                        name=\"password\"\r\n                        type=\"password\" \r\n                        label=\"Password\" \r\n                        variant=\"standard\"\r\n                        error={!validatePassword(props)}\r\n                        onChange={props.handleChange}\r\n                        value={props.val.password}\r\n                        required\r\n                    />\r\n                </FormControl>\r\n                {(window.localStorage.userType === \"3\") ? (\r\n                    <FormControl margin=\"auto\" fullWidth>\r\n                        <TextField\r\n                            id=\"userType\"\r\n                            select\r\n                            label=\"Type of User\"\r\n                            name=\"userType\"\r\n                            variant=\"standard\"\r\n                            onChange={props.handleChange}\r\n                            value={props.val.userType}   \r\n                            required                   \r\n                        >\r\n                            {props.val.roles.map(option => (\r\n                                <MenuItem key={option.RoleID} value={option.RoleID}>\r\n                                    {option.RoleTitle}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                    </FormControl>\r\n                ):(\r\n                    <div></div>\r\n                )}\r\n                    \r\n                <FormControl margin=\"auto\" fullWidth required>\r\n                    <TextField \r\n                        name=\"Email\" \r\n                        label=\"Email\" \r\n                        variant=\"standard\"\r\n                        type=\"email\"\r\n                        onChange={props.handleChange}\r\n                        value={props.val.Email}\r\n                        required\r\n                    />\r\n                </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BasicInformation;","import {  TextField, MenuItem, Typography, Grid, Input, InputLabel } from \"@material-ui/core\";\r\nimport React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';  \r\nimport MaskedInput from 'react-text-mask';\r\nimport PropTypes from 'prop-types'; \r\n\r\n\r\nfunction TextMaskCustom(props) {\r\n    const {...other } = props;\r\n  \r\n    return (\r\n      <MaskedInput\r\n        {...other}\r\n        guide={false}\r\n        mask={[/[1-9]/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\r\n        placeholderChar={'\\u2000'}\r\n        showMask\r\n      />\r\n    );\r\n}\r\n\r\nTextMaskCustom.propTypes = {\r\n    inputRef: PropTypes.func.isRequired,\r\n};\r\nfunction DateMaskCustom(props) {\r\n    const {...other } = props;\r\n  \r\n    return (\r\n      <MaskedInput\r\n        guide={false}\r\n        {...other}\r\n        mask={[/\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/,'-', /\\d/, /\\d/]}\r\n        placeholderChar={'\\u2000'}\r\n        showMask\r\n      />\r\n    );\r\n}\r\n\r\nfunction SSNMaskCustom(props) {\r\n    const {...other } = props;\r\n\r\n  \r\n    return (\r\n      <MaskedInput\r\n        guide={false}\r\n        {...other}\r\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\r\n        placeholderChar={'\\u2000'}\r\n        showMask\r\n      />\r\n    );\r\n}\r\n\r\nfunction BasicInformationPtTwo(props){\r\n    \r\n    return(\r\n        <div>\r\n            <Typography>Personal Information</Typography>\r\n            <FormControl margin=\"auto\" fullWidth required>\r\n                <InputLabel htmlFor=\"AddressStreet\">Street Address</InputLabel>\r\n                <Input name=\"AddressStreet\" autoFocus value={props.val.AddressStreet} onChange={props.handleChange}></Input>\r\n            </FormControl>\r\n            <Grid container spacing={8}>\r\n                <Grid item xs={12} sm={5}>\r\n                    <FormControl margin=\"normal\" fullWidth required>\r\n                        <InputLabel htmlFor=\"AddressCity\">City</InputLabel>\r\n                        <Input name=\"AddressCity\" autoFocus value={props.val.AddressCity} onChange={props.handleChange}></Input>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} sm={2}>\r\n                    <FormControl margin=\"normal\" fullWidth>\r\n                        <TextField\r\n                            id=\"State\"\r\n                            select\r\n                            label=\"State\"\r\n                            name=\"AddressState\"\r\n                            variant=\"standard\"\r\n                            onChange={props.handleChange}\r\n                            value={props.val.AddressState}   \r\n                            required                   \r\n                        >\r\n                            {props.val.states.map(option => (\r\n                                <MenuItem key={option.StateID} value={option.StateID}>\r\n                                    {option.StateString}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} sm={5}>\r\n                    <FormControl margin=\"normal\" fullWidth required>\r\n                        <InputLabel htmlFor=\"AddressZip\">Zip Code</InputLabel>\r\n                        <Input name=\"AddressZip\" autoFocus value={props.val.AddressZip} onChange={props.handleChange}></Input>\r\n                    </FormControl>\r\n                </Grid>\r\n            </Grid>\r\n            <FormControl margin=\"normal\" fullWidth required>\r\n                <InputLabel htmlFor=\"DateOfBirth\">Date Of Birth</InputLabel>\r\n                <Input name=\"DateOfBirth\" placeholder=\"YYYY-MM-DD\" value={props.val.DateOfBirth}  inputComponent={DateMaskCustom} onChange={props.handleChange}></Input>\r\n            </FormControl>\r\n            <FormControl margin=\"auto\" fullWidth>\r\n                <TextField\r\n                    id=\"Sex\"\r\n                    select\r\n                    label=\"Gender\"\r\n                    name=\"Sex\"\r\n                    variant=\"standard\"\r\n                    onChange={props.handleChange}\r\n                    value={props.val.Sex}   \r\n                    required                   \r\n                >\r\n                    {props.val.sexes.map(option => (\r\n                        <MenuItem key={option.SexID} value={option.SexID}>\r\n                            {option.Gender}\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n            </FormControl>\r\n            <FormControl margin=\"auto\" fullWidth>\r\n                <TextField\r\n                    id=\"Race\"\r\n                    select\r\n                    label=\"Race\"\r\n                    name=\"raceID\"\r\n                    variant=\"standard\"\r\n                    onChange={props.handleChange}\r\n                    value={props.val.raceID}   \r\n                    required                   \r\n                >\r\n                    {props.val.races.map(option => (\r\n                        <MenuItem key={option.RaceID} value={option.RaceID}>\r\n                            {option.Race}\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n            </FormControl>\r\n            <FormControl margin=\"normal\" fullWidth required>\r\n                <InputLabel htmlFor=\"SSN\">Social Security</InputLabel>\r\n                <Input name=\"SSN\" placeholder=\"XXX-XX-XXXX\" inputComponent={SSNMaskCustom} value={props.val.SSN} onChange={props.handleChange}></Input>\r\n            </FormControl>\r\n            <FormControl margin=\"normal\" required>\r\n                <InputLabel htmlFor=\"CellNuber\">Contact Number</InputLabel>\r\n                <Input\r\n                    onChange={props.handleChange}\r\n                    name=\"CellNumber\"\r\n                    id=\"Contact Number\"\r\n                    value={props.val.CellNumber}\r\n                    inputComponent={TextMaskCustom}\r\n                />\r\n            </FormControl>\r\n            \r\n                \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BasicInformationPtTwo;","import { Paper, Typography } from \"@material-ui/core\";\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport HomeLogo  from '@material-ui/icons/Home';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport {Button} from '@material-ui/core';    \r\nimport BasicInformation from '../Registration/BasicInformation';\r\nimport BasicInformationPtTwo from '../Registration/BasicInformationPtTwo';\r\n\r\n\r\nconst styles = theme => ({\r\n    paperForm: {\r\n        width: '25%',\r\n        marginLeft: '7%',\r\n        marginTop: '-15%',\r\n        padding: theme.spacing.unit*2,\r\n        flexDirection: 'column',\r\n        backgroundColor: \"#e0e0e0\",\r\n    },\r\n    icon: {\r\n        margin: theme.spacing.unit,\r\n        fontSize: \"150%\",\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n    TextField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        margin: theme.spacing.unit*2,\r\n    },\r\n    middleInitial: {\r\n        width:\"15%\",\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        margin: theme.spacing.unit*2\r\n    },\r\n    heading: {\r\n        margin: theme.spacing.unit,\r\n        marginLeft: \"70%\",\r\n        marginTop: \"10%\",\r\n        color: \"white\",\r\n    },\r\n});\r\n\r\nclass RegistrationForm extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Sex: \"\",\r\n            Email:\"\",\r\n            username: \"\",\r\n            password: \"\",\r\n            CellNumber: \"\",\r\n            AddressStreet: \"\",\r\n            AddressCity:\"\",\r\n            AddressState: \"\",\r\n            AddressZip: \"\",\r\n            DateOfBirth:\"\",\r\n            SSN: \"\",\r\n            userType: \"\",\r\n            registrationStep: 0,\r\n            raceID: \"\",\r\n            states:[],\r\n            sexes:[],\r\n            roles:[],\r\n            races:[],\r\n\r\n        };\r\n        this.handleChange=this.handleChange.bind(this);\r\n    }\r\n    EmptyEntries(){\r\n        return  this.state.FirstName === \"\"||\r\n                this.state.LastName === \"\" ||\r\n                this.state.Sex === \"\" ||\r\n                this.state.Email === \"\" ||\r\n                this.state.username === \"\" ||\r\n                this.state.password === \"\" ||\r\n                this.state.CellNumber === \"\" ||\r\n                this.state.AddressStreet === \"\" ||\r\n                this.state.AddressCity === \"\" ||\r\n                this.state.AddressState === \"\" ||\r\n                this.state.AddressZip === \"\" ||\r\n                this.state.DateOfBirth !== 10 ||\r\n                this.state.SSN.length !== 11 ||\r\n                this.state.registrationStep === 0\r\n    }\r\n    componentDidMount(){\r\n        if(window.localStorage.LoginTableID === \"null\"){\r\n            this.setState({userType: 2})\r\n        }\r\n        this.uploadStates();\r\n        this.uploadSexes();\r\n        this.uploadRoles();\r\n        this.uploadRaces();\r\n    }\r\n    handleChange = e =>{\r\n        console.log(this.state.userType);\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    registerUser=()=>{\r\n        //backend call to add the user to the backend\r\n        fetch(`http://162.243.165.50:4000/RegisterUser`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                FirstName:this.state.FirstName,\r\n                LastName:this.state.LastName,\r\n                Sex: this.state.Sex,\r\n                Email: this.state.Email,\r\n                username: this.state.username,\r\n                password: this.state.password,\r\n                CellNumber: this.state.CellNumber,\r\n                AddressStreet: this.state.AddressStreet,\r\n                AddressCity: this.state.AddressCity,\r\n                AddressState: this.state.AddressState,\r\n                AddressZip: this.state.AddressZip,\r\n                DateOfBirth: this.state.DateOfBirth,\r\n                SSN: this.state.SSN,\r\n                userType: this.state.userType,\r\n                raceID: this.state.raceID,\r\n            })\r\n        })\r\n        .then(console.log('done'))\r\n        .catch(err => console.log(err))\r\n        .then(this.homeRedirect());\r\n        \r\n    }\r\n    homeRedirect = () =>{\r\n        if(window.localStorage.loggedIn === \"true\"){\r\n            window.location.replace('/Appointments')\r\n        }\r\n        else{\r\n            window.location.replace('/')\r\n        }\r\n        \r\n    }\r\n    \r\n    stepNext=()=>{\r\n        this.setState(state => ({\r\n            registrationStep:state.registrationStep+1\r\n        }))\r\n    }\r\n\r\n    uploadStates=()=> {\r\n        fetch(`http://162.243.165.50:4000/states`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ states:Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    uploadSexes=()=> {\r\n        fetch(`http://162.243.165.50:4000/sexes`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ sexes:Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    uploadRoles=()=> {\r\n        fetch(`http://162.243.165.50:4000/roles`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ roles:Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    uploadRaces=()=> {\r\n        fetch(`http://162.243.165.50:4000/races`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ races:Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    render(){\r\n        const {classes}=this.props;\r\n        return(\r\n            <div>\r\n                <IconButton onClick={this.homeRedirect}>\r\n                    <HomeLogo style={{color: \"#212121\"}} className={classes.icon} />\r\n                </IconButton>\r\n                <Typography variant=\"h3\" className={classes.heading}>Medical Center Registration</Typography>\r\n                <Paper elevation={10} className={classes.paperForm}>\r\n                    {this.state.registrationStep===0 ? (\r\n                        <div>\r\n                            <BasicInformation handleChange={this.handleChange} val={this.state}/>\r\n                            <FormControl margin=\"normal\" fullWidth >\r\n                                <Button onClick={this.stepNext}>\r\n                                    Next\r\n                                </Button>\r\n                            </FormControl>\r\n                        </div>\r\n                    ):(\r\n                        <div>\r\n                            <BasicInformationPtTwo handleChange={this.handleChange} val={this.state}/>\r\n                            <FormControl margin=\"normal\" fullWidth >\r\n                                <Button disabled={!this.EmptyEntries()} onClick={this.registerUser}>\r\n                                    Register\r\n                                </Button>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                    )}\r\n                    \r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nRegistrationForm.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n  \r\n  export default withStyles(styles)(RegistrationForm);","import React from 'react';\r\nimport RegistrationForm from '../Components/Registration/RegistrationForm';\r\nimport './Home.css';\r\n\r\nclass Registration extends React.Component{\r\n    render() {\r\n        return(\r\n            <div className='Home-image'>\r\n                <div className='Home-overlay'>\r\n                    <RegistrationForm/>\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Registration;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {Paper, Typography, TextField, Divider, Grid} from '@material-ui/core';\r\n\r\n\r\n\r\n//Define the looks\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '75%',\r\n    backgroundColor: \"#e0e0e0\",\r\n    padding: theme.spacing.unit*3,\r\n    height: '98%',\r\n    margin:\"auto\",\r\n    marginTop: '2%',\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField:{\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  dense: {\r\n    marginTop: 19,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n});\r\n\r\n\r\nclass MedicalInformation extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      patientID: '',\r\n      editImmunizationRecord: '',\r\n      editMedicalCondition: '',\r\n      editAllergies: '',\r\n      editProcedureRecord: '',\r\n\r\n    };\r\n  }\r\n\r\ncomponentDidMount(){\r\n  this.getMedicalRecord();\r\n};\r\n\r\ngetMedicalRecord=()=>{\r\n  fetch(`http://162.243.165.50:4000/GetMedicalHistory/${window.localStorage.userID}`)\r\n  .then(result => result.json())\r\n  .then(res => this.setState({\r\n    patientID: res.data[0].PatientID,\r\n    editImmunizationRecord: res.data[0].ImmunizationRecord,\r\n    editMedicalCondition: res.data[0].MedicalCondition,\r\n    editAllergies: res.data[0].Allergies,\r\n    editProcedureRecord: res.data[0].ProcedureRecord\r\n  }))\r\n  .catch(err => console.error(err))\r\n};\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n    return (\r\n      <div>\r\n          <Paper className={classes.root} elevation={2}>\r\n              <Typography variant=\"h3\" >Patient Medical Record</Typography>\r\n              <br />\r\n              <Typography variant=\"h4\" >Summary</Typography>\r\n              <TextField\r\n                label=\"Patient ID\"\r\n                margin=\"normal\"\r\n                className={classes.textField}\r\n                value={this.state.patientID}\r\n                disabled\r\n                onChange={this.handleChange}\r\n              />\r\n              <br/>\r\n              <Grid container spacing={24}>\r\n                <Grid item sm>\r\n                <TextField\r\n                  label=\"Immunization Record\"\r\n                  className={classes.textField}\r\n                  value={this.state.editImmunizationRecord}\r\n                  margine=\"normal\"\r\n                  multiline\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  rows=\"8\"\r\n                  disabled\r\n                  onChange={this.handleChangeImmunizationRecord}\r\n                />\r\n              </Grid>\r\n                <Grid item sm>\r\n                  <TextField\r\n                  label=\"Medical Condition\"\r\n                  className={classes.textField}\r\n                  value={this.state.editMedicalCondition}\r\n                  margine=\"normal\"\r\n                  multiline\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  rows=\"8\"\r\n                  disabled\r\n                  onChange={this.handleChangeMedicalCondition}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              \r\n              <Grid container spacing={24}>\r\n                <Grid item sm>\r\n                <TextField\r\n                  label=\"Allergies\"\r\n                  className={classes.textField}\r\n                  value={this.state.editAllergies}\r\n                  margine=\"normal\"\r\n                  multiline\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  rows=\"8\"\r\n                  disabled\r\n                  onChange={this.handleChangeAllergies}\r\n                />\r\n              </Grid>\r\n                <Grid item sm>\r\n                  <TextField\r\n                  label=\"Procedures Record\"\r\n                  className={classes.textField}\r\n                  value={this.state.editProcedureRecord}\r\n                  margine=\"normal\"\r\n                  multiline\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  rows=\"8\"\r\n                  disabled\r\n                  onChange={this.handleChangeProcedureRecord}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Divider variant=\"middle\"/>\r\n          </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMedicalInformation.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MedicalInformation);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Paper, Divider, Button, TextField, Typography, FormControl, withStyles, Grid } from \"@material-ui/core\";\r\nimport MaskedInput from 'react-text-mask';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst styles = theme => ({\r\n\tpaperForm: {\r\n\t\twidth: '75%',\r\n        display: \"flex\",\r\n        backgroundColor: \"#e0e0e0\",\r\n\t\tpadding: theme.spacing.unit*3,\r\n\t\theight: '98%',\r\n\t\tmargin:\"auto\",\r\n\t\tmarginTop: '2%',\r\n\t},\r\n  \tcontainer: {\r\n\t\tdisplay: 'flex',\r\n    \tflexDirection: 'column',\r\n  \t},\r\n\t  editerButtons: {\r\n\t\tmargin: theme.spacing.unit,\r\n\t\tfontSize: 16,\r\n\t},\r\n});\r\n\r\n\r\nclass ProfileInfo extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n        this.state = {\r\n            first: \"\",\r\n            last: \"\",\r\n            user: \"\",\r\n\t\t\tpass: \"\",\r\n\t\t\temail:\"\",\r\n\t\t\tcellnumber: \"\",\r\n            streetaddr: \"\",\r\n            cityaddr:\"\",\r\n            stateaddr: \"\",\r\n            zipaddr: \"\",\r\n            dob:\"\",\r\n\t\t\tssn: \"\",\r\n\t\t\tsex: \"\",\r\n\t\t\tinsuranceID: 0,\r\n\t\t\tediting: false\r\n\t\t};\r\n\t\tthis.handleChange=this.handleChange.bind(this);\r\n\t}\r\n\tretrieveUserInfo=()=> {\r\n\t\tif(window.localStorage.userType === \"2\"){\r\n\t\t\tfetch(`http://162.243.165.50:4000/Patient/${window.localStorage.LoginTableID}`)\r\n\t\t\t.then(result => result.json())\r\n\t\t\t.then(res => this.setState( {\tfirst: res.data[0].FirstName,\r\n\t\t\t\t\t\t\t\t\t\t\tlast: res.data[0].LastName,\r\n\t\t\t\t\t\t\t\t\t\t\tuser: res.data[0].Username, \r\n\t\t\t\t\t\t\t\t\t\t\tpass: res.data[0].Password, \r\n\t\t\t\t\t\t\t\t\t\t\temail: res.data[0].Email,\r\n\t\t\t\t\t\t\t\t\t\t\tinsuranceID: res.data[0].InsuranceClientID,\r\n\t\t\t\t\t\t\t\t\t\t\tdob: res.data[0].DOB,\r\n\t\t\t\t\t\t\t\t\t\t\tssn: res.data[0].SSN, \r\n\t\t\t\t\t\t\t\t\t\t\tsex: res.data[0].SexID, \r\n\t\t\t\t\t\t\t\t\t\t\tcellnumber: res.data[0].CellNumber,\r\n\t\t\t\t\t\t\t\t\t\t\tstreetaddr:res.data[0].AddressStreet,\r\n\t\t\t\t\t\t\t\t\t\t\tcityaddr: res.data[0].AddressCity,\r\n\t\t\t\t\t\t\t\t\t\t\tstateaddr: res.data[0].AddressStateID,\r\n\t\t\t\t\t\t\t\t\t\t\tzipaddr: res.data[0].AddressZip}))\r\n\t\t\t.catch(err => console.log(err));\r\n\t    }\r\n\t    else{\r\n\t\t\tfetch(`http://162.243.165.50:4000/Employee/${window.localStorage.LoginTableID}`)\r\n\t\t\t.then(result => result.json())\r\n\t\t\t.then(res => this.setState( {\tfirst: res.data[0].FirstName,\r\n\t\t\t\t\t\t\t\t\t\t\tlast: res.data[0].LastName,\r\n\t\t\t\t\t\t\t\t\t\t\tuser: res.data[0].Username, \r\n\t\t\t\t\t\t\t\t\t\t\tpass: res.data[0].Password, \r\n\t\t\t\t\t\t\t\t\t\t\temail: res.data[0].Email,\r\n\t\t\t\t\t\t\t\t\t\t\tdob: res.data[0].DOB,\r\n               \t\t\t\t\t\t\t\tssn: res.data[0].SSN,\r\n\t\t\t\t\t\t\t\t\t\t\tsex: res.data[0].SexID, \r\n\t\t\t\t\t\t\t\t\t\t\tcellnumber: res.data[0].CellNumber,\r\n\t\t\t\t\t\t\t\t\t\t\tstreetaddr:res.data[0].AddressStreet,\r\n\t\t\t\t\t\t\t\t\t\t\tcityaddr: res.data[0].AddressCity,\r\n\t\t\t\t\t\t\t\t\t\t\tstateaddr: res.data[0].AddressStateID,\r\n\t\t\t\t\t\t\t\t\t\t\tzipaddr: res.data[0].AddressZip}))\r\n\t\t\t.catch(err => console.log(err))\r\n\t    }\r\n\t}\r\n\tupdateUserInfo=()=>{\r\n        //backend call to add the user to the backend\r\n        fetch(`http://162.243.165.50:4000/UpdateUser`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n\t\t\t\tUserID: window.localStorage.userID,\r\n\t\t\t\tInsuranceID: this.state.insuranceID,\r\n                FirstName:this.state.first,\r\n                LastName:this.state.last,\r\n                Sex: this.state.sex,\r\n                Email: this.state.email,\r\n                username: this.state.user,\r\n                password: this.state.pass,\r\n                CellNumber: this.state.cellnumber,\r\n                AddressStreet: this.state.streetaddr,\r\n                AddressCity: this.state.cityaddr,\r\n                AddressState: this.state.stateaddr,\r\n                AddressZip: this.state.zipaddr,\r\n                userType: window.localStorage.userType,\r\n                LoginTableID: window.localStorage.LoginTableID,\r\n            })\r\n\t\t})\r\n        .catch(err => console.log(err))\r\n        \r\n    }\r\n\tEmptyEntries(){\r\n        return  this.state.first === \"\"||\r\n                this.state.last === \"\" ||\r\n                this.state.sex === \"\" ||\r\n                this.state.email === \"\" ||\r\n                this.state.usern === \"\" ||\r\n                this.state.pass === \"\" ||\r\n                this.state.cellnumber === \"\" ||\r\n                this.state.streetaddr=== \"\" ||\r\n                this.state.cityaddr === \"\" ||\r\n                this.state.stateaddr === \"\" ||\r\n\t\t\t\tthis.state.zipaddr === \"\" ||\r\n\t\t\t\tthis.state.dob.length !== 10 ||\r\n                this.state.ssn.length !== 11 \r\n    }\r\n\tvalidateUsername(){\r\n\t\tif(this.state.user.length >=6 || this.state.user.length <=1 ){\r\n        \treturn true\r\n    \t}\r\n    \treturn false\r\n\t}\r\n\tvalidatePassword(){\r\n    \tif(this.state.pass.length >=6 || this.state.pass.length <=1 ){\r\n        \treturn true\r\n    \t}\r\n    \treturn false\r\n\t}\r\n\tSSNMaskCustom(props) {\r\n\t\tconst {...other } = props;\r\n\t\treturn (\r\n\t\t  <MaskedInput\r\n\t\t\tguide={false}\r\n\t\t\t{...other}\r\n\t\t\tmask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\r\n\t\t\tplaceholderChar={'\\u2000'}\r\n\t\t\tshowMask\r\n\t\t  />\r\n\t\t);\r\n\t}\r\n\tPhoneMaskCustom(props) {\r\n\t\tconst {...other } = props;\r\n\t  \r\n\t\treturn (\r\n\t\t  <MaskedInput\r\n\t\t\t{...other}\r\n\t\t\tguide={false}\r\n\t\t\tmask={[/[1-9]/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\r\n\t\t\tplaceholderChar={'\\u2000'}\r\n\t\t\tshowMask\r\n\t\t  />\r\n\t\t);\r\n\t}\r\n\tcomponentDidMount(){\r\n        this.retrieveUserInfo();\r\n    }\r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    editMode = _ => {\r\n        this.setState({\r\n            editing: true\r\n        });\r\n    }\r\n    saveChanges = _ => {\r\n\t\tthis.updateUserInfo();\r\n\t\tthis.retrieveUserInfo();\r\n    \tthis.setState({\r\n\t\t\tediting: false\r\n\t\t});\r\n    }\r\n    revertChanges = _ => {\r\n\t\tthis.retrieveUserInfo();\r\n        this.setState({\r\n            editing: false\r\n\t\t});\r\n    }\r\n//for implementation of user menu, Paper className will be removed and\r\n// user menu will define css styles. \r\n  render() { \r\n\t  const {classes}=this.props;\r\n    return (\r\n      <div>\r\n          <Paper className={classes.paperForm}>\r\n            <form  noValidate autoComplete=\"off\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{window.localStorage.userType=== \"2\" ? (\r\n\t\t\t\t\t\t<Typography variant=\"h5\">Welcome {this.state.first}</Typography>\r\n\t\t\t\t\t):(\r\n\t\t\t\t\t\t<Typography variant=\"h5\">Welcome Dr. {this.state.last}</Typography>\t\t\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<Divider variant=\"middle\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Typography variant=\"h6\" >User Information</Typography>\r\n\t\t\t\t\t<Grid container spacing={8}>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t<FormControl  margin=\"dense\" fullWidth>\r\n\t\t\t\t\t\t\t\t<TextField disabled={!this.state.editing}\r\n\t\t\t\t\t\t\t\t\tname=\"first\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"First Name\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.first}\r\n\t\t\t\t\t\t\t\t\tdefaultValue={this.state.first}\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t<FormControl  margin=\"dense\" fullWidth>\r\n\t\t\t\t\t\t\t\t<TextField disabled={!this.state.editing}\r\n\t\t\t\t\t\t\t\t\tname=\"last\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Last Name\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.last}\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={5}>\r\n\t\t\t\t\t\t\t<FormControl  margin=\"dense\" fullWidth>\r\n\t\t\t\t\t\t\t\t<TextField disabled={!this.state.editing}\r\n\t\t\t\t\t\t\t\t\tname=\"streetaddr\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Street Address\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.streetaddr}\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={4}>\r\n\t\t\t\t\t\t\t<FormControl  margin=\"dense\" fullWidth>\r\n\t\t\t\t\t\t\t\t<TextField disabled={!this.state.editing}\r\n\t\t\t\t\t\t\t\t\tname=\"cityaddr\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"City\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.cityaddr}\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={1}>\r\n\t\t\t\t\t\t\t<FormControl  margin=\"dense\" fullWidth>\r\n\t\t\t\t\t\t\t\t<TextField disabled={!this.state.editing}\r\n\t\t\t\t\t\t\t\t\tname=\"stateaddr\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"State\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.stateaddr}\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={2}>\r\n\t\t\t\t\t\t\t<FormControl  margin=\"dense\" fullWidth>\r\n\t\t\t\t\t\t\t\t<TextField disabled={!this.state.editing}\r\n\t\t\t\t\t\t\t\t\tname=\"zipaddr\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Zip Code\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.zipaddr}\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={12}>\r\n\t\t\t\t\t\t\t<FormControl  margin=\"dense\">\r\n\t\t\t\t\t\t\t\t<TextField disabled\r\n\t\t\t\t\t\t\t\t\tname=\"dob\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Birthdate\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.dob}\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={12}>\r\n\t\t\t\t\t\t\t<FormControl  margin=\"dense\" >\r\n\t\t\t\t\t\t\t\t<TextField disabled={!this.state.editing}\r\n\t\t\t\t\t\t\t\t\tname=\"cellnumber\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Contact Phone\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.cellnumber}\r\n\t\t\t\t\t\t\t\t\tinputComponent={this.PhoneMaskCustom(classes)}\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={12}>\r\n\t\t\t\t\t\t\t<FormControl  margin=\"dense\" >\r\n\t\t\t\t\t\t\t\t<TextField disabled={!this.state.editing}\r\n\t\t\t\t\t\t\t\t\tname=\"ssn\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"SSN\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tvalue={ \"***-\"+\"**-\"+this.state.ssn.substring(7,11)}\r\n\t\t\t\t\t\t\t\t\tinputComponent={this.SSNMaskCustom(classes)}\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t{ window.localStorage.userType === \"2\" &&\r\n\t\t\t\t\t\t<Grid item xs={12} sm={12}>\r\n\t\t\t\t\t\t\t<FormControl  margin=\"dense\" >\r\n\t\t\t\t\t\t\t\t<TextField disabled={!this.state.editing}\r\n\t\t\t\t\t\t\t\t\tname=\"insuranceID\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Insurance ID\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.insuranceID}\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Divider variant=\"middle\" />\r\n\t\t\t\t</div> \r\n\t\t\t\t{/* //OPENHERE */}\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Typography variant=\"h6\">Account Information</Typography>\r\n\t\t\t\t\t<Grid container spacing={8}>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={5}>\r\n\t\t\t\t\t\t\t<FormControl  margin=\"dense\" fullWidth>\r\n\t\t\t\t\t\t\t\t<TextField disabled={!this.state.editing}\r\n\t\t\t\t\t\t\t\t\tname=\"user\" \r\n\t\t\t\t\t\t\t\t\tlabel=\"Username\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.user}\r\n\t\t\t\t\t\t\t\t\terror={!this.validateUsername()}\r\n\t\t\t\t\t\t\t\t\thelperText={this.validateUsername() ? \"\":\"Username is not valid\"}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t<FormControl margin=\"dense\" fullWidth>\r\n\t\t\t\t\t\t\t\t<TextField disabled={!this.state.editing}\r\n\t\t\t\t\t\t\t\t\tname=\"email\" \r\n\t\t\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.email}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t<FormControl  margin=\"dense\" fullWidth>\r\n\t\t\t\t\t\t\t\t<TextField disabled={!this.state.editing}\r\n\t\t\t\t\t\t\t\t\tname=\"pass\"\r\n\t\t\t\t\t\t\t\t\ttype=\"password\" \r\n\t\t\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.pass}\r\n\t\t\t\t\t\t\t\t\terror={!this.validatePassword()}\r\n\t\t\t\t\t\t\t\t\thelperText={this.validatePassword() ? \"\":\"Password is not valid\"}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Divider variant=\"middle\"/>\r\n\t\t\t\t</div>\r\n                {!this.state.editing ? (\r\n\t                <div>\r\n\t\t\t\t\t\t{this.retrieveUserInfo}\r\n\t\t\t\t\t\t<FormControl margin=\"none\">\r\n\t\t\t\t\t\t <Button variant=\"contained\" size=\"small\" className={classes.editerButtons} onClick={this.editMode}>\r\n\t\t\t        \t\t<EditIcon />\r\n\t\t\t        \t\t\tEdit\r\n\t\t\t      \t\t</Button>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t      \t\t</div>\r\n\t      \t\t):(\r\n\t\t      \t\t<div>\r\n\t\t\t      \t\t<FormControl margin=\"right\">\r\n\t\t\t\t\t\t \t<Button disabled={this.EmptyEntries()} variant=\"contained\" size=\"small\" className={classes.editerButtons} onClick={this.saveChanges}>\r\n\t\t\t        \t\t\t<SaveIcon />\r\n\t\t\t        \t\t\t\tSave\r\n\t\t\t      \t\t\t</Button>\r\n\t\t\t\t\t\t\t  </FormControl>\r\n\t\t\t\t\t\t\t  <FormControl margin=\"left\">\r\n\t\t\t\t\t\t \t<Button variant=\"contained\" size=\"small\" className={classes.editerButtons} onClick={this.revertChanges} >\r\n\t\t\t        \t\t\t<CancelIcon />\r\n\t\t\t        \t\t\t\tRevert\r\n\t\t\t      \t\t\t</Button>\r\n\t\t\t      \t\t</FormControl>\r\n\t\t      \t\t</div>\r\n\t\t      \t)}  \r\n\t\t\t\t\t\t{/* //CLOSE HERER */}\r\n\t\t\t</form>\r\n          </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProfileInfo.propTypes={\r\n\tclasses: PropTypes.object.isRequired\r\n};\r\n//PhoneMaskCustom.propTypes = {\r\n//\tinputRef: PropTypes.func.isRequired,\r\n//};\r\nexport default withStyles (styles)(ProfileInfo);\r\n","import React, { Component } from 'react';\r\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\r\nimport MedicalInformation from '../Components/Profile/MedicalInformation';\r\nimport ProfileInfo from '../Components/Profile/ProfileInfo';\r\nimport { withStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nconst styles = theme =>({\r\n  root: {\r\n      height: \"200vh\",\r\n      backgroundColor: \"#a09d9d\",\r\n\r\n  },\r\n});\r\n\r\nclass Profile extends Component {\r\n  render() { \r\n    const{classes}=this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <NavigationBar title={\"My Profile\"} Tab={1}/>\r\n        <ProfileInfo/>\r\n        {window.localStorage.userType === \"2\" ? (\r\n          <MedicalInformation/>\r\n        ):(\r\n          <div></div>\r\n        )}\r\n        \r\n        \r\n       \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProfile.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Profile);\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport WhichFacility from '../Appointments/WhichFacility';\r\n\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n      margin: theme.spacing.unit,\r\n      fontSize: 32,\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing.unit * 3,\r\n        overflowX: 'auto',\r\n      },\r\n      table: {\r\n        minWidth: 800,\r\n      },\r\n});\r\n\r\nclass ModifyFacility extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\topenForm: false,\r\n\t\t\tselectedFacility: \"\",\r\n\t\t\tFacilities: this.props.val.Facilities,\r\n\t\t\tFacilityID: this.props.Sub_FacilityID\r\n\t\t}\r\n\t}\r\n\t\r\n\tcomponentDidMount(){\r\n        //this.getFacilities();\r\n    }\r\n\t\r\n\t// Get Facility information\r\n\t/*getFacilities=()=> {\r\n        fetch(`http://162.243.165.50:4000/Facilities`)\r\n        .then(result => result.json())\r\n        .then(res => this.setState({ Facilities:res.data }))\r\n        .catch(err => console.log(err))\r\n    };*/\r\n\t\r\n\tgetFacilityIDFromName(lookUpName){\r\n\t\tfor(var i = 0; i < this.state.Facilities.length; i++){\r\n\t\t\tif(this.state.Facilities[i].FacilityName === lookUpName){\r\n\t\t\t\treturn this.state.Facilities[i].FacilityID\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1\r\n\t}\r\n\t\r\n\thandleClickOpen = () => {\r\n        //this.getFacilities();\r\n        this.setState({ Facilities: this.props.val.Facilities,\r\n\t\t\t\t\t\topenForm: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ openForm: false });\r\n    };\r\n\t\r\n\thandleChange = e =>{\r\n        this.setState({\r\n            selectedFacility: this.state.Facilities[e.target.value].FacilityName,\r\n\t\t\t[e.target.name] : e.target.value\r\n        })\r\n    }\r\n\t\r\n\thandleDoneSelected = () =>{\r\n\t\tif(this.state.selectedFacility !== \"\"){\r\n\t\t\tfor(var i=0; i < this.props.val.WorkSchedule.length; i++){\r\n\t\t\t\tif(this.props.val.WorkSchedule[i].WeekDayID === this.props.Sub_DayID){\r\n\t\t\t\t\tconsole.log(\"Facility: \" + this.state.selectedFacility)\r\n\t\t\t\t\tconsole.log(this.props.val.WorkSchedule[i])\r\n\t\t\t\t\tthis.props.val.WorkSchedule[i].FacilityName = this.state.selectedFacility\r\n\t\t\t\t\tthis.props.val.WorkSchedule[i].FacilityID = this.getFacilityIDFromName(this.state.selectedFacility)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconsole.log(\"UPDATING\")\r\n\t\t\tfetch(`http://162.243.165.50:4000/UpdateWorkScheduleDay/`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                UpdateDayID: this.props.Sub_DayID,\r\n\t\t\t\tEmployeeID: window.localStorage.userID,\r\n\t\t\t\tNewFacilityID: this.getFacilityIDFromName(this.state.selectedFacility)\r\n            })\r\n        })\r\n        .then(this.grabAppointments)\r\n        .catch(err => console.log(err));\r\n\t\t}\r\n\t\tthis.handleClose()\r\n\t\tsetTimeout(function(){\r\n\t\t\twindow.location.replace('/Scheduling')\r\n\t\t}, 200);\r\n\t}\r\n\t\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<Button variant=\"contained\" color=\"inherit\" className={this.props.Button} fullWidth onClick={this.handleClickOpen}>\r\n                    Change Facility\r\n                </Button>\r\n\t\t\t\t<Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\r\n\t\t\t\t\t<DialogTitle id=\"form-dialog-title\"></DialogTitle>\r\n\t\t\t\t\t<DialogContent>\r\n                        <DialogContentText>\r\n                            Please select a new facilty for this weekday\r\n                        </DialogContentText>\r\n                        <WhichFacility val={this.state} handleChange={this.handleChange}/>\r\n                    </DialogContent>\r\n\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t<Button onClick={this.handleDoneSelected} disabled={this.state.FacilityID===\"\"} color=\"primary\">\r\n                            Done\r\n                        </Button>\r\n                    </DialogActions>\r\n\t\t\t\t</Dialog>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nModifyFacility.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ModifyFacility);\r\n\r\n","import { TextField, MenuItem } from \"@material-ui/core\";\r\nimport React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nfunction WhichDay(props){\r\n    \r\n    return(\r\n        <div>\r\n            <FormControl margin=\"normal\" fullWidth>\r\n                    <TextField\r\n                        id=\"DayID\"\r\n                        select\r\n                        label=\"Please Choose A Day\"\r\n                        name=\"DayID\"\r\n                        variant=\"standard\"\r\n                        onChange={props.handleChange}\r\n                        value={props.val.DayID}   \r\n                        required                   \r\n                    >\r\n                        {props.val.OpenDays.map(option => (\r\n                            <MenuItem key={option.DayID} value={option.DayID}>\r\n                                {option.WeekDay}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WhichDay;","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport WhichFacility from '../Appointments/WhichFacility';\r\nimport WhichDay from './WhichDay';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n      margin: theme.spacing.unit,\r\n      fontSize: 32,\r\n    },\r\n});\r\n\r\nclass AddNewDay extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n\t\t\topenForm: false,\r\n\t\t\tFacilities: [],\r\n\t\t\tOpenDays: [],\r\n\t\t\tDayID: -1,\r\n\t\t\tFacilityID: -1,\r\n\t\t}\r\n\t}\r\n\t\r\n\tgetOpenDaysList(){\r\n\t\tvar newDayList = []\r\n\t\tvar shouldAddNew = true\r\n\t\tfor(var i = 0; i < this.props.val.Weekdays.length; i++){\r\n\t\t\tfor(var k = 0; k < this.props.val.WorkSchedule.length; k++){\r\n\t\t\t\tif(this.props.val.WorkSchedule[k].WeekDayID === this.props.val.Weekdays[i].DayID)\r\n\t\t\t\t\tshouldAddNew = false\r\n\t\t\t}\r\n\t\t\tif(shouldAddNew){\r\n\t\t\t\tnewDayList.push(this.props.val.Weekdays[i])\r\n\t\t\t}\r\n\t\t\tshouldAddNew = true\r\n\t\t}\r\n\t\treturn newDayList\r\n\t}\r\n\t\r\n\thandleClickOpen = () => {\r\n        this.setState({ Facilities: this.props.val.Facilities,\r\n\t\t\t\t\t\tOpenDays : this.getOpenDaysList(),\r\n\t\t\t\t\t\topenForm: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ openForm: false,\r\n\t\t\t\t\t\tDayID: -1,\r\n\t\t\t\t\t\tFacilityID: -1 });\r\n    };\r\n\t\r\n\thandleChange = e =>{\r\n        this.setState({\r\n\t\t\t[e.target.name] : e.target.value\r\n        })\r\n    }\r\n\t\r\n\thandleConfirmChange = () => {\r\n\t\tfetch(`http://162.243.165.50:4000/AddNewWorkSchedule/`, {\r\n\t\tmethod:\"POST\",\r\n        headers: {\r\n            \"Content-Type\":\"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n            DayID: this.state.DayID,\r\n\t\t\tEmployeeID: window.localStorage.userID,\r\n\t\t\tFacilityID: this.state.FacilityID\r\n        })})\r\n\t\tconsole.log(\"DayID : \" + this.state.DayID)\r\n\t\tconsole.log(\"EmployeeID : \" + window.localStorage.userID)\r\n\t\tconsole.log(\"FacilityID : \" + this.state.FacilityID)\r\n\t\tthis.handleClose()\r\n\t\tsetTimeout(function(){\r\n\t\t\twindow.location.replace('/Scheduling')\r\n\t\t}, 200);\r\n\t};\r\n\t\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>\r\n                    Add New Day\r\n                </Button>\r\n                <Dialog open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Add a new day</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Please fill out the information for a new day\r\n                        </DialogContentText>\r\n\t\t\t\t\t\t<WhichFacility val={this.state} handleChange={this.handleChange}/>\r\n\t\t\t\t\t\t<WhichDay val={this.state} handleChange={this.handleChange}/>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n\t\t\t\t\t\t<Button onClick={this.handleConfirmChange} color=\"primary\">\r\n                            Confirm\r\n                        </Button>\r\n                        <Button onClick={this.handleClose} color=\"secondary\">\r\n                            Cancel\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nAddNewDay.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  export default withStyles(styles)(AddNewDay);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Typography, FormControl, withStyles, Grid } from \"@material-ui/core\";\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ModifyFacility from './ModifyFacility';\r\nimport AddNewDay from './AddNewDay';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n//import WhichFacility from '../Appointments/WhichFacility';'\r\n\r\nconst styles = theme => ({\r\n\troot: {\r\n        width: '100%',\r\n        alignItems: \"center\",\r\n        display: \"flex\",\r\n        height: \"100vh\",\r\n        flexDirection: 'column',\r\n        backgroundColor: \"#a09d9d\",\r\n        padding: theme.spacing.unit*3,\r\n        margin:\"auto\",\r\n  \r\n    },\r\n    AdditionButton: {\r\n        marginLeft:\"70%\",\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        backgroundColor: \"#a09d9d\",\r\n        padding: theme.spacing.unit*3,\r\n  \r\n    },\r\n    Button: {\r\n        marginTop: '.5%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '20%',\r\n        flexShrink: 0,\r\n      },\r\n      secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n        flexBasis: '100%',\r\n        margin: 'auto'\r\n      },\r\n});\r\n\r\nclass DaySchedule extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\topenForm: false, // Toggle for dialog box when removing day\r\n\t\t\tselectedDayID: -1, // Selected day for removal assigned when opening remove day box\r\n\t\t\tFacilityID: \"\", // Selected facility to be changed\r\n\t\t\tWorkSchedule: [], // WorkSchedule for specified Employee\r\n            Facilities: [], // All Facility information\r\n            Weekdays: [] // All WeekDay information \r\n        };\r\n\t\tthis.handleChange=this.handleChange.bind(this);\r\n\t}\r\n\t\r\n\tcomponentDidMount(){\r\n        this.grabWorkSchedule();\r\n\t\tthis.getFacilities();\r\n\t\tthis.getWeekday();\r\n    }\r\n\t\r\n\t// Get the WorkSchedule list for specified employee\r\n\tgrabWorkSchedule=()=>{\r\n\t\tfetch(`http://162.243.165.50:4000/WorkSchdule/${window.localStorage.userID}`)\r\n        .then(result => result.json())\r\n        .then(res => this.setState({ WorkSchedule:res.data[0]}))\r\n        .catch(err => console.log(err));\r\n\t}\r\n\t\r\n\t// Get Facility information\r\n\tgetFacilities=()=> {\r\n        fetch(`http://162.243.165.50:4000/Facilities`)\r\n        .then(result => result.json())\r\n        .then(res => this.setState({ Facilities:res.data }))\r\n        .catch(err => console.log(err))\r\n    };\r\n\t\r\n\t// Get Weekday information\r\n\tgetWeekday=()=> {\r\n        fetch(`http://162.243.165.50:4000/Weekday`)\r\n        .then(result => result.json())\r\n        .then(res => this.setState({ Weekdays:res.data }))\r\n        .catch(err => console.log(err))\r\n    };\r\n\t\r\n\thandleChange = panel => (event, expanded) => {\r\n        this.setState({\r\n            expanded: expanded ? panel : false,\r\n        });\r\n    }\r\n\t\r\n\thandleClickOpen = (dayID) => {\r\n\t\tthis.setState({selectedDayID: dayID});\r\n        this.setState({ openForm: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ openForm: false });\r\n    };\r\n\t\r\n\thandleConfirmRemove = () => {\r\n\t\tconsole.log(this.state.selectedDayID)\r\n\t\tconsole.log(this.state.WorkSchedule)\r\n\t\tfetch(`http://162.243.165.50:4000/RemoveWorkScheduleDay/`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                RemoveDayID: this.state.selectedDayID,\r\n\t\t\t\tEmployeeID: window.localStorage.userID,\r\n            })\r\n        })\r\n        .then(this.grabAppointments)\r\n        .catch(err => console.log(err));\r\n\t\tthis.handleClose()\r\n\t\tsetTimeout(function(){\r\n\t\t\twindow.location.replace('/Scheduling')\r\n\t\t}, 200);\r\n\t}\r\n\t\r\n\tgetDayName(dayID){\r\n\t\tfor(var i = 0; i < this.state.Weekdays.length; i++){\r\n\t\t\tif(this.state.Weekdays[i].DayID === dayID){\r\n\t\t\t\treturn this.state.Weekdays[i].WeekDay\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\trender(){\r\n\t\tconst {classes}=this.props;\r\n\t\tconst { expanded } = this.state;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className={classes.root}>\r\n\t\t\t\t\t{this.state.WorkSchedule.map(option => (\r\n\t\t\t\t\t\t<FormControl key={option.WeekDayID} fullWidth>\r\n\t\t\t\t\t\t\t<ExpansionPanel square expanded={expanded === option.WeekDayID}  onChange={this.handleChange(option.WeekDayID)}>\r\n\t\t\t\t\t\t\t\t<ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n\t\t\t\t\t\t\t\t\t<Typography className={classes.heading}>Day:  <b>{option.WeekDay}</b></Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography className={classes.heading}>Facility:  <b>{option.FacilityName}</b></Typography>\r\n\t\t\t\t\t\t\t\t</ExpansionPanelSummary>\r\n\t\t\t\t\t\t\t\t<ExpansionPanelDetails>\r\n\t\t\t\t\t\t\t\t\t<Typography className={classes.secondaryHeading}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid container spacing={8}>\r\n\t\t\t\t                            <Grid item xs={12} sm={9}>\r\n                                                <ModifyFacility  val={this.state} Button={classes.Button} Sub_DayID={option.WeekDayID} Sub_FacilityID={option.FacilityID}/>\r\n                                            </Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm={3}>\r\n                                                <Button fullWidth variant=\"contained\" className={classes.Button} onClick={()=>this.handleClickOpen(option.WeekDayID)} color=\"secondary\" marginTop=\"10%\">\r\n                                                    Remove Day\r\n                                                </Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogTitle id=\"form-dialog-title\"></DialogTitle>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogContent>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogContentText>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAre you sure you want to remove {this.getDayName(this.state.selectedDayID)} from your Schedule?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DialogContentText>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</DialogContent>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button className={classes.Button} onClick={this.handleClose} color=\"primary\" variant=\"contained\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNo\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button className={classes.Button} onClick={this.handleConfirmRemove} color=\"secondary\" variant=\"contained\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tYes\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</DialogActions>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Dialog>\r\n                                            </Grid>\r\n                                        </Grid>\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</ExpansionPanelDetails>\r\n\t\t\t\t\t\t\t</ExpansionPanel>\r\n\t\t\t\t\t\t</FormControl>\t\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<div className={classes.AdditionButton}>\r\n                        <AddNewDay val={this.state} Button={classes.Button}/>\r\n                    </div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nDaySchedule.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DaySchedule);","import React, { Component } from 'react';\r\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\r\nimport DaySchedule from '../Components/Scheduling/DaySchedule';\r\n\r\nclass Scheduling extends Component {\r\n  render() { \r\n    return (\r\n      <div>\r\n        <NavigationBar title={\"My Schedule\"} Tab={2}/>\r\n        <DaySchedule/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Scheduling;\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles, Typography, Checkbox, FormControlLabel } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nconst styles = theme =>({\r\n    Button: {\r\n        marginTop: '2%',\r\n    },\r\n});\r\n\r\n\r\nclass FacilityReports extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            openForm: false,\r\n            checkAllDates: false,\r\n            ChosenFacility: \"\",\r\n            MinimumDate: null,\r\n            MaximumDate: null,\r\n            MinimumDateDB: \"null\",\r\n            MaximumDateDB: \"null\",\r\n            Facilities: [],\r\n            Report:[],\r\n\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.uploadFacilities();\r\n    }\r\n    uploadDoctors(){\r\n\r\n    }\r\n    fetchFacilityReport(){\r\n        \r\n        fetch(`http://162.243.165.50:4000/FacilityAppointmentReport/${this.state.ChosenFacility}/${this.state.MinimumDateDB}/${this.state.MaximumDateDB}`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Report:Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    fetchDoctorReport(){\r\n        fetch(`http://162.243.165.50:4000/DoctorReport/${this.state.ChosenFacility}`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ DoctorsCount:Response.data[0].Count }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    uploadFacilities(){\r\n        fetch(`http://162.243.165.50:4000/Facilities`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Facilities:Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    MinDateChange = (d) =>{\r\n        let ApptDate=new Date(d)\r\n        ApptDate = this.FormatDate(ApptDate);\r\n        this.setState({MinimumDateDB:ApptDate});\r\n        this.setState({\r\n            MinimumDate: d\r\n        })\r\n    }\r\n    MaxDateChange = (d) =>{\r\n        let ApptDate=new Date(d)\r\n        ApptDate = this.FormatDate(ApptDate);\r\n        this.setState({MaximumDateDB:ApptDate});\r\n        this.setState({\r\n            MaximumDate: d\r\n        })\r\n    }\r\n    FormatDate=(date)=>{\r\n        date = date.getFullYear() + '-' + (this.fixMonth(date)) + '-' + date.getDate();\r\n        return date;\r\n    }\r\n\r\n    fixMonth=(date)=>{\r\n        if(date.getMonth() + 1 < 10){\r\n            return \"0\" +(date.getMonth() +1);\r\n        }\r\n        else{\r\n            return date.getMonth()+1;\r\n        }\r\n    }\r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    handlechoseChange = name => event =>{\r\n        this.setState({ \r\n            [name]: event.target.checked,\r\n            MinimumDate: null,\r\n            MaximumDate: null,\r\n            MinimumDateDB: \"null\",\r\n            MaximumDateDB: \"null\"});\r\n      };\r\n    handleClickOpen = () => {\r\n        this.fetchFacilityReport();\r\n        this.setState({ openForm: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ \r\n            openForm: false,\r\n            checkAllDates: false,\r\n            ChosenFacility: \"\",\r\n            MinimumDate: null,\r\n            MaximumDate: null,\r\n            MinimumDateDB: \"null\",\r\n            MaximumDateDB: \"null\", \r\n            Report:[],\r\n        });\r\n    };\r\n    render(){\r\n        const {classes} = this.props;\r\n        return(\r\n            <div>\r\n            <Typography variant=\"h5\">Facility Report</Typography>\r\n                <FormControl margin=\"normal\" fullWidth>\r\n                    <TextField\r\n                        id=\"ChosenFacility\"\r\n                        select\r\n                        label=\"Please Choose A Facility\"\r\n                        name=\"ChosenFacility\"\r\n                        variant=\"standard\"\r\n                        onChange={this.handleChange}\r\n                        value={this.state.ChosenFacility}   \r\n                        required                   \r\n                    >\r\n                        <MenuItem key=\"-1\" value=\"-1\">\r\n                            All Facilities\r\n                        </MenuItem>\r\n                        {this.state.Facilities.map(option => (\r\n                            <MenuItem key={option.FacilityID} value={option.FacilityID}>\r\n                                {option.FacilityName}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                </FormControl>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox\r\n                        checked={this.state.checkAllDates}\r\n                        onChange={this.handlechoseChange('checkAllDates')}\r\n                        value=\"checkAllDates\"\r\n                        />\r\n                    }\r\n                    label=\"Generate Report for all Dates\"\r\n                />\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <DatePicker\r\n                        label=\"From Date\"\r\n                        name=\"MinimumDate\"\r\n                        value={this.state.MinimumDate}\r\n                        onChange={this.MinDateChange}\r\n                        fullWidth\r\n                        disabled={this.state.checkAllDates}\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <DatePicker\r\n                        label=\"To Date\"\r\n                        name=\"MaximumDate\"\r\n                        value={this.state.MaximumDate}\r\n                        onChange={this.MaxDateChange}\r\n                        fullWidth\r\n                        disabled={this.state.checkAllDates}\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n                <Button variant=\"contained\" color=\"inherit\" fullWidth className={classes.Button} onClick={this.handleClickOpen} disabled={((this.state.MinimumDate === null || this.state.MaximumDate === null) && !this.state.checkAllDates) || this.state.ChosenFacility === \"\"}>\r\n                    Show reports for the Chosen Facility\r\n                </Button>\r\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Here is the Facility Report</DialogTitle>\r\n                    <DialogContent>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>FacilityID</TableCell>\r\n                                    <TableCell align=\"center\">Number of Doctors</TableCell>\r\n                                    <TableCell align=\"center\">Upcoming Appointments</TableCell>\r\n                                    <TableCell align=\"center\">Cancelled Appointments</TableCell>\r\n                                    <TableCell align=\"center\">Completed Appointments</TableCell>\r\n                                    <TableCell align=\"center\">Total Appointments</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {this.state.Report.map(Each => (\r\n                                    <TableRow key={Each.FacilityID}>\r\n                                        <TableCell align=\"center\">{Each.FacilityID}</TableCell>\r\n                                        <TableCell align=\"center\">{Each.DoctorsWorking}</TableCell>\r\n                                        <TableCell align=\"center\">{Each.UpcomingApps}</TableCell>\r\n                                        <TableCell align=\"center\">{Each.CancelledApps}</TableCell>\r\n                                        <TableCell align=\"center\">{Each.CompletedApps}</TableCell>\r\n                                        <TableCell align=\"center\">{Each.totalApps}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>                        \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nFacilityReports.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  \r\nexport default withStyles(styles)(FacilityReports);\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles, Typography, Checkbox, FormControlLabel } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nconst styles = theme =>({\r\n    Button: {\r\n        marginTop: '2%',\r\n    },\r\n});\r\n\r\n\r\nclass DoctorsReport extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            openForm: false,\r\n            checkAllDates: false,\r\n            ChosenDoctor: \"\",\r\n            MinimumDate: null,\r\n            MaximumDate: null,\r\n            MinimumDateDB: \"null\",\r\n            MaximumDateDB: \"null\",\r\n            Doctors: [],\r\n            Report:[],\r\n\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.uploadDoctors();\r\n    }\r\n    fetchDoctorReport(){\r\n        fetch(`http://162.243.165.50:4000/DoctorReport/${this.state.ChosenDoctor}/${this.state.MinimumDateDB}/${this.state.MaximumDateDB}`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Report:Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    uploadDoctors(){\r\n        fetch(`http://162.243.165.50:4000/AllDoctors`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Doctors:Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    MinDateChange = (d) =>{\r\n        let ApptDate=new Date(d)\r\n        ApptDate = this.FormatDate(ApptDate);\r\n        this.setState({MinimumDateDB:ApptDate});\r\n        this.setState({\r\n            MinimumDate: d\r\n        })\r\n    }\r\n    MaxDateChange = (d) =>{\r\n        let ApptDate=new Date(d)\r\n        ApptDate = this.FormatDate(ApptDate);\r\n        this.setState({MaximumDateDB:ApptDate});\r\n        this.setState({\r\n            MaximumDate: d\r\n        })\r\n    }\r\n    FormatDate=(date)=>{\r\n        date = date.getFullYear() + '-' + (this.fixMonth(date)) + '-' + date.getDate();\r\n        return date;\r\n    }\r\n\r\n    fixMonth=(date)=>{\r\n        if(date.getMonth() + 1 < 10){\r\n            return \"0\" +(date.getMonth() +1);\r\n        }\r\n        else{\r\n            return date.getMonth()+1;\r\n        }\r\n    }\r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    handlechoseChange = name => event =>{\r\n        this.setState({ \r\n            [name]: event.target.checked,\r\n            MinimumDate: null,\r\n            MaximumDate: null,\r\n            MinimumDateDB: \"null\",\r\n            MaximumDateDB: \"null\"});\r\n      };\r\n    handleClickOpen = () => {\r\n        this.fetchDoctorReport();\r\n        this.setState({ openForm: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ \r\n            openForm: false,\r\n            checkAllDates: false,\r\n            ChosenDoctor: \"\",\r\n            MinimumDate: null,\r\n            MaximumDate: null,\r\n            MinimumDateDB: \"null\",\r\n            MaximumDateDB: \"null\", \r\n            Report:[],\r\n        });\r\n    };\r\n    render(){\r\n        const {classes} = this.props;\r\n        return(\r\n            <div>\r\n            <Typography variant=\"h5\">Doctor Report</Typography>\r\n                <FormControl margin=\"normal\" fullWidth>\r\n                    <TextField\r\n                        id=\"ChosenDoctor\"\r\n                        select\r\n                        label=\"Please Choose A Facility\"\r\n                        name=\"ChosenDoctor\"\r\n                        variant=\"standard\"\r\n                        onChange={this.handleChange}\r\n                        value={this.state.ChosenDoctor}   \r\n                        required                   \r\n                    >\r\n                        <MenuItem key=\"-1\" value=\"-1\">\r\n                            All Doctors\r\n                        </MenuItem>\r\n                        {this.state.Doctors.map(option => (\r\n                            <MenuItem key={option.EmployeeID} value={option.EmployeeID}>\r\n                                Dr. {option.FirstName} {option.LastName}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                </FormControl>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox\r\n                        checked={this.state.checkAllDates}\r\n                        onChange={this.handlechoseChange('checkAllDates')}\r\n                        value=\"checkAllDates\"\r\n                        />\r\n                    }\r\n                    label=\"Generate Report for all Dates\"\r\n                />\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <DatePicker\r\n                        label=\"From Date\"\r\n                        name=\"MinimumDate\"\r\n                        value={this.state.MinimumDate}\r\n                        onChange={this.MinDateChange}\r\n                        fullWidth\r\n                        disabled={this.state.checkAllDates}\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <DatePicker\r\n                        label=\"To Date\"\r\n                        name=\"MaximumDate\"\r\n                        value={this.state.MaximumDate}\r\n                        onChange={this.MaxDateChange}\r\n                        fullWidth\r\n                        disabled={this.state.checkAllDates}\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n                <Button variant=\"contained\" color=\"inherit\" fullWidth className={classes.Button} onClick={this.handleClickOpen} disabled={((this.state.MinimumDate === null || this.state.MaximumDate === null) && !this.state.checkAllDates) || this.state.ChosenDoctor === \"\"}>\r\n                    Show reports for the Chosen Doctor\r\n                </Button>\r\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Here is the Doctor Report</DialogTitle>\r\n                    <DialogContent>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">EmployeeID</TableCell>\r\n                                    <TableCell align=\"center\">Number of Appointments</TableCell>\r\n                                    <TableCell align=\"center\">Number of Diagnoses</TableCell>\r\n                                    <TableCell align=\"center\">Number of Cancelled Appointments</TableCell>\r\n                                    <TableCell align=\"center\">Number of Days Working in a week</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {this.state.Report.map(Each => (\r\n                                    <TableRow key={Each.EmployeeID}>\r\n                                        <TableCell align=\"center\">{Each.EmployeeID}</TableCell>\r\n                                        <TableCell align=\"center\">{Each.Apps}</TableCell>\r\n                                        <TableCell align=\"center\">{Each.Diagnoses}</TableCell>\r\n                                        <TableCell align=\"center\">{Each.CancelledApps}</TableCell>\r\n                                        <TableCell align=\"center\">{Each.DaysWorking}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>                        \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nDoctorsReport.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  \r\nexport default withStyles(styles)(DoctorsReport);\r\n","import React, { Component } from 'react';\r\nimport FacilityReports from '../Report/FacilityReports';\r\nimport { Paper, withStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport DoctorsReport from './DoctorsReport';\r\n\r\nconst styles = theme =>({\r\n    root: {\r\n        width: '55%',\r\n        alignItems: \"center\",\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        padding: theme.spacing.unit*3,\r\n        marginTop:\"5%\",\r\n        marginBottom:\"5%\",\r\n        margin:\"auto\"\r\n  \r\n    },\r\n});\r\n\r\nclass ReportsGenerator extends Component {\r\n  render() { \r\n    const{classes}=this.props;\r\n    return (\r\n      <div>\r\n          <Paper className={classes.root}>\r\n            <FacilityReports/>\r\n          </Paper>\r\n          <Paper className={classes.root}>\r\n            <DoctorsReport/>\r\n          </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReportsGenerator.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  \r\nexport default withStyles(styles)(ReportsGenerator);\r\n","import React, { Component } from 'react';\r\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\r\nimport ReportsGenerator from '../Components/Report/ReportsGenerator';\r\nimport '../Components/Report/Report.css';\r\n\r\nclass Report extends Component {\r\n  render() { \r\n    return (\r\n      <div className='ReportsPage-image'><div/>\r\n        <div className='ReportsPage-overlay'>\r\n          <NavigationBar title={\"Analytical Reports\"} Tab={3}/>\r\n          <ReportsGenerator/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Report;\r\n","import React from 'react';\r\nimport RegistrationForm from '../Components/Registration/RegistrationForm';\r\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\r\nimport './Home.css';\r\n\r\nclass DoctorRegistration extends React.Component{\r\n    render() {\r\n        return(\r\n            <div className='Home-image'>\r\n                <div className='Home-overlay'>\r\n                    <NavigationBar title={\"Register A New User\"} Tab={4}/>\r\n                    <RegistrationForm/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default DoctorRegistration;","import React, { Component } from 'react';\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport {Route} from 'react-router-dom';\r\nimport Home from './Pages/Home';\r\nimport Appointments from './Pages/Appointments';\r\nimport Registration from './Pages/Registration';\r\nimport Profile from './Pages/Profile';\r\nimport Scheduling from './Pages/Scheduling';\r\nimport Report from './Pages/Report';\r\nimport DoctorRegistration from './Pages/DoctorRegistration';\r\n\r\nclass Paths extends Component{\r\n    state = {\r\n        loggedIn: true,\r\n    }\r\n    render() {\r\n        return(\r\n            <BrowserRouter>\r\n                <div className=\"Routes\">\r\n                    <Route path=\"/\" exact component={Home}/>\r\n                    <Route path=\"/Appointments\" exact component={Appointments}/>\r\n                    <Route path=\"/Registration\" exact component={Registration}/>\r\n                    <Route path=\"/Profile\" exact component={Profile}/>\r\n                    <Route path=\"/Scheduling\" exact component={Scheduling}/>\r\n                    <Route path=\"/Reports\" exact component={Report}/>\r\n                    <Route path=\"/DoctorRegistration\" exact component={DoctorRegistration}/>\r\n                </div>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Paths;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Paths from './Paths';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Paths />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}