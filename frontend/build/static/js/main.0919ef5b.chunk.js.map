{"version":3,"sources":["Components/GeneralComponents/NavigationBar.js","Components/Home/HomeLoginBox.js","Pages/Home.js","Components/Appointments/WhichFacility.js","Components/Appointments/WhichDoctor.js","Components/Appointments/CompleteNewAppointment.js","Components/Appointments/NewAppointmentForm.js","Components/Appointments/AddDiagnosis.js","Components/Appointments/ShowDiagnosis.js","Components/Appointments/ShowPrescriptions.js","Components/Appointments/AddPrescription.js","Components/Appointments/AddSpecilaistReccomendation.js","Components/Appointments/PatientMedicalHistory.js","Components/Appointments/AppointmentHistory.js","Pages/Appointments.js","Components/Registration/BasicInformation.js","Components/Registration/BasicInformationPtTwo.js","Components/Registration/RegistrationForm.js","Pages/Registration.js","Components/Profile/MedicalInformation.js","Components/Profile/ProfileInfoTest.js","Pages/Profile.js","Components/Scheduling/ModifyFacility.js","Components/Scheduling/WhichDay.js","Components/Scheduling/AddNewDay.js","Components/Scheduling/DaySchedule.js","Pages/Scheduling.js","Pages/DoctorRegistration.js","Components/Locator/Mapper.js","Pages/Locator.js","Components/Administration/FacilityReports.js","Components/Administration/DoctorsReport.js","Components/Administration/CheckUpReport.js","Components/Administration/AddAFacility.js","Components/Administration/ChangeAFacility.js","Components/Administration/Facilities.js","Components/Administration/ReportsGenerator.js","Pages/Administration.js","Paths.js","serviceWorker.js","index.js"],"names":["NavigationBar","state","loggedIn","userid","userType","currentTab","_this","props","Tab","AppointmentPageRedirect","window","location","replace","ProfilePageRedirect","SchedulePageRedirect","AdministrationPageRedirect","DocRegistrationRedirect","LocatorPageRedirect","logout","setState","localStorage","setItem","storageLoggedIn","getItem","userID","this","_this$props","classes","title","react_default","a","createElement","className","root","AppBar_default","bar","position","Toolbar_default","Typography_default","variant","BarTitle","index_es","textColor","value","label","onClick","React","Component","withStyles","flexGrow","marginTop","backgroundColor","minHeight","height","MenuIcon","marginLeft","marginRight","HomeLoginBox","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","defineProperty","target","name","handleRegistration","login","fetch","concat","Username","then","result","json","res","data","length","Password","password","LoginTableID","setUserType","catch","err","console","log","getFacilities","searchCity","Facilities","displaySearchRes","_","displayResults","handleClickOpen","openForm","handleClose","displayList","firstName","bind","assertThisInitialized","_this2","RoleID","EmployeeID","updateAppTimes","PatientID","Paper_default","elevation","component","form","FormControl_default","margin","fullWidth","required","htmlFor","autoFocus","onChange","type","submitButton","color","size","Dialog_default","maxWidth","open","onClose","DialogTitle_default","id","noValidate","autoComplete","editerButtons","Search_default","DialogContent_default","Table_default","table","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","map","Each","key","FacilityID","FacilityName","AddressStreet","AddressCity","AddressState","AddressZip","DialogActions_default","theme","width","alignItems","display","flexDirection","padding","spacing","unit","Home","GeneralComponents_NavigationBar","Home_HomeLoginBox","WhichFacility","select","val","option","WhichDoctor","DoctorID","Doctors","FirstName","Reason","inputProps","maxLength","material_ui_pickers_esm","utils","DateFnsUtils","minDate","Date","AppointmentDate","AppointmentDateChange","container","flexWrap","textField","AppointmentTimeID","AppointmentTimes","TimeSlotID","AppointmentTime","NewAppointmentForm","componentDidMount","uploadFacilities","step","DBFormattedDate","d","ApptDate","FormatDate","date","getFullYear","fixMonth","getDate","getMonth","Response","uploadDoctors","Specialist","uploadTimes","method","headers","Content-Type","body","JSON","stringify","AppDate","handleNextStep","handleSubmit","TimeID","setTimeout","handleBackStep","Appointments_WhichFacility","Button_default","disabled","Appointments_WhichDoctor","Appointments_CompleteNewAppointment","Button","ControlPointOutlined_default","icon","DialogContentText_default","getStepInfo","fontSize","&:hover","AddDiagnosis","handleDiagnosisAdd","AppointmentID","Diagnosis","AppID","ShowDiagnosis","uploadDiagnosis","DiagnosisID","scope","overflowX","minWidth","ShowPrescriptions","uploadPrescriptions","Prescriptions","PrescriptionIssueID","RefillLeft","DueDate","substr","Medicine","AddPrescription","uploadMedicineTypes","PrescriptionID","DBDueDate","Refills","DueDateChange","MedicineTypes","_this3","AddSpecialistReccomendation","handleSpecialistAdd","Specialists","uploadSpecialists","LastName","PatientMedicalHistory","getMedicalRecord","allergies","Allergies","immunizationRecord","ImmunizationRecord","medicalCondition","MedicalCondition","procedureRecord","ProcedureRecord","error","getLog","MHLog","editing","editMode","deduct","insuranceID","insuranceContact","company","saveChange","getInsurance","Deductible","InsuranceClientID","ContactNumber","Name","patientID","lastUpdatedBy","updateMedicalRecord","ChromeReaderMode_default","fullScreen","dialog","item","sm","multiline","rows","UpdatedAt","UpdatedBy","xs","button","dense","menu","overflow","AppointmentHistory","grabAppointments","UserType","UserID","Appointments","panel","event","expanded","handleProper","handleAppointmentCancel","handleClickOpenCancellation","apptID","selectedAppt","handleCloseCancellation","cancelApptShow","PatientIDs","AdminPatient","grabPatientIDs","page","idAppointment","ExpansionPanel_default","square","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","heading","Patient","Doctor","currentStatus","ExpansionPanelDetails_default","secondaryHeading","Street","City","State","ZipCode","Appointments_AddDiagnosis","AddSpecilaistReccomendation","Appointments_AddPrescription","Appointments_ShowDiagnosis","Appointments_PatientMedicalHistory","Appointments_ShowPrescriptions","Appointments_NewAppointmentForm","Paper","AdditionButton","typography","pxToRem","flexBasis","flexShrink","iconHistory","palette","text","secondary","marginBottom","Appointments_AppointmentHistory","validatePassword","BasicInformation","username","helperText","roles","RoleTitle","Email","TextMaskCustom","other","esm_extends","reactTextMask_default","assign","guide","mask","placeholderChar","showMask","DateMaskCustom","SSNMaskCustom","BasicInformationPtTwo","states","StateID","StateString","placeholder","DateOfBirth","inputComponent","Sex","sexes","SexID","Gender","raceID","races","RaceID","Race","SSN","CellNumber","RegistrationForm","registerUser","completion","homeRedirect","stepNext","registrationStep","uploadStates","uploadSexes","uploadRoles","uploadRaces","IconButton_default","icons_Home_default","style","paperForm","Registration_BasicInformation","moveNextInvalid","Registration_BasicInformationPtTwo","RegisterInvalid","LoginDirect","TextField","middleInitial","Registration","Registration_RegistrationForm","MedicalInformation","editImmunizationRecord","editMedicalCondition","editAllergies","editProcedureRecord","margine","handleChangeImmunizationRecord","handleChangeMedicalCondition","handleChangeAllergies","handleChangeProcedureRecord","ProfileInfoTest","retrieveUserInfo","first","last","user","pass","email","dob","DOB","ssn","sex","cellnumber","streetaddr","cityaddr","stateaddr","AddressStateID","zipaddr","updateUserInfo","InsuranceID","saveChanges","revertChanges","defaultValue","substring","PhoneMaskCustom","validateUsername","EmptyEntries","Save_default","Cancel_default","Edit_default","Profile","Profile_ProfileInfoTest","Profile_MedicalInformation","backgroundImage","Image","ModifyFacility","i","selectedFacility","handleDoneSelected","WorkSchedule","WeekDayID","Sub_DayID","getFacilityIDFromName","UpdateDayID","NewFacilityID","Sub_FacilityID","lookUpName","WhichDay","DayID","OpenDays","WeekDay","AddNewDay","getOpenDaysList","handleConfirmChange","newDayList","shouldAddNew","Weekdays","k","push","Scheduling_WhichDay","DaySchedule","grabWorkSchedule","getWeekday","dayID","selectedDayID","handleConfirmRemove","RemoveDayID","Scheduling_ModifyFacility","getDayName","Scheduling_AddNewDay","Scheduling","Scheduling_DaySchedule","DoctorRegistration","Mapper","_React$Component","onMarkerClick","marker","selectedPlace","activeMarker","showingInfoWindow","_this$props$initialCe","initialCenter","lat","lng","currentLocation","isCurrMarkerShown","FacilitiesGeoCode","inherits","createClass","navigator","geolocation","getCurrentPosition","prevState","objectSpread","currentLatLng","coords","latitude","longitude","dist","google","zoom","center","defaultProps","centerAroundCurrentLocation","visible","GoogleApiWrapper","apiKey","Locator","apply","arguments","mapContainer","Mapper_Mapper","redirect","KeyboardArrowLeftRounded_default","background","backgroundPosition","backgroundRepeat","backgroundSize","FacilityReports","MinDateChange","MinimumDateDB","MinimumDate","MaxDateChange","MaximumDateDB","MaximumDate","handlechoseChange","_this$setState2","checked","fetchFacilityReport","checkAllDates","ChosenFacility","Report","DoctorsCount","Count","_this4","control","DoctorsWorking","UpcomingApps","CancelledApps","CompletedApps","totalApps","DoctorsReport","fetchDoctorReport","ChosenDoctor","Apps","Diagnoses","DaysWorking","CheckUpReport","fetchCheckUps","AddAFacility","States","Administrators","AdminID","AddFacility","fetchStates","fetchAdministrators","Admin","FName","ChangeAFacility","ChangeFacility","fetchFacilities","AdministratorID","Administration","Administration_AddAFacility","Administration_ChangeAFacility","Zip","Contact","ReportsGenerator","Administration_FacilityReports","Administration_DoctorsReport","checkUp","Administration_CheckUpReport","Administration_ReportsGenerator","Paths","react_router_dom","react_router","path","exact","Boolean","hostname","match","ReactDOM","render","src_Paths","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0919ef5b.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Tab, Tabs, CssBaseline } from '@material-ui/core';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  BarTitle: {\r\n    flexGrow: 1,\r\n    marginTop: \"1%\"\r\n  },\r\n  bar: {\r\n    backgroundColor: \"#e0e0e0\",\r\n    minHeight: 100,\r\n    height: '100%',\r\n\r\n  },\r\n  MenuIcon: {\r\n    marginLeft: -12,\r\n    marginRight: 20\r\n  },\r\n};\r\n\r\n  class NavigationBar extends React.Component {\r\n    state = {\r\n      loggedIn: null,\r\n      userid: null,\r\n      userType: null,\r\n      currentTab: this.props.Tab,\r\n    };\r\n\r\n    logInSet(storageLoggedIn) {\r\n      return localStorage.getItem(storageLoggedIn) === 'true' ? true : false;\r\n    }\r\n    AppointmentPageRedirect = () =>{\r\n      window.location.replace('/Appointments');\r\n    }\r\n    ProfilePageRedirect = () =>{\r\n      window.location.replace('/Profile');\r\n    }\r\n    SchedulePageRedirect = () =>{\r\n      window.location.replace('/Scheduling');\r\n    }\r\n    AdministrationPageRedirect = () =>{\r\n      window.location.replace('/Administration');\r\n    }\r\n    DocRegistrationRedirect = () =>{\r\n      window.location.replace('/DoctorRegistration');\r\n    }\r\n    LocatorPageRedirect = () =>{\r\n      window.location.replace('/Locator')\r\n    }\r\n    logout = () =>{\r\n      this.setState({loggedIn:false,userid:null,userType:null})\r\n      localStorage.setItem(\"userID\", null);\r\n      localStorage.setItem(\"userType\", null);\r\n      localStorage.setItem(\"LoginTableID\", null);\r\n      localStorage.setItem(\"loggedIn\", false);\r\n      window.location.replace('/')\r\n    }\r\n    componentDidMount() {\r\n      if(localStorage.userID !== null){\r\n        this.setState({loggedIn: true, userType: localStorage.userType});\r\n      }\r\n      else{\r\n        this.setState({loggedIn:false,userid:null,userType:null})\r\n      }\r\n      //HardCoding\r\n      //Query to see if the user is an employee or a Patient then\r\n      \r\n    }\r\n    render() {\r\n      const { classes, title } = this.props;\r\n      return (\r\n        <div className={classes.root}>\r\n          <AppBar className={classes.bar} position=\"static\">\r\n            <Toolbar>\r\n              {window.localStorage.loggedIn === \"true\" ? (\r\n                <div>\r\n                  <Toolbar >\r\n                    <Typography variant=\"h3\" className={classes.BarTitle}>\r\n                      {title}\r\n                    </Typography>\r\n                    <CssBaseline/>\r\n                  </Toolbar>\r\n                  <Tabs textColor=\"primary\" value={this.state.currentTab}>\r\n                      <Tab label=\"Appointments\" onClick={this.AppointmentPageRedirect}></Tab>\r\n                      <Tab label=\"My Profile\" onClick={this.ProfilePageRedirect}></Tab>\r\n                      {window.localStorage.userType !== \"2\" && window.localStorage.userType !== \"3\" ? (\r\n                        <Tab label=\"My Schedule\" onClick={this.SchedulePageRedirect}></Tab>\r\n                      ):(\r\n                        <div></div>\r\n                      )}\r\n                      {window.localStorage.userType === \"3\" ? (\r\n                          <Tab label=\"Administration\" onClick={this.AdministrationPageRedirect}></Tab>\r\n                          //<Tab label=\"Register A Doctor\" onClick={this.DocRegistrationRedirect}></Tab>\r\n\r\n                      ):(\r\n                        <div></div>\r\n                      )}\r\n                      {window.localStorage.userType === \"3\" ? (\r\n                          <Tab label=\"Register A New User\" onClick={this.DocRegistrationRedirect}></Tab>\r\n\r\n                      ):(\r\n                        <div></div>\r\n                      )}\r\n                      <Tab label=\"Facilities\" onClick={this.LocatorPageRedirect}></Tab>\r\n                      <Tab label=\"Logout\" onClick={this.logout}></Tab>\r\n                  </Tabs>\r\n                  \r\n                </div>\r\n              ):(\r\n                <Typography variant=\"h3\"className={classes.BarTitle}>\r\n                  {title}\r\n                </Typography>\r\n              )}\r\n            </Toolbar>\r\n          </AppBar>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nNavigationBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(NavigationBar);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport {Input, InputLabel, Button} from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst styles = theme =>({\r\n  root: {\r\n    width: '25%',\r\n    marginLeft: '65%',\r\n    marginTop: '10%',\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: 'column',\r\n    backgroundColor: \"#e0e0e0\",\r\n    padding: theme.spacing.unit*3\r\n\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit\r\n  },\r\n  submitButton: {\r\n      marginTop: '20px'\r\n  }\r\n});\r\n\r\nclass HomeLoginBox extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            userType: null,\r\n            firstName:null,\r\n            Username: \"\",\r\n            password: \"\",\r\n            loggedIn: false,\r\n\r\n            openForm: false,\r\n            Facilities: [],\r\n            displayResults: false,\r\n            searchCity: \"\",\r\n        };\r\n        this.handleChange=this.handleChange.bind(this);\r\n    }\r\n    \r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n        \r\n    }\r\n    handleRegistration = () => {\r\n        window.location.replace('/Registration');\r\n    }\r\n    login = () => {\r\n        fetch(`http://162.243.165.50:4000/login/${this.state.Username}`)\r\n        .then(result => result.json())\r\n        .then(res => {\r\n            if(res.data.length === 1){\r\n                if(res.data[0].Password === this.state.password){\r\n                    window.localStorage.setItem(\"loggedIn\", 'true');\r\n                    window.localStorage.setItem(\"LoginTableID\", res.data[0].LoginTableID);\r\n                    this.setUserType();                }\r\n                else{\r\n                    window.localStorage.setItem(\"loggedIn\", 'false');\r\n                }\r\n            }\r\n            else{\r\n                window.localStorage.setItem(\"loggedIn\", 'false');\r\n            }\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    \r\n    setUserType(){\r\n        fetch(`http://162.243.165.50:4000/Employee/${window.localStorage.LoginTableID}`)\r\n        .then(result => result.json())\r\n        .then(res => {\r\n            if(res.data.length === 1){\r\n                window.localStorage.setItem(\"userType\", res.data[0].RoleID); \r\n                window.localStorage.setItem(\"userID\", res.data[0].EmployeeID);  \r\n                this.setState({loggedIn:true});      \r\n                this.updateAppTimes();\r\n            }\r\n            else{  \r\n                fetch(`http://162.243.165.50:4000/Patient/${window.localStorage.LoginTableID}`)\r\n                .then(result => result.json())\r\n                .then(res => {\r\n                    if(res.data.length === 1){\r\n                        window.localStorage.setItem(\"userType\", 2); \r\n                        window.localStorage.setItem(\"userID\", res.data[0].PatientID);   \r\n                        this.setState({loggedIn:true});   \r\n                        this.updateAppTimes();          \r\n                    }\r\n                })\r\n                .catch(err => console.log(err))\r\n            }\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    updateAppTimes(){\r\n        fetch(`http://162.243.165.50:4000/AppUpdate/`)\r\n        .then(result => result.json())\r\n\r\n    }\r\n    componentDidMount() {\r\n        window.localStorage.setItem(\"userID\", null);\r\n        window.localStorage.setItem(\"userType\", null);\r\n        window.localStorage.setItem(\"LoginTableID\", null);\r\n        window.localStorage.setItem(\"loggedIn\", false);\r\n    }\r\n  getFacilities=()=> {\r\n      fetch(`http://162.243.165.50:4000/Facilities/${this.state.searchCity}`)\r\n      .then(result => result.json())\r\n      .then(res => this.setState({ Facilities:res.data}))\r\n      .catch(err => console.log(err))\r\n  };\r\n  displaySearchRes = _ => {\r\n    this.getFacilities();\r\n      this.setState({\r\n          displayResults: true\r\n      });\r\n  }\r\n  handleClickOpen = () => {\r\n  this.setState({ openForm: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n     this.setState({ \r\n        Facilities: [],\r\n        searchCity: \"\",\r\n        displayList: false,\r\n        openForm:false,\r\n     });\r\n  };\r\n  render(){\r\n    const {classes}=this.props;\r\n    if(this.state.loggedIn === false){\r\n        return(\r\n         \r\n            <Paper elevation={15} className={classes.root}>\r\n              <Typography component=\"h1\" variant=\"h4\">\r\n                  Log In\r\n              </Typography>\r\n              <form className={classes.form}>\r\n                  <FormControl margin=\"normal\" fullWidth required>\r\n                      <InputLabel htmlFor=\"Username\">Username</InputLabel>\r\n                      <Input name=\"Username\" autoFocus value={this.state.Username} onChange={this.handleChange}></Input>\r\n                  </FormControl>\r\n                  <FormControl margin=\"normal\" fullWidth required>\r\n                      <InputLabel htmlFor=\"Password\">Password</InputLabel>\r\n                      <Input type =\"password\" value={this.state.password} name=\"password\" onChange={this.handleChange}></Input>\r\n                  </FormControl>\r\n                  <FormControl fullWidth className={classes.submitButton}>\r\n                      <Button\r\n                      variant=\"contained\"\r\n                      onClick={this.login}\r\n                      color=\"primary\">\r\n                          Log In\r\n                      </Button>\r\n                  </FormControl>\r\n                  <FormControl  className={classes.submitButton}>\r\n                      <Button\r\n                      size=\"small\"\r\n                      onClick={this.handleRegistration}\r\n                      color=\"primary\">\r\n                          Dont have an Account? Click here to Register\r\n                      </Button>\r\n                  </FormControl>\r\n                  <FormControl  className={classes.submitButton}>\r\n                      <Button\r\n                      size=\"small\"\r\n                      onClick={this.handleClickOpen}\r\n                      color=\"primary\">\r\n                          Need to find one of our Clinics?\r\n                      </Button>\r\n                  </FormControl>\r\n              </form>\r\n         \r\n      \r\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Locations</DialogTitle>\r\n                     <form noValidate autoComplete=\"off\">\r\n                        <FormControl  margin=\"dense\" fullWidth>\r\n                            <TextField\r\n                              name=\"searchCity\"\r\n                              label=\"City Vicinity to Search\"\r\n                              variant=\"outlined\"\r\n                              value={this.state.searchCity}\r\n                              onChange={this.handleChange}\r\n                            />\r\n                        </FormControl>\r\n                        <FormControl margin=\"dense\">\r\n                            <Button variant=\"contained\" size=\"small\" className={classes.editerButtons} onClick={this.displaySearchRes}>\r\n                                <SearchIcon />\r\n                            </Button>\r\n                        </FormControl>\r\n                      </form>\r\n                    <DialogContent>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">Facility Name</TableCell>\r\n                                    <TableCell align=\"center\">Street Address</TableCell>\r\n                                    <TableCell align=\"center\">City</TableCell>\r\n                                    <TableCell align=\"center\">State</TableCell>\r\n                                    <TableCell align=\"center\">Zip</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                            {this.state.displayResults &&\r\n                                        this.state.Facilities.map(Each => (\r\n                                            <TableRow key={Each.FacilityID}>\r\n                                                <TableCell align=\"center\">{Each.FacilityName}</TableCell>\r\n                                                <TableCell align=\"center\">{Each.AddressStreet}</TableCell>\r\n                                                <TableCell align=\"center\">{Each.AddressCity}</TableCell>\r\n                                                <TableCell align=\"center\">{Each.AddressState}</TableCell>\r\n                                                <TableCell align=\"center\">{Each.AddressZip}</TableCell>\r\n                                            </TableRow>\r\n                                        )),\r\n                                        console.log(this.state.Facilities)\r\n                            }\r\n                                \r\n                            </TableBody>\r\n                        </Table>                        \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                 </Paper>\r\n \r\n        );\r\n    }\r\n    else return(\r\n        <div>{window.location.replace('/Appointments')}</div>\r\n    );\r\n    \r\n  }\r\n}\r\n\r\nHomeLoginBox.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  \r\nexport default withStyles(styles)(HomeLoginBox);","import React, { Component } from 'react';\r\nimport './Home.css';\r\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\r\nimport HomeLoginBox from '../Components/Home/HomeLoginBox';\r\n\r\n\r\nclass Home extends Component {\r\n  render() { \r\n    return (\r\n      <div className='Home-image'>\r\n        <div className='Home-overlay'>\r\n          <NavigationBar title={\"Team 7 Medical Database Project\"}/>\r\n            <HomeLoginBox/>\r\n        </div>\r\n      </div>\r\n    );\r\n  } \r\n}\r\n\r\nexport default Home;\r\n","import { TextField, MenuItem } from \"@material-ui/core\";\r\nimport React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\n\r\nfunction WhichFacility(props){\r\n    \r\n    return(\r\n        <div>\r\n            <FormControl margin=\"normal\" fullWidth>\r\n                    <TextField\r\n                        id=\"FacilityID\"\r\n                        select\r\n                        label=\"Please Choose A Facility\"\r\n                        name=\"FacilityID\"\r\n                        variant=\"standard\"\r\n                        onChange={props.handleChange}\r\n                        value={props.val.FacilityID}   \r\n                        required                   \r\n                    >\r\n                        {props.val.Facilities.map(option => (\r\n                            <MenuItem key={option.FacilityID} value={option.FacilityID}>\r\n                                {option.FacilityName}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WhichFacility;","import { TextField, MenuItem } from \"@material-ui/core\";\r\nimport React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\n\r\nfunction WhichDoctor(props){\r\n    return(\r\n        <div>\r\n            <FormControl margin=\"normal\" fullWidth>\r\n                    <TextField\r\n                        id=\"DoctorID\"\r\n                        select\r\n                        label=\"Please Choose A Doctor\"\r\n                        name=\"DoctorID\"\r\n                        variant=\"standard\"\r\n                        onChange={props.handleChange}\r\n                        value={props.val.DoctorID}   \r\n                        required                   \r\n                    >\r\n                    {props.val.Doctors.map(option => (\r\n                        <MenuItem key={option.EmployeeID} value={option.EmployeeID}>\r\n                            Dr. {option.FirstName}\r\n                        </MenuItem>\r\n                    ))}\r\n                    </TextField>\r\n                    <TextField \r\n                        name=\"Reason\"\r\n                        label=\"Reason for Appointment\" \r\n                        variant=\"standard\"\r\n                        onChange={props.handleChange}\r\n                        value={props.val.Reason}\r\n                        inputProps={{ maxLength: 100 }}\r\n                    />\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <DatePicker\r\n                            minDate={new Date()}\r\n                            label=\"Appointment Date\"\r\n                            name=\"AppointmentDate\"\r\n                            value={props.val.AppointmentDate}\r\n                            onChange={props.AppointmentDateChange}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WhichDoctor;\r\n","import React from 'react';\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing.unit,\r\n      marginRight: theme.spacing.unit,\r\n      width: 200,\r\n    },\r\n  });\r\n\r\n\r\n  //This function should allow the user to select a time for the appointment \r\nfunction CompleteNewAppointment(props){\r\n    return(\r\n        <div>\r\n            <FormControl fullWidth>\r\n                    <TextField\r\n                        id=\"AppointmentTimeID\"\r\n                        select\r\n                        label=\"Please Choose A Time\"\r\n                        name=\"AppointmentTimeID\"\r\n                        variant=\"standard\"\r\n                        onChange={e=>props.handleChange(e)}\r\n                        value={props.val.AppointmentTimeID}   \r\n                        required                   \r\n                    >\r\n                    {props.val.AppointmentTimes.map(option => (\r\n                        <MenuItem key={option.TimeSlotID} value={option.TimeSlotID}>\r\n                            {option.AppointmentTime}\r\n                        </MenuItem>\r\n                    ))}\r\n                    </TextField>\r\n                </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nCompleteNewAppointment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n  \r\n  export default withStyles(styles)(CompleteNewAppointment);","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport WhichFacility from './WhichFacility';\r\nimport WhichDoctor from './WhichDoctor';\r\nimport CompleteNewAppointment from './CompleteNewAppointment';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport AddButton from '@material-ui/icons/ControlPointOutlined';\r\nimport { withStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n      fontSize: 25,\r\n      color: \"#f5f5f5\",\r\n      '&:hover': {\r\n        color: '#e0e0e0',\r\n      },\r\n    },\r\n    Button: {\r\n        marginTop: \".5%\"\r\n    }\r\n});\r\n\r\nclass NewAppointmentForm extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            openForm: false,\r\n            step: 0,\r\n            FacilityID: \"\",\r\n            DoctorID: \"\",\r\n            AppointmentTimeID:\"\",\r\n            Facilities: [],\r\n            Doctors: [],\r\n            AppointmentTimes: [],\r\n            Reason: null,\r\n            AppointmentDate: null,\r\n            DBFormattedDate: null,\r\n        };\r\n        this.uploadDoctors=this.uploadDoctors.bind(this);\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({\r\n            AppointmentTimes: [{\r\n                TimeSlotID: -1,\r\n                AppointmentTime: \"No Appointment Times for the chosen Date\"\r\n            }]\r\n        })\r\n        this.uploadFacilities();\r\n    };\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ openForm: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.uploadFacilities();\r\n        this.setState({ \r\n            openForm: false,\r\n            step: 0,\r\n            FacilityID: \"\",\r\n            DoctorID: \"\",\r\n            AppointmentTimeID:\"\",\r\n            Facilities: [],\r\n            Doctors: [],\r\n            AppointmentTimes: [],\r\n            Reason: null,\r\n            AppointmentDate: null,\r\n            DBFormattedDate: null,\r\n        });\r\n    };\r\n\r\n    AppointmentDateChange = (d) =>{\r\n        let ApptDate=new Date(d)\r\n        ApptDate = this.FormatDate(ApptDate);\r\n        this.setState({DBFormattedDate:ApptDate});\r\n        this.setState({\r\n            AppointmentDate: d\r\n        })\r\n    }\r\n\r\n    FormatDate=(date)=>{\r\n        date = date.getFullYear() + '-' + (this.fixMonth(date)) + '-' + date.getDate();\r\n        return date;\r\n    }\r\n\r\n    fixMonth=(date)=>{\r\n        if(date.getMonth() + 1 < 10){\r\n            return \"0\" +(date.getMonth() +1);\r\n        }\r\n        else{\r\n            return date.getMonth()+1;\r\n        }\r\n    }\r\n\r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    getStepInfo(step){\r\n        switch(step){\r\n            case 0:\r\n                return (<div>\r\n                            <WhichFacility val={this.state} handleChange={this.handleChange}/>\r\n                            <Button onClick={this.handleNextStep} disabled={this.state.FacilityID===\"\"} color=\"primary\">\r\n                                Next\r\n                            </Button>\r\n                        </div>)\r\n            case 1:\r\n            \r\n                return (<div>\r\n                            <WhichDoctor val={this.state} handleChange={this.handleChange}  AppointmentDateChange={this.AppointmentDateChange}/>\r\n                            <Button onClick={this.handleBackStep} color=\"primary\">\r\n                                Back\r\n                            </Button>\r\n                            <Button onClick={this.handleNextStep} disabled={this.state.DoctorID===\"\" || this.state.AppointmentDate===\"\"} color=\"primary\">\r\n                                Next\r\n                            </Button>\r\n                        </div>)\r\n            case 2:\r\n                \r\n                return (<div>\r\n                            <CompleteNewAppointment  val={this.state} AppointmentDateChange={this.AppointmentDateChange} handleChange={this.handleChange}/>\r\n                            <Button onClick={this.handleBackStep} color=\"primary\">\r\n                                Back\r\n                            </Button>\r\n                            <Button onClick={this.handleSubmit} disabled={this.state.AppointmentTimeID=== \"\" || this.state.AppointmentTimeID=== -1} color=\"primary\">\r\n                                Submit\r\n                            </Button>\r\n\r\n                        </div>) \r\n            default:\r\n                return \"Cannot Find Appointment Step\"\r\n        }\r\n    };\r\n    uploadFacilities=()=> {\r\n        fetch(`http://162.243.165.50:4000/Facilities`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Facilities:Response.data }))\r\n        .catch(err => console.log(err))\r\n    };\r\n    uploadDoctors=()=> {\r\n        var Specialist=\"1\";//0 is false and 1 is true\r\n        if(window.localStorage.userType !== \"3\"){\r\n            Specialist=\"0\";\r\n        }\r\n        fetch(`http://162.243.165.50:4000/Doctors/${this.state.FacilityID}/${Specialist}`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Doctors:Response.data }))\r\n        .catch(err => console.log(err))\r\n    };\r\n    uploadTimes=()=> {\r\n        fetch(`http://162.243.165.50:4000/AppointmentTimes/`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                DoctorID: this.state.DoctorID,\r\n                FacilityID: this.state.FacilityID,\r\n                AppDate: this.state.DBFormattedDate,\r\n            })\r\n        })\r\n        .then(result => result.json())\r\n        .then(Response => \r\n            {if(Response.data.length !== 0) {\r\n                this.setState({ AppointmentTimes:Response.data})\r\n            }})\r\n        .catch(err => console.log(err));\r\n    };\r\n    handleNextStep= () =>{\r\n        this.uploadDoctors();\r\n        this.uploadTimes();\r\n        this.setState({step: this.state.step+1})\r\n    };\r\n    handleSubmit= () =>{\r\n        this.setState({openForm:false})\r\n        fetch(`http://162.243.165.50:4000/AddAppointment`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                FacilityID: this.state.FacilityID,\r\n                DoctorID:   this.state.DoctorID,\r\n                PatientID:  this.props.PatientID,\r\n                Reason:     this.state.Reason,\r\n                TimeID:     this.state.AppointmentTimeID,\r\n                AppDate:    this.state.DBFormattedDate\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n        //.then(window.location.replace('/Appointments'));\r\n        setTimeout(function(){\r\n            window.location.replace('/Appointments')\r\n        }, 200);\r\n    };\r\n    handleBackStep= () =>{\r\n        this.setState({\r\n            step: this.state.step-1,\r\n            AppointmentTimeID: \"\"\r\n        })\r\n    };\r\n    render(){\r\n        const {classes}=this.props;\r\n        return(\r\n            <div>\r\n                {window.localStorage.userType === \"2\" ? (\r\n                    <Button variant=\"filled\" fullWidth className={classes.Button} onClick={this.handleClickOpen}>\r\n                        <AddButton className={classes.icon}/>New Appointment\r\n                    </Button>\r\n                ) : (\r\n                    <Button variant=\"contained\" color=\"primary\" fullWidth disabled={this.props.PatientID === -1} className={classes.Button} onClick={this.handleClickOpen}>\r\n                        <AddButton className={classes.icon}/>New Appointment\r\n                    </Button>\r\n                )}\r\n                <Dialog open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Book an Appointment</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Please fill out the information to add a new Appointment\r\n                        </DialogContentText>\r\n                        {this.getStepInfo(this.state.step)}\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nNewAppointmentForm.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  export default withStyles(styles)(NewAppointmentForm);","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles, TextField } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n      margin: theme.spacing.unit,\r\n      fontSize: 32,\r\n    },\r\n});\r\n\r\nclass AddDiagnosis extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            AppointmentID: this.props.AppID,\r\n            Diagnosis: \"\",\r\n            openForm: false,\r\n        };\r\n    }\r\n\r\n    handleDiagnosisAdd= () =>{\r\n        this.setState({openForm:false});\r\n        fetch(`http://162.243.165.50:4000/AddDiagnosis`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                AppointmentID: this.state.AppointmentID,\r\n                Diagnosis:   this.state.Diagnosis,\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n    };\r\n    handleClickOpen = () => {\r\n        this.setState({ \r\n            Diagnosis: \"\",\r\n            openForm: true \r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ openForm: false });\r\n    };\r\n\r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Button variant=\"contained\" color=\"primary\" fullWidth className={this.props.Button} onClick={this.handleClickOpen}>\r\n                    Add a Diagnosis\r\n                </Button>\r\n                <Dialog open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Add A Appointment</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Please fill out the information to add a new Diagnosis\r\n                        </DialogContentText>\r\n                        <TextField \r\n                            name=\"Diagnosis\"\r\n                            label=\"What is the Diagnosis\" \r\n                            variant=\"standard\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.Diagnosis}\r\n                            inputProps={{ maxLength: 45 }}\r\n                            fullWidth\r\n                        />\r\n                        <Button onClick={this.handleDiagnosisAdd} disabled={this.state.Diagnosis=== \"\"}>\r\n                            Add Diagnosis\r\n                        </Button>\r\n                    </DialogContent>\r\n\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nAddDiagnosis.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  export default withStyles(styles)(AddDiagnosis);\r\n\r\n\r\n\r\n  //Split show and add for Prescription and Diagnosis","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\n//Seperate Prescription and Diagnosis Tables\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n      margin: theme.spacing.unit,\r\n      fontSize: 32,\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing.unit * 3,\r\n        overflowX: 'auto',\r\n      },\r\n      table: {\r\n        minWidth: 800,\r\n      },\r\n});\r\n\r\nclass ShowDiagnosis extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            openForm: false,\r\n            Diagnosis: [],\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.uploadDiagnosis();\r\n    }\r\n    uploadDiagnosis(){\r\n        fetch(`http://162.243.165.50:4000/Diagnosis/${this.props.AppID}`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Diagnosis: Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    handleClickOpen = () => {\r\n        this.uploadDiagnosis();\r\n        this.setState({ openForm: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ openForm: false });\r\n    };\r\n\r\n    render(){\r\n        const {classes}=this.props;\r\n        return(\r\n            <div>\r\n                <Button variant=\"contained\" color=\"inherit\" className={this.props.Button} fullWidth onClick={this.handleClickOpen}>\r\n                    Show Diagnosis\r\n                </Button>\r\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Here are the Doctor's Diagnoses</DialogTitle>\r\n                    <DialogContent>\r\n                        {this.state.Diagnosis.length>=1 ? (\r\n                            <div>\r\n                                <DialogContentText>\r\n                                    These are the Diagnoses Assosciated with your Appointment\r\n                                </DialogContentText>\r\n                                <Table className={classes.table}>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Diagnosis</TableCell>\r\n                                            <TableCell align=\"right\">DiagnosisID</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {this.state.Diagnosis.map(Each => (\r\n                                            <TableRow key={Each.DiagnosisID}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {Each.Diagnosis}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">{Each.DiagnosisID}</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </div>\r\n                        ):(\r\n                            <DialogContentText>\r\n                                There are no Diagnoses Assosciated with your Appointment\r\n                            </DialogContentText>\r\n                        )}\r\n                        \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nShowDiagnosis.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  export default withStyles(styles)(ShowDiagnosis);\r\n                 ","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\n\r\n//Seperate Prescription and Diagnosis Tables\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n      margin: theme.spacing.unit,\r\n      fontSize: 32,\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing.unit * 3,\r\n        overflowX: 'auto',\r\n      },\r\n      table: {\r\n        minWidth: 800,\r\n      },\r\n});\r\n\r\nclass ShowPrescriptions extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            openForm: false,\r\n            Prescriptions: [],\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.uploadPrescriptions();\r\n    }\r\n    uploadPrescriptions(){\r\n        fetch(`http://162.243.165.50:4000/Prescriptions/${this.props.AppID}`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Prescriptions: Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    handleClickOpen = () => {\r\n        this.setState({ openForm: true });\r\n        this.uploadPrescriptions();\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ openForm: false });\r\n    };\r\n\r\n    render(){\r\n        const {classes}=this.props;\r\n        return(\r\n            <div>\r\n                <Button variant=\"contained\" color=\"inherit\" className={this.props.Button} fullWidth onClick={this.handleClickOpen}>\r\n                    Show Prescriptions\r\n                </Button>\r\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Here are your issued Prescriptions</DialogTitle>\r\n                    <DialogContent>\r\n                        {this.state.Prescriptions.length>=1 ? (\r\n                            <div>\r\n                                 <DialogContentText>\r\n                                    These are the Prescriptions Assosciated with your Appointment\r\n                                </DialogContentText>\r\n                                <Table className={classes.table}>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Prescription Issue ID</TableCell>\r\n                                            <TableCell align=\"right\">Refills</TableCell>\r\n                                            <TableCell align=\"right\">Due Date</TableCell>\r\n                                            <TableCell align=\"right\">Medicine</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {this.state.Prescriptions.map(Each => (\r\n                                            <TableRow key={Each.PrescriptionIssueID}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {Each.PrescriptionIssueID}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">{Each.RefillLeft}</TableCell>\r\n                                            <TableCell align=\"right\">{Each.DueDate.substr(0,10)}</TableCell>\r\n                                            <TableCell align=\"right\">{Each.Medicine}</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </div>\r\n                        ):(\r\n                            <DialogContentText>\r\n                                There are no Prescriptions Assosciated with your Appointment\r\n                            </DialogContentText>\r\n                        )}\r\n                       \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nShowPrescriptions.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  export default withStyles(styles)(ShowPrescriptions);\r\n                 ","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles, TextField, FormControl, MenuItem } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n      margin: theme.spacing.unit,\r\n      fontSize: 32,\r\n    },\r\n});\r\n\r\nclass AddPrescription extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            AppointmentID: this.props.AppID,\r\n            PrescriptionID: \"\",\r\n            Refills:\"\",\r\n            MedicineTypes: [],\r\n            DueDate: null,\r\n            DBDueDate: null,\r\n            openForm: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.uploadMedicineTypes()\r\n    };\r\n\r\n    uploadMedicineTypes(){\r\n        fetch(`http://162.243.165.50:4000/AllMedicines/`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ MedicineTypes:Response.data}))\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    handleSubmit= () =>{\r\n        this.setState({openForm:false});\r\n        fetch(`http://162.243.165.50:4000/AddPrescription`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                AppointmentID: this.state.AppointmentID,\r\n                PrescriptionID:   this.state.PrescriptionID,\r\n                DueDate:  this.state.DBDueDate,\r\n                Refills:     this.state.Refills,\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n    };\r\n    handleClickOpen = () => {\r\n        this.setState({ \r\n            openForm: true,\r\n            AppointmentID: this.props.AppID,\r\n            PrescriptionID: \"\",\r\n            Refills:\"\",\r\n            DueDate: null,\r\n            DBDueDate: null, \r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ openForm: false });\r\n    };\r\n\r\n    DueDateChange = (d) =>{\r\n        let DueDate=new Date(d)\r\n        DueDate = this.FormatDate(DueDate);\r\n        \r\n        this.setState({DBDueDate:DueDate});\r\n        this.setState({\r\n            DueDate: d\r\n        })\r\n    }\r\n\r\n    FormatDate=(date)=>{\r\n        date = date.getFullYear() + '-' + (this.fixMonth(date)) + '-' + date.getDate();\r\n        return date;\r\n    }\r\n\r\n    fixMonth=(date)=>{\r\n        if(date.getMonth() + 1 < 10){\r\n            return \"0\" +(date.getMonth() +1);\r\n        }\r\n        else{\r\n            return date.getMonth()+1;\r\n        }\r\n    }\r\n\r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Button variant=\"contained\" color=\"primary\" fullWidth className={this.props.Button} onClick={this.handleClickOpen}>\r\n                    Add a Prescription\r\n                </Button>\r\n                <Dialog open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Add A Appointment</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Please fill out the information to add a new Diagnosis\r\n                        </DialogContentText>\r\n                        <FormControl margin=\"normal\" fullWidth>\r\n                            <TextField\r\n                                id=\"PrescriptionID\"\r\n                                select\r\n                                label=\"Please Choose A Prescription\"\r\n                                name=\"PrescriptionID\"\r\n                                variant=\"standard\"\r\n                                onChange={e=>this.handleChange(e)}\r\n                                value={this.state.PrescriptionID}   \r\n                                required                   \r\n                            >\r\n                            {this.state.MedicineTypes.map(option => (\r\n                                <MenuItem key={option.PrescriptionID} value={option.PrescriptionID}>\r\n                                    {option.Medicine}\r\n                                </MenuItem>\r\n                            ))}\r\n                            </TextField>\r\n                            <TextField \r\n                                name=\"Refills\"\r\n                                label=\"Number of Total Refills\" \r\n                                type=\"number\"\r\n                                variant=\"standard\"\r\n                                onChange={this.handleChange}\r\n                                value={this.state.Refills}\r\n                            />\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <DatePicker\r\n                                    minDate={new Date()}\r\n                                    label=\"Due Date\"\r\n                                    name=\"DueDate\"\r\n                                    value={this.state.DueDate}\r\n                                    onChange={this.DueDateChange}\r\n                                />\r\n                            </MuiPickersUtilsProvider>\r\n                            <Button onClick={this.handleSubmit} disabled={this.state.Refills=== \"\" || this.state.PrescriptionID=== \"\" || this.state.DBDueDate=== null} color=\"primary\">\r\n                                Submit\r\n                            </Button>\r\n                        </FormControl>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nAddPrescription.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  export default withStyles(styles)(AddPrescription);","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles, TextField, MenuItem } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n      margin: theme.spacing.unit,\r\n      fontSize: 32,\r\n    },\r\n});\r\n\r\nclass AddSpecialistReccomendation extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            AppointmentID: this.props.AppID,\r\n            Specialist: \"\",\r\n            Specialists: [],\r\n            openForm: false,\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.uploadSpecialists()\r\n    }\r\n    uploadSpecialists(){\r\n        fetch(`http://162.243.165.50:4000/AllDoctors`)\r\n        .then(result => result.json())\r\n        .then(res => this.setState({ Specialists: res.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    handleSpecialistAdd= () =>{\r\n        this.setState({openForm:false});\r\n        fetch(`http://162.243.165.50:4000/AddSpecialist`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                AppointmentID: this.state.AppointmentID,\r\n                Specialist:   this.state.Specialist,\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n        setTimeout(function(){\r\n\t\t\twindow.location.replace('/Appointments')\r\n\t\t}, 1000);\r\n    };\r\n    handleClickOpen = () => {\r\n        this.setState({ \r\n            Specialist: \"\",\r\n            openForm: true \r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ openForm: false });\r\n    };\r\n\r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Button variant=\"contained\" color=\"primary\" fullWidth className={this.props.Button} onClick={this.handleClickOpen}>\r\n                    Add a Specialist Reccomendation\r\n                </Button>\r\n                <Dialog open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Add A Specialist Reccomendation</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Please select a Doctor (Specialist or General) that you reccomend for the patiet\r\n                        </DialogContentText>\r\n                        <FormControl margin=\"normal\" fullWidth>\r\n                            <TextField\r\n                                id=\"Specialist\"\r\n                                select\r\n                                label=\"Please Choose A Doctor to Reccomend\"\r\n                                name=\"Specialist\"\r\n                                variant=\"standard\"\r\n                                onChange={this.handleChange}\r\n                                value={this.state.Specialist}   \r\n                                required                   \r\n                            >\r\n                                {this.state.Specialists.map(option => (\r\n                                    <MenuItem key={option.EmployeeID} value={option.FirstName}>\r\n                                        Dr.{option.FirstName} {option.LastName}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                        </FormControl>\r\n                        <Button onClick={this.handleSpecialistAdd}>\r\n                            Add Specialist\r\n                        </Button>\r\n                    </DialogContent>\r\n\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nAddSpecialistReccomendation.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  export default withStyles(styles)(AddSpecialistReccomendation);\r\n\r\n\r\n\r\n  //Split show and add for Prescription and Diagnosis","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Button from '@material-ui/core/Button';\r\nimport InfoIcon from '@material-ui/icons/ChromeReaderMode';\r\nimport { withStyles, Typography } from '@material-ui/core';\r\nimport {Paper, TextField, Grid,} from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport PropTypes from 'prop-types';\r\nimport './AppointmentPage.css';\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n      fontSize: 25,\r\n      color: \"#f5f5f5\",\r\n      '&:hover': {\r\n        color: '#e0e0e0',\r\n      },\r\n    },\r\n    dialog: {\r\n        margin: 'normal',\r\n    },\r\n    Button: {\r\n        marginTop: \".5%\"\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: \"#e0e0e0\",\r\n        padding: theme.spacing.unit*6,\r\n        minHeight: '100vh',\r\n        margin:\"auto\",\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField:{\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n    },\r\n    dense: {\r\n        marginTop: 19,\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    },\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    table: {\r\n        height: 10,\r\n        width: '100%',\r\n        marginTop: theme.spacing.unit * 3,\r\n        overflow: '3',\r\n      },\r\n});\r\n\r\nclass PatientMedicalHistory extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            openForm: false,    \r\n            editing: false,   \r\n            allergies: '',\r\n            immunizationRecord: '',\r\n            medicalCondition: '',\r\n            procedureRecord: '',\r\n            MHLog: [],\r\n            deduct: \"\",\r\n            insuranceID: \"\",\r\n            insuranceContact: \"\",\r\n            company: \"\",\r\n        };\r\n        this.handleChange=this.handleChange.bind(this);\r\n        this.saveChange=this.saveChange.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        this.getInsurance();\r\n        this.getLog();\r\n    }\r\n    getMedicalRecord=()=>{\r\n        fetch(`http://162.243.165.50:4000/GetMedicalHistory/${this.props.PatientID}`)\r\n        .then(result => result.json())\r\n        .then(result => \r\n            {if(result.data.length !== 0){\r\n                this.setState({\r\n                    allergies: result.data[0].Allergies,\r\n                    immunizationRecord: result.data[0].ImmunizationRecord,\r\n                    medicalCondition: result.data[0].MedicalCondition,\r\n                    procedureRecord: result.data[0].ProcedureRecord,\r\n                })\r\n            }})\r\n        .catch(err => console.error(err))\r\n    };\r\n    getLog=()=>{\r\n        fetch(`http://162.243.165.50:4000/GetMedicalHistoryLog/${this.props.PatientID}`)\r\n        .then(result => result.json())\r\n        .then(result => this.setState({\r\n            MHLog: result.data\r\n        }))\r\n        .catch(err => console.error(err))\r\n    };\r\n    getInsurance(){\r\n            fetch(`http://162.243.165.50:4000/Insurance/${this.props.PatientID}`)\r\n            .then(result => result.json())\r\n            .then(res => this.setState({\r\n                deduct:res.data[0].Deductible,\r\n                insuranceID: res.data[0].InsuranceClientID,\r\n                insuranceContact: res.data[0].ContactNumber,\r\n                company: res.data[0].Name,\r\n\r\n            }))\r\n            .catch(err => console.log(err))\r\n}\r\n    updateMedicalRecord(){\r\n        fetch(`http://162.243.165.50:4000/UpdateMedicalHistory`, {\r\n          method:\"POST\",\r\n          headers: {\r\n            \"Content-Type\":\"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            patientID: this.props.PatientID,\r\n            lastUpdatedBy: window.localStorage.userID,\r\n            immunizationRecord: this.state.immunizationRecord,\r\n            allergies: this.state.allergies,\r\n            procedureRecord: this.state.procedureRecord,\r\n            medicalCondition: this.state.medicalCondition,\r\n          })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    saveChange(){\r\n        this.updateMedicalRecord();\r\n        this.getMedicalRecord();\r\n        this.setState({\r\n            editing: false\r\n        });\r\n    }\r\n    handleClickOpen = () => {\r\n        this.getMedicalRecord();\r\n        this.setState({openForm:true})\r\n    };\r\n    handleClose = () => {\r\n        this.setState({ \r\n            openForm: false,    \r\n            editing: false,   \r\n            allergies: '',\r\n            immunizationRecord: '',\r\n            medicalCondition: '',\r\n            procedureRecord: '',\r\n        });\r\n    };\r\n    editMode = () => {\r\n        console.log(this.state.MHLog)\r\n        this.setState({\r\n          editing: true\r\n        });\r\n    }\r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        const {classes}=this.props;\r\n        return(\r\n            <div>\r\n                {this.getMedicalRecord}\r\n                <Button variant=\"contained\" color=\"inherit\" className={this.props.Button} onClick={this.handleClickOpen} fullWidth >\r\n                    <InfoIcon/> Patient's Information\r\n                </Button>\r\n                <Dialog fullScreen className={classes.dialog} open={this.state.openForm} onClose={this.handleClose}>\r\n                    <Paper className={classes.root} fullWidth elevation={2}>\r\n                        <Typography variant=\"h3\" >Here are the Patients Information</Typography>\r\n                        <br />\r\n                        <Typography variant=\"h4\" >Summary</Typography>\r\n                        <TextField\r\n                            label=\"Patient ID\"\r\n                            margin=\"normal\"\r\n                            disabled\r\n                            className={classes.textField}\r\n                            value={this.props.PatientID}\r\n                        />\r\n                        <br/>\r\n                        <Grid container spacing={24}>\r\n                            <Grid item sm>\r\n                                <TextField\r\n                                    name=\"immunizationRecord\"\r\n                                    label=\"Immunization Record\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.immunizationRecord}\r\n                                    margin=\"normal\"\r\n                                    multiline\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    rows=\"2\"\r\n                                    inputProps={{ maxLength: 45 }}\r\n                                    disabled={!this.state.editing}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item sm>\r\n                                <TextField\r\n                                    name=\"medicalCondition\"\r\n                                    label=\"Medical Condition\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.medicalCondition}\r\n                                    margin=\"normal\"\r\n                                    fullWidth\r\n                                    multiline\r\n                                    variant=\"outlined\"\r\n                                    rows=\"2\"\r\n                                    inputProps={{ maxLength: 45 }}\r\n                                    disabled={!this.state.editing}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        \r\n                        <Grid container spacing={24}>\r\n                            <Grid item sm>\r\n                                <TextField\r\n                                    name=\"allergies\"\r\n                                    label=\"Allergies\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.allergies}\r\n                                    margin=\"normal\"\r\n                                    multiline\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    rows=\"2\"\r\n                                    inputProps={{ maxLength: 45 }}\r\n                                    disabled={!this.state.editing}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item sm>\r\n                                <TextField\r\n                                    name=\"procedureRecord\"\r\n                                    label=\"Procedures Record\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.procedureRecord}\r\n                                    margin=\"normal\"\r\n                                    multiline\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    rows=\"2\"\r\n                                    inputProps={{ maxLength: 100 }}\r\n                                    disabled={!this.state.editing}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow display={'flex'}>\r\n                                    <TableCell align=\"center\">Medical History Last Updated On</TableCell>\r\n                                    <TableCell align=\"center\">Medical History Last Updated By (EmployeeID)</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {this.state.MHLog.map(Each => (\r\n                                    <TableRow key={Each.UpdatedAt}>\r\n                                        <TableCell align=\"center\">{Each.UpdatedAt.substr(0,10)}</TableCell>\r\n                                        <TableCell align=\"center\">{Each.UpdatedBy}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>    \r\n                        <Grid container spacing={24}>\r\n                            <Grid item sm>\r\n                                <TextField\r\n                                    name=\"company\"\r\n                                    label=\"Insurance Company\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.company}\r\n                                    margin=\"normal\"\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    disabled\r\n                                />\r\n                            </Grid>\r\n                            <Grid item sm>\r\n                                <TextField\r\n                                    name=\"insuranceContact\"\r\n                                    label=\"Insurance Number\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.insuranceContact}\r\n                                    margin=\"normal\"\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    disabled\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={24}>\r\n                            <Grid item sm>\r\n                                <TextField\r\n                                    name=\"insuranceID\"\r\n                                    label=\"Insurance Client ID\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.insuranceID}\r\n                                    margin=\"normal\"\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    disabled\r\n                                />\r\n                            </Grid>\r\n                            <Grid item sm>\r\n                                <TextField\r\n                                    name=\"deduct\"\r\n                                    label=\"Deductible Amount\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.deduct}\r\n                                    margin=\"normal\"\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    disabled\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={8}>\r\n                            {!this.state.editing ? (\r\n                                <Grid item xs={12} sm={6}>\r\n                                        <Button variant=\"contained\" fullWidth color=\"primary\" className={classes.button} onClick={this.editMode}> Edit </Button>\r\n                                </Grid>\r\n                            ):(\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <Button variant=\"contained\" fullWidth color=\"secondary\" className={classes.button} onClick={this.saveChange}> Save </Button>\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item xs={12} sm={6}>\r\n                                <Button variant=\"contained\" fullWidth color=\"primary\" className={classes.button} onClick={this.handleClose}> Close </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                            \r\n                        \r\n                    </Paper>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nPatientMedicalHistory.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  export default withStyles(styles)(PatientMedicalHistory);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport NewAppointmentForm from './NewAppointmentForm';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { FormControl, Grid, Paper, MenuItem, TextField } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddDiagnosis from './AddDiagnosis';\r\nimport ShowDiagnosis from './ShowDiagnosis';\r\nimport ShowPrescriptions from './ShowPrescriptions';\r\nimport AddPrescription from './AddPrescription';\r\nimport AddSpecialistReccomendation from './AddSpecilaistReccomendation';\r\nimport './AppointmentPage.css';\r\nimport PatientMedicalHistory from './PatientMedicalHistory';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst styles = theme =>({\r\n    root: {\r\n        width: '75%',\r\n        alignItems: \"center\",\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        padding: theme.spacing.unit*3,\r\n        margin:\"auto\"\r\n  \r\n    },\r\n    page: {\r\n        padding: theme.spacing.unit*3,\r\n        margin:\"auto\"\r\n  \r\n    },\r\n    AdditionButton: {\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        padding: theme.spacing.unit,\r\n  \r\n    },\r\n    Button: {\r\n        marginTop: '.5%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '19%',\r\n        flexShrink: 0,\r\n    },\r\n    iconHistory: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '3%',\r\n        flexShrink: 10,\r\n    },\r\n    secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    flexBasis: '100%',\r\n    margin: 'auto'\r\n    },\r\n    Paper: {\r\n        width: '55%',\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        padding: theme.spacing.unit*3,\r\n        marginTop:\"5%\",\r\n        marginBottom:\"5%\",\r\n        margin:\"auto\"\r\n  \r\n    },\r\n});\r\n\r\n\r\nclass AppointmentHistory extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            expanded: null,\r\n            Appointments: [],\r\n            Diagnosis: [],\r\n            cancelApptShow: false,\r\n\t\t\tselectedAppt: \"\",\r\n            openForm: false, \r\n            PatientIDs:[],\r\n            AdminPatient: -1,\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.grabAppointments();\r\n        this.grabPatientIDs();\r\n    }\r\n    grabPatientIDs(){\r\n        fetch(`http://162.243.165.50:4000/Patients`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ PatientIDs:Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    grabAppointments=()=>{\r\n        //backend call to grab the appointments for the user\r\n        fetch(`http://162.243.165.50:4000/Appointments/`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                UserType: window.localStorage.userType,\r\n                UserID: window.localStorage.userID,\r\n            })\r\n        })\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Appointments:Response.data}))\r\n        .catch(err => console.log(err));\r\n        \r\n    }\r\n    handleChange = panel => (event, expanded) => {\r\n        this.setState({\r\n            expanded: expanded ? panel : false,\r\n        });\r\n    }\r\n    handleProper = e =>  {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    placeDiagnosis(){\r\n        this.state.Diagnosis.map(option => (\r\n            <FormControl>\r\n                <Typography>Diagnosis: {option.Diagnosis}</Typography>\r\n                <Typography>Number of Refills:  {option.RefillLeft}</Typography>\r\n                <Typography>Due Date: {option.DueDate.substr(0,10)}</Typography>\r\n                <Typography>Medicine: {option.Medicine}</Typography>\r\n            </FormControl>\r\n        ))\r\n    }\r\n    handleAppointmentCancel = (AppID) => {\r\n        fetch(`http://162.243.165.50:4000/CancelAppointment/`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                AppointmentID: AppID,\r\n            })\r\n        })\r\n        .then(this.grabAppointments)\r\n        .catch(err => console.log(err));\r\n\t\tsetTimeout(function(){\r\n\t\t\twindow.location.replace('/Appointments')\r\n\t\t}, 200);\r\n    };\r\n\t\r\n\thandleClickOpenCancellation = (apptID) => {\r\n\t\tthis.setState({ selectedAppt: apptID });\r\n        this.setState({ openForm: true });\r\n    };\r\n\r\n    handleCloseCancellation = () => {\r\n        this.setState({ openForm: false });\r\n    };\r\n\t\r\n    render(){\r\n        const{classes}=this.props;\r\n        const { expanded } = this.state;\r\n        return(\r\n            <div className={classes.page}>\r\n                <div className='AppointmentPage-SmallBoxOverLay'>\r\n                <div className={classes.root}>\r\n                <h1 className='AppointmentHistory-h1'>All Appointments</h1>\r\n                    {this.state.Appointments.map(option => (\r\n                            <FormControl key={option.idAppointment} fullWidth>\r\n                                <ExpansionPanel square expanded={expanded === option.idAppointment}  onChange={this.handleChange(option.idAppointment)}>\r\n                                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                                        <Typography className={classes.heading}>Patient: {option.Patient}</Typography>\r\n                                        <Typography className={classes.heading}>Doctor: Dr. {option.Doctor}</Typography>\r\n                                        <Typography className={classes.heading}>Date: {option.AppointmentDate.substr(0,10)}</Typography>\r\n                                        <Typography className={classes.heading}>Time: {option.AppointmentTime.substr(0,5)}</Typography>\r\n                                        <Typography className={classes.heading}>Status: {option.currentStatus}</Typography>\r\n                                    </ExpansionPanelSummary>\r\n                                    <ExpansionPanelDetails>\r\n                                        <Typography className={classes.secondaryHeading}>\r\n                                            Reason:{option.Reason === \"null\" ? (<text> No Reason Specified</text>):(<text>{option.Reason}</text>)} <br/>\r\n                                            AppointmentID: {option.idAppointment} <br/>\r\n                                            Facility: {option.FacilityName} <br/>\r\n                                            Address: {option.Street}, {option.City}, {option.State} {option.ZipCode}<br/>\r\n                                            Doctor Reccomentation: {option.Specialist === null || option.Specialist === \"\" ? (<text>No Doctor Reccomendations</text>):(<text>Dr. {option.Specialist}</text>)}<br/>\r\n                                            {(window.localStorage.userType !== \"2\" &&  window.localStorage.userType !== \"3\")? (\r\n                                                <Grid container spacing={8}>\r\n                                                    <Grid item xs={12} sm={4}>  \r\n                                                        <AddDiagnosis Button={classes.Button} AppID={option.idAppointment}/>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12} sm={4}>\r\n                                                        <AddSpecialistReccomendation  Button={classes.Button} AppID={option.idAppointment}/>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12} sm={4}>  \r\n                                                        <AddPrescription Button={classes.Button} AppID={option.idAppointment}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            ):(\r\n                                                <div>\r\n                                                </div>\r\n                                            )}\r\n                                            {window.localStorage.userType !==\"2\" ? (\r\n                                                <Grid container spacing={8}>\r\n                                                    <Grid item xs={12} sm={4}>\r\n                                                        <ShowDiagnosis  Button={classes.Button} AppID={option.idAppointment}/>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12} sm={4}>\r\n                                                        <PatientMedicalHistory Button={classes.Button} PatientID={option.PatientID}/>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12} sm={4}>\r\n                                                        <ShowPrescriptions  Button={classes.Button} AppID={option.idAppointment}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            ):(\r\n                                                <Grid container spacing={8}>\r\n                                                    <Grid item xs={12} sm={6}>\r\n                                                        <ShowDiagnosis  Button={classes.Button} AppID={option.idAppointment}/>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12} sm={6}>\r\n                                                        <ShowPrescriptions  Button={classes.Button} AppID={option.idAppointment}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            )}\r\n                                            \r\n                                            {window.localStorage.userType === \"3\" ? (\r\n                                                    <Grid container spacing={8}>\r\n                                                        <Grid item xs={12} sm={6}>  \r\n                                                            <NewAppointmentForm PatientID={option.PatientID}/>                                                        \r\n                                                        </Grid>\r\n                                                        <Grid item xs={12} sm={6}>\r\n                                                            <Button variant=\"raised\" fullWidth  className={classes.Button} color=\"secondary\"  onClick={() =>  this.handleClickOpenCancellation(option.idAppointment) } marginTop=\"10%\">\r\n                                                                Cancel Appointment\r\n                                                            </Button>  \r\n                                                            \r\n                                                            <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleCloseCancellation}>\r\n                                                                <DialogTitle id=\"form-dialog-title\"></DialogTitle>\r\n                                                                <DialogContent>\r\n                                                                    <DialogContentText>\r\n                                                                        Are you sure you want to cancel appointment {this.state.selectedAppt}?\r\n                                                                    </DialogContentText>\r\n                                                                </DialogContent>\r\n                                                                <DialogActions>\r\n                                                                    <Button className={classes.Button} onClick={this.handleCloseCancellation} color=\"primary\" variant=\"contained\">\r\n                                                                        No\r\n                                                                    </Button>\r\n                                                                    <Button className={classes.Button} onClick={() => this.handleAppointmentCancel(this.state.selectedAppt)} color=\"secondary\" variant=\"contained\">\r\n                                                                        Yes\r\n                                                                    </Button>\r\n                                                                </DialogActions>\r\n                                                            </Dialog>\r\n                                                            \r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                            ):(\r\n                                                <div></div>\r\n                                            )}\r\n                                            \r\n                                            {window.localStorage.userType === \"2\" ? (\r\n                                                <div>\r\n                                                    <Button variant=\"raised\" fullWidth  className={classes.Button} color=\"secondary\"  onClick={() =>  this.handleClickOpenCancellation(option.idAppointment) } marginTop=\"10%\">\r\n                                                        Cancel Appointment\r\n                                                    </Button>\r\n                                                    \r\n                                                    <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleCloseCancellation}>\r\n                                                        <DialogTitle id=\"form-dialog-title\"></DialogTitle>\r\n                                                        <DialogContent>\r\n                                                            <DialogContentText>\r\n                                                                Are you sure you want to cancel appointment {this.state.selectedAppt}?\r\n                                                            </DialogContentText>\r\n                                                        </DialogContent>\r\n                                                        <DialogActions>\r\n                                                            <Button className={classes.Button} onClick={this.handleCloseCancellation} color=\"primary\" variant=\"contained\">\r\n                                                                No\r\n                                                            </Button>\r\n                                                            <Button className={classes.Button} onClick={() => this.handleAppointmentCancel(this.state.selectedAppt)} color=\"secondary\" variant=\"contained\">\r\n                                                                Yes\r\n                                                            </Button>\r\n                                                        </DialogActions>\r\n                                                    </Dialog>\r\n                                                    \r\n                                                </div>\r\n                                                \r\n                                            ):(\r\n                                                <div></div>\r\n                                            )}\r\n\r\n                                            \r\n                                            \r\n                                        </Typography>\r\n                                        \r\n                                    </ExpansionPanelDetails>\r\n                                </ExpansionPanel>\r\n                            </FormControl>\r\n                            \r\n                    ))}\r\n                    {this.state.Appointments.length === 0 && <Typography variant=\"subtitle1\">You Have no Appointments</Typography>}\r\n                    \r\n                    {window.localStorage.userType ===\"3\" &&\r\n                        <Paper className={classes.Paper}>\r\n                            <FormControl margin=\"normal\" fullWidth>\r\n                                <TextField\r\n                                    id=\"AdminPatient\"\r\n                                    select\r\n                                    label=\"Which Patient would you like to book an Appointment for?\"\r\n                                    name=\"AdminPatient\"\r\n                                    variant=\"standard\"\r\n                                    onChange={this.handleProper}\r\n                                    value={this.state.AdminPatient}   \r\n                                    required                   \r\n                                >\r\n                                    <MenuItem key=\"-1\" value=\"-1\">\r\n                                        Please Choose A Patient\r\n                                    </MenuItem>\r\n                                    {this.state.PatientIDs.map(option => (\r\n                                        <MenuItem key={option.PatientID} value={option.PatientID}>\r\n                                            {option.PatientID}: {option.FirstName} {option.LastName}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </TextField>\r\n                            </FormControl>\r\n                            <NewAppointmentForm PatientID={this.state.AdminPatient}/>\r\n                        </Paper>\r\n                    }\r\n                    {window.localStorage.userType === \"2\" && \r\n                        <div className={classes.AdditionButton}>\r\n                            <NewAppointmentForm PatientID={window.localStorage.userID}/>\r\n                        </div>\r\n                    }\r\n                    \r\n                    \r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nAppointmentHistory.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  \r\nexport default withStyles(styles)(AppointmentHistory);\r\n","import React, { Component } from 'react';\r\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\r\nimport AppointmentHistory from '../Components/Appointments/AppointmentHistory';\r\nimport '../Components/Appointments/AppointmentPage.css';\r\n\r\nclass Appointments extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n        firstName: \"\",\r\n        Facilities: []\r\n    };\r\n  }\r\n  componentDidMount(){\r\n    this.FirstName();\r\n  }\r\n\r\n  FirstName(){\r\n    if(window.localStorage.userType === \"2\"){\r\n      fetch(`http://162.243.165.50:4000/Patient/${window.localStorage.LoginTableID}`)\r\n      .then(result => result.json())\r\n      .then(res => {\r\n          this.setState(  { firstName: res.data[0].FirstName  } )\r\n        })\r\n      .catch(err => console.log(err))\r\n    }\r\n  \r\n    else{\r\n      fetch(`http://162.243.165.50:4000/Employee/${window.localStorage.LoginTableID}`)\r\n      .then(result => result.json())\r\n      .then(res => {this.setState(  { firstName: res.data[0].FirstName  } )})\r\n      .catch(err => console.log(err))\r\n    }\r\n  }\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <div className='AppointmentPage-image'>\r\n        <div className='AppointmentPage-overlay'>\r\n          <NavigationBar title={'Welcome, '+this.state.firstName} Tab={0}/>\r\n          <AppointmentHistory val={this.state}/>\r\n        </div>\r\n      </div>\r\n        \r\n    );\r\n  }\r\n}\r\n\r\nexport default Appointments;\r\n","import { TextField,  MenuItem, Typography } from \"@material-ui/core\";\r\nimport React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport {Input, InputLabel} from '@material-ui/core';  \r\n\r\n\r\nfunction validateUsername(){\r\n    return true;\r\n};\r\nfunction validatePassword(props){\r\n    if(props.val.password.length >=6 || props.val.password.length <=1 ){\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\nfunction BasicInformation(props){\r\n    \r\n    return(\r\n        <div>\r\n             <Typography>Registration Information</Typography>\r\n                <FormControl margin=\"normal\" fullWidth required>\r\n                    <InputLabel htmlFor=\"FirstName\">First Name</InputLabel>\r\n                    <Input name=\"FirstName\" autoFocus value={props.val.FirstName} onChange={props.handleChange}></Input>\r\n                </FormControl>\r\n                <FormControl margin=\"auto\" fullWidth required>\r\n                    <InputLabel htmlFor=\"LastName\">Last Name</InputLabel>\r\n                    <Input name=\"LastName\" value={props.val.LastName} onChange={props.handleChange}></Input>\r\n                </FormControl>\r\n                <FormControl margin=\"normal\" fullWidth>\r\n                    <TextField \r\n                        required\r\n                        name=\"username\" \r\n                        label=\"Username\" \r\n                        variant=\"standard\"\r\n                        onChange={props.handleChange}\r\n                        value={props.val.username}\r\n                        error={!validateUsername()}\r\n                        helperText={validateUsername() ? \"\":\"Username is not valid\"}\r\n                    />\r\n                </FormControl>\r\n                <FormControl margin=\"auto\" fullWidth required>\r\n                    <TextField \r\n                        name=\"password\"\r\n                        type=\"password\" \r\n                        label=\"Password\" \r\n                        variant=\"standard\"\r\n                        error={!validatePassword(props)}\r\n                        onChange={props.handleChange}\r\n                        value={props.val.password}\r\n                        required\r\n                    />\r\n                </FormControl>\r\n                {(window.localStorage.userType === \"3\") ? (\r\n                    <FormControl margin=\"auto\" fullWidth>\r\n                        <TextField\r\n                            id=\"userType\"\r\n                            select\r\n                            label=\"Type of User\"\r\n                            name=\"userType\"\r\n                            variant=\"standard\"\r\n                            onChange={props.handleChange}\r\n                            value={props.val.userType}   \r\n                            required                   \r\n                        >\r\n                            {props.val.roles.map(option => (\r\n                                <MenuItem key={option.RoleID} value={option.RoleID}>\r\n                                    {option.RoleTitle}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                    </FormControl>\r\n                ):(\r\n                    <div></div>\r\n                )}\r\n                    \r\n                <FormControl margin=\"auto\" fullWidth required>\r\n                    <TextField \r\n                        name=\"Email\" \r\n                        label=\"Email\" \r\n                        variant=\"standard\"\r\n                        type=\"email\"\r\n                        onChange={props.handleChange}\r\n                        value={props.val.Email}\r\n                        required\r\n                    />\r\n                </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BasicInformation;","import {  TextField, MenuItem, Typography, Grid, Input, InputLabel } from \"@material-ui/core\";\r\nimport React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';  \r\nimport MaskedInput from 'react-text-mask';\r\nimport PropTypes from 'prop-types'; \r\n\r\n\r\nfunction TextMaskCustom(props) {\r\n    const {...other } = props;\r\n  \r\n    return (\r\n      <MaskedInput\r\n        {...other}\r\n        guide={false}\r\n        mask={[/[1-9]/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\r\n        placeholderChar={'\\u2000'}\r\n        showMask\r\n      />\r\n    );\r\n}\r\n\r\nTextMaskCustom.propTypes = {\r\n    inputRef: PropTypes.func.isRequired,\r\n};\r\nfunction DateMaskCustom(props) {\r\n    const {...other } = props;\r\n  \r\n    return (\r\n      <MaskedInput\r\n        guide={false}\r\n        {...other}\r\n        mask={[/\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/,'-', /\\d/, /\\d/]}\r\n        placeholderChar={'\\u2000'}\r\n        showMask\r\n      />\r\n    );\r\n}\r\n\r\nfunction SSNMaskCustom(props) {\r\n    const {...other } = props;\r\n\r\n  \r\n    return (\r\n      <MaskedInput\r\n        guide={false}\r\n        {...other}\r\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\r\n        placeholderChar={'\\u2000'}\r\n        showMask\r\n      />\r\n    );\r\n}\r\n\r\nfunction BasicInformationPtTwo(props){\r\n    \r\n    return(\r\n        <div>\r\n            <Typography>Personal Information</Typography>\r\n            <FormControl margin=\"auto\" fullWidth required>\r\n                <InputLabel htmlFor=\"AddressStreet\">Street Address</InputLabel>\r\n                <Input name=\"AddressStreet\" autoFocus value={props.val.AddressStreet} onChange={props.handleChange}></Input>\r\n            </FormControl>\r\n            <Grid container spacing={8}>\r\n                <Grid item xs={12} sm={5}>\r\n                    <FormControl margin=\"normal\" fullWidth required>\r\n                        <InputLabel htmlFor=\"AddressCity\">City</InputLabel>\r\n                        <Input name=\"AddressCity\" value={props.val.AddressCity} onChange={props.handleChange}></Input>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} sm={2}>\r\n                    <FormControl margin=\"normal\" fullWidth>\r\n                        <TextField\r\n                            id=\"State\"\r\n                            select\r\n                            label=\"State\"\r\n                            name=\"AddressState\"\r\n                            variant=\"standard\"\r\n                            onChange={props.handleChange}\r\n                            value={props.val.AddressState}   \r\n                            required                   \r\n                        >\r\n                            {props.val.states.map(option => (\r\n                                <MenuItem key={option.StateID} value={option.StateID}>\r\n                                    {option.StateString}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} sm={5}>\r\n                    <FormControl margin=\"normal\" fullWidth required>\r\n                        <InputLabel htmlFor=\"AddressZip\">Zip Code</InputLabel>\r\n                        <Input name=\"AddressZip\"  value={props.val.AddressZip} onChange={props.handleChange}></Input>\r\n                    </FormControl>\r\n                </Grid>\r\n            </Grid>\r\n            <FormControl margin=\"normal\" fullWidth required>\r\n                <InputLabel htmlFor=\"DateOfBirth\">Date Of Birth</InputLabel>\r\n                <Input name=\"DateOfBirth\" placeholder=\"YYYY-MM-DD\" value={props.val.DateOfBirth}  inputComponent={DateMaskCustom} onChange={props.handleChange}></Input>\r\n            </FormControl>\r\n            <FormControl margin=\"auto\" fullWidth>\r\n                <TextField\r\n                    id=\"Sex\"\r\n                    select\r\n                    label=\"Gender\"\r\n                    name=\"Sex\"\r\n                    variant=\"standard\"\r\n                    onChange={props.handleChange}\r\n                    value={props.val.Sex}   \r\n                    required                   \r\n                >\r\n                    {props.val.sexes.map(option => (\r\n                        <MenuItem key={option.SexID} value={option.SexID}>\r\n                            {option.Gender}\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n            </FormControl>\r\n            <FormControl margin=\"auto\" fullWidth>\r\n                <TextField\r\n                    id=\"Race\"\r\n                    select\r\n                    label=\"Race\"\r\n                    name=\"raceID\"\r\n                    variant=\"standard\"\r\n                    onChange={props.handleChange}\r\n                    value={props.val.raceID}   \r\n                    required                   \r\n                >\r\n                    {props.val.races.map(option => (\r\n                        <MenuItem key={option.RaceID} value={option.RaceID}>\r\n                            {option.Race}\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n            </FormControl>\r\n            <FormControl margin=\"normal\" fullWidth required>\r\n                <InputLabel htmlFor=\"SSN\">Social Security</InputLabel>\r\n                <Input name=\"SSN\" placeholder=\"XXX-XX-XXXX\"  inputComponent={SSNMaskCustom} value={props.val.SSN} onChange={props.handleChange}></Input>\r\n            </FormControl>\r\n            <FormControl margin=\"normal\" required>\r\n                <InputLabel htmlFor=\"CellNuber\">Contact Number</InputLabel>\r\n                <Input\r\n                    onChange={props.handleChange}\r\n                    name=\"CellNumber\"\r\n                    id=\"Contact Number\"\r\n                    value={props.val.CellNumber}\r\n                    inputComponent={TextMaskCustom}\r\n                />\r\n            </FormControl>\r\n            \r\n                \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BasicInformationPtTwo;","import { Paper, Typography, Dialog, DialogTitle, DialogContent, DialogActions, DialogContentText } from \"@material-ui/core\";\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport HomeLogo  from '@material-ui/icons/Home';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport {Button} from '@material-ui/core';    \r\nimport BasicInformation from '../Registration/BasicInformation';\r\nimport BasicInformationPtTwo from '../Registration/BasicInformationPtTwo';\r\n\r\n\r\nconst styles = theme => ({\r\n    paperForm: {\r\n        width: '25%',\r\n        marginLeft: '7%',\r\n        marginTop: '-15%',\r\n        padding: theme.spacing.unit*2,\r\n        flexDirection: 'column',\r\n        backgroundColor: \"#e0e0e0\",\r\n    },\r\n    icon: {\r\n        margin: theme.spacing.unit,\r\n        fontSize: \"150%\",\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n    TextField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        margin: theme.spacing.unit*2,\r\n    },\r\n    middleInitial: {\r\n        width:\"15%\",\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        margin: theme.spacing.unit*2\r\n    },\r\n    heading: {\r\n        margin: theme.spacing.unit,\r\n        marginLeft: \"70%\",\r\n        marginTop: \"10%\",\r\n        color: \"white\",\r\n    },\r\n});\r\n\r\nclass RegistrationForm extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Sex: \"\",\r\n            Email:\"\",\r\n            username: \"\",\r\n            password: \"\",\r\n            CellNumber: \"\",\r\n            AddressStreet: \"\",\r\n            AddressCity:\"\",\r\n            AddressState: \"\",\r\n            AddressZip: \"\",\r\n            DateOfBirth:\"\",\r\n            SSN: \"\",\r\n            userType: \"\",\r\n            registrationStep: 0,\r\n            raceID: \"\",\r\n            states:[],\r\n            sexes:[],\r\n            roles:[],\r\n            races:[],\r\n            completion: false,\r\n\r\n        };\r\n        this.handleChange=this.handleChange.bind(this);\r\n    }\r\n    moveNextInvalid(){\r\n        return  this.state.FirstName === \"\"||\r\n                this.state.LastName === \"\" ||\r\n                this.state.username === \"\" ||\r\n                this.state.password === \"\" ||\r\n                this.state.Email === \"\"\r\n    }\r\n    RegisterInvalid(){\r\n        return  this.state.Sex === \"\" ||\r\n                this.state.CellNumber.length !== 12 ||\r\n                this.state.AddressStreet === \"\" ||\r\n                this.state.AddressCity === \"\" ||\r\n                this.state.AddressState === \"\" ||\r\n                this.state.AddressZip.length !== 5 ||\r\n                this.state.DateOfBirth.length !== 10 ||\r\n                this.state.SSN.length !== 11 \r\n    }\r\n    componentDidMount(){\r\n        this.uploadStates();\r\n        this.uploadSexes();\r\n        this.uploadRoles();\r\n        this.uploadRaces();\r\n    }\r\n    handleChange = e =>{\r\n        console.log(this.state.userType)\r\n        if(window.localStorage.loggedIn !== \"true\"){\r\n            this.setState({ userType:2})\r\n        }\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    registerUser=()=>{\r\n        //backend call to add the user to the backend\r\n        fetch(`http://162.243.165.50:4000/RegisterUser`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                FirstName: this.state.FirstName,\r\n                LastName: this.state.LastName,\r\n                Sex: this.state.Sex,\r\n                Email: this.state.Email,\r\n                username: this.state.username,\r\n                password: this.state.password,\r\n                CellNumber: this.state.CellNumber,\r\n                AddressStreet: this.state.AddressStreet,\r\n                AddressCity: this.state.AddressCity,\r\n                AddressState: this.state.AddressState,\r\n                AddressZip: this.state.AddressZip,\r\n                DateOfBirth: this.state.DateOfBirth,\r\n                SSN: this.state.SSN,\r\n                userType:this.state.userType,\r\n                raceID: this.state.raceID\r\n            })\r\n        })\r\n        .then(this.setState({completion:true}))\r\n        .catch(err => console.log(err))\r\n        \r\n    }\r\n    \r\n    LoginDirect(){\r\n        window.location.replace('/')\r\n    }\r\n    homeRedirect = () =>{\r\n        window.location.replace('/DoctorRegistration')\r\n    }\r\n    \r\n    stepNext=()=>{\r\n        this.setState(state => ({\r\n            registrationStep:state.registrationStep+1\r\n        }))\r\n    }\r\n\r\n    uploadStates=()=> {\r\n        fetch(`http://162.243.165.50:4000/states`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ states:Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    uploadSexes=()=> {\r\n        fetch(`http://162.243.165.50:4000/sexes`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ sexes:Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    uploadRoles=()=> {\r\n        fetch(`http://162.243.165.50:4000/roles`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ roles:Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    uploadRaces=()=> {\r\n        fetch(`http://162.243.165.50:4000/races`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ races:Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    render(){\r\n        const {classes}=this.props;\r\n        return(\r\n            <div>\r\n                <IconButton onClick={this.homeRedirect}>\r\n                    <HomeLogo style={{color: \"#212121\"}} className={classes.icon} />\r\n                </IconButton>\r\n                <Typography variant=\"h3\" className={classes.heading}>Medical Center Registration</Typography>\r\n                <Paper elevation={10} className={classes.paperForm}>\r\n                    {this.state.registrationStep===0 ? (\r\n                        <div>\r\n                            <BasicInformation handleChange={this.handleChange} val={this.state}/>\r\n                            <FormControl margin=\"normal\" fullWidth >\r\n                                <Button onClick={this.stepNext} disabled={this.moveNextInvalid()}>\r\n                                    Next\r\n                                </Button>\r\n                            </FormControl>\r\n                        </div>\r\n                    ):(\r\n                        <div>\r\n                            <BasicInformationPtTwo handleChange={this.handleChange} val={this.state}/>\r\n                            <FormControl margin=\"normal\" fullWidth >\r\n                                <Button disabled={this.RegisterInvalid()} onClick={this.registerUser}>\r\n                                    Register\r\n                                </Button>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                    )}\r\n                </Paper>\r\n                    {window.localStorage.userType !== \"3\" ? (\r\n                        <Dialog maxWidth=\"md\" open={this.state.completion}>\r\n                            <DialogTitle id=\"form-dialog-title\"></DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText>\r\n                                    Welcome to T7 Clinics {this.state.FirstName}, please proceed to the login page to book your first appointment\r\n                                </DialogContentText>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button onClick={this.LoginDirect} color=\"primary\" fullWidth variant=\"contained\">\r\n                                    Login\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    ):(\r\n                        <Dialog maxWidth=\"md\" open={this.state.completion}>\r\n                            <DialogTitle id=\"form-dialog-title\"></DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText>\r\n                                    Thank you for registering {this.state.FirstName}\r\n                                </DialogContentText>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button onClick={this.homeRedirect} fullWidth color=\"primary\" variant=\"contained\">\r\n                                    Ok\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    )}\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nRegistrationForm.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n  \r\n  export default withStyles(styles)(RegistrationForm);","import React from 'react';\r\nimport RegistrationForm from '../Components/Registration/RegistrationForm';\r\nimport './Home.css';\r\n\r\nclass Registration extends React.Component{\r\n    render() {\r\n        return(\r\n            <div className='Home-image'>\r\n                <div className='Home-overlay'>\r\n                    <RegistrationForm/>\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Registration;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {Paper, Typography, TextField, Divider, Grid} from '@material-ui/core';\r\n\r\n\r\n\r\n//Define the looks\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '75%',\r\n    backgroundColor: \"#e0e0e0\",\r\n    padding: theme.spacing.unit*3,\r\n    height: '98%',\r\n    margin:\"auto\",\r\n    marginTop: '2%',\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField:{\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  dense: {\r\n    marginTop: 19,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n});\r\n\r\n\r\nclass MedicalInformation extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      patientID: '',\r\n      editImmunizationRecord: '',\r\n      editMedicalCondition: '',\r\n      editAllergies: '',\r\n      editProcedureRecord: '',\r\n\r\n    };\r\n  }\r\n\r\ncomponentDidMount(){\r\n  this.getMedicalRecord();\r\n};\r\n\r\ngetMedicalRecord=()=>{\r\n  fetch(`http://162.243.165.50:4000/GetMedicalHistory/${window.localStorage.userID}`)\r\n  .then(result => result.json())\r\n  .then(res => this.setState({\r\n    patientID: res.data[0].PatientID,\r\n    editImmunizationRecord: res.data[0].ImmunizationRecord,\r\n    editMedicalCondition: res.data[0].MedicalCondition,\r\n    editAllergies: res.data[0].Allergies,\r\n    editProcedureRecord: res.data[0].ProcedureRecord\r\n  }))\r\n  .catch(err => console.error(err))\r\n};\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n    return (\r\n      <div>\r\n          <Paper className={classes.root} elevation={2}>\r\n              <Typography variant=\"h3\" >Patient Medical Record</Typography>\r\n              <br />\r\n              <Typography variant=\"h4\" >Summary</Typography>\r\n              <TextField\r\n                label=\"Patient ID\"\r\n                margin=\"normal\"\r\n                className={classes.textField}\r\n                value={this.state.patientID}\r\n                disabled\r\n                onChange={this.handleChange}\r\n              />\r\n              <br/>\r\n              <Grid container spacing={24}>\r\n                <Grid item sm>\r\n                <TextField\r\n                  label=\"Immunization Record\"\r\n                  className={classes.textField}\r\n                  value={this.state.editImmunizationRecord}\r\n                  margine=\"normal\"\r\n                  multiline\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  rows=\"8\"\r\n                  disabled\r\n                  onChange={this.handleChangeImmunizationRecord}\r\n                />\r\n              </Grid>\r\n                <Grid item sm>\r\n                  <TextField\r\n                  label=\"Medical Condition\"\r\n                  className={classes.textField}\r\n                  value={this.state.editMedicalCondition}\r\n                  margine=\"normal\"\r\n                  multiline\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  rows=\"8\"\r\n                  disabled\r\n                  onChange={this.handleChangeMedicalCondition}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              \r\n              <Grid container spacing={24}>\r\n                <Grid item sm>\r\n                <TextField\r\n                  label=\"Allergies\"\r\n                  className={classes.textField}\r\n                  value={this.state.editAllergies}\r\n                  margine=\"normal\"\r\n                  multiline\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  rows=\"8\"\r\n                  disabled\r\n                  onChange={this.handleChangeAllergies}\r\n                />\r\n              </Grid>\r\n                <Grid item sm>\r\n                  <TextField\r\n                  label=\"Procedures Record\"\r\n                  className={classes.textField}\r\n                  value={this.state.editProcedureRecord}\r\n                  margine=\"normal\"\r\n                  multiline\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  rows=\"8\"\r\n                  disabled\r\n                  onChange={this.handleChangeProcedureRecord}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Divider variant=\"middle\"/>\r\n          </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMedicalInformation.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MedicalInformation);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Paper, Divider, Button, TextField, Typography, FormControl, withStyles, Grid } from \"@material-ui/core\";\r\nimport MaskedInput from 'react-text-mask';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst styles = theme => ({\r\n    paperForm: {\r\n        width: '75%',\r\n        display: \"flex\",\r\n        backgroundColor: \"#e0e0e0\",\r\n        padding: theme.spacing.unit*3,\r\n        height: '98%',\r\n        margin:\"auto\",\r\n        marginTop: '2%',\r\n    },\r\n      container: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n      },\r\n      editerButtons: {\r\n        margin: theme.spacing.unit,\r\n        fontSize: 16,\r\n    },\r\n});\r\n\r\n\r\nclass ProfileInfoTest extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            first: \"\",\r\n            last: \"\",\r\n            user: \"\",\r\n            pass: \"\",\r\n            email:\"\",\r\n            cellnumber: \"\",\r\n            streetaddr: \"\",\r\n            cityaddr:\"\",\r\n            stateaddr: \"\",\r\n            zipaddr: \"\",\r\n            dob:\"\",\r\n            ssn: \"\",\r\n            sex: \"\",\r\n            insuranceID: \"\",\r\n            insuranceContact: \"\",\r\n            deduct: \"\",\r\n            company: \"\",\r\n            editing: false\r\n        };\r\n        this.handleChange=this.handleChange.bind(this);\r\n    }\r\n    retrieveUserInfo=()=> {\r\n        if(window.localStorage.userType === \"2\"){\r\n            fetch(`http://162.243.165.50:4000/Patient/${window.localStorage.LoginTableID}`)\r\n            .then(result => result.json())\r\n            .then(res => this.setState( {    first: res.data[0].FirstName,\r\n                                            last: res.data[0].LastName,\r\n                                            user: res.data[0].Username, \r\n                                            pass: res.data[0].Password, \r\n                                            email: res.data[0].Email,\r\n                                            dob: res.data[0].DOB,\r\n                                            ssn: res.data[0].SSN, \r\n                                            sex: res.data[0].SexID, \r\n                                            cellnumber: res.data[0].CellNumber,\r\n                                            streetaddr:res.data[0].AddressStreet,\r\n                                            cityaddr: res.data[0].AddressCity,\r\n                                            stateaddr: res.data[0].AddressStateID,\r\n                                            zipaddr: res.data[0].AddressZip}))\r\n            .catch(err => console.log(err));\r\n        }\r\n        else{\r\n            fetch(`http://162.243.165.50:4000/Employee/${window.localStorage.LoginTableID}`)\r\n            .then(result => result.json())\r\n            .then(res => this.setState( {    first: res.data[0].FirstName,\r\n                                            last: res.data[0].LastName,\r\n                                            user: res.data[0].Username, \r\n                                            pass: res.data[0].Password, \r\n                                            email: res.data[0].Email,\r\n                                            dob: res.data[0].DOB,\r\n                                            ssn: res.data[0].SSN, \r\n                                            sex: res.data[0].SexID, \r\n                                            cellnumber: res.data[0].CellNumber,\r\n                                            streetaddr:res.data[0].AddressStreet,\r\n                                            cityaddr: res.data[0].AddressCity,\r\n                                            stateaddr: res.data[0].AddressStateID,\r\n                                            zipaddr: res.data[0].AddressZip}))\r\n            .catch(err => console.log(err))\r\n        }\r\n    }\r\n    getInsurance(){\r\n            if(window.localStorage.userType === \"2\") {\r\n                fetch(`http://162.243.165.50:4000/Insurance/${window.localStorage.userID}`)\r\n                .then(result => result.json())\r\n                .then(res => this.setState({\r\n                    deduct:res.data[0].Deductible,\r\n                    insuranceID: res.data[0].InsuranceClientID,\r\n                    insuranceContact: res.data[0].ContactNumber,\r\n                    company: res.data[0].Name,\r\n\r\n                }))\r\n                .catch(err => console.log(err))\r\n        }\r\n\r\n    }\r\n    updateUserInfo=()=>{\r\n        //backend call to add the user to the backend\r\n        if(window.localStorage.userType!== \"2\"){\r\n            fetch(`http://162.243.165.50:4000/UpdateUser`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },body: JSON.stringify({\r\n                    UserID: window.localStorage.userID,\r\n                    InsuranceID: 0,\r\n                    FirstName:this.state.first,\r\n                    LastName:this.state.last,\r\n                    Sex: this.state.sex,\r\n                    Email: this.state.email,\r\n                    username: this.state.user,\r\n                    password: this.state.pass,\r\n                    CellNumber: this.state.cellnumber,\r\n                    AddressStreet: this.state.streetaddr,\r\n                    AddressCity: this.state.cityaddr,\r\n                    AddressState: this.state.stateaddr,\r\n                    AddressZip: this.state.zipaddr,\r\n                    userType: window.localStorage.userType,\r\n                    LoginTableID: window.localStorage.LoginTableID,\r\n                    Deductible: 0,\r\n                    Name: \"Name\",\r\n                    ContactNumber: \"000-000-0000\"\r\n                })\r\n            })\r\n        .catch(err => console.log(err))\r\n        }\r\n        else{\r\n            fetch(`http://162.243.165.50:4000/UpdateUser`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },body: JSON.stringify({\r\n                    UserID: window.localStorage.userID,\r\n                    InsuranceID: this.state.insuranceID,\r\n                    FirstName:this.state.first,\r\n                    LastName:this.state.last,\r\n                    Sex: this.state.sex,\r\n                    Email: this.state.email,\r\n                    username: this.state.user,\r\n                    password: this.state.pass,\r\n                    CellNumber: this.state.cellnumber,\r\n                    AddressStreet: this.state.streetaddr,\r\n                    AddressCity: this.state.cityaddr,\r\n                    AddressState: this.state.stateaddr,\r\n                    AddressZip: this.state.zipaddr,\r\n                    userType: window.localStorage.userType,\r\n                    LoginTableID: window.localStorage.LoginTableID,\r\n                    Deductible: this.state.deduct,\r\n                    Name: this.state.company,\r\n                    ContactNumber: this.state.insuranceContact\r\n                })\r\n            })\r\n        .catch(err => console.log(err))\r\n        }\r\n        \r\n        \r\n    }\r\n    EmptyEntries(){\r\n        return  this.state.first === \"\"||\r\n                this.state.last === \"\" ||\r\n                this.state.sex === \"\" ||\r\n                this.state.email === \"\" ||\r\n                this.state.user === \"\" ||\r\n                this.state.pass === \"\" ||\r\n                this.state.cellnumber === \"\" ||\r\n                this.state.streetaddr=== \"\" ||\r\n                this.state.cityaddr === \"\" ||\r\n                this.state.stateaddr === \"\" ||\r\n                this.state.zipaddr === \"\"\r\n    }\r\n    validateUsername(){\r\n        if(this.state.user.length >=6 || this.state.user.length <=1 ){\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n    validatePassword(){\r\n        if(this.state.pass.length >=6 || this.state.pass.length <=1 ){\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n    SSNMaskCustom(props) {\r\n        const {...other } = props;\r\n        return (\r\n          <MaskedInput\r\n            guide={false}\r\n            {...other}\r\n            mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\r\n            placeholderChar={'\\u2000'}\r\n            showMask\r\n          />\r\n        );\r\n    }\r\n    PhoneMaskCustom(props) {\r\n        const {...other } = props;\r\n      \r\n        return (\r\n          <MaskedInput\r\n            {...other}\r\n            guide={false}\r\n            mask={[/[1-9]/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\r\n            placeholderChar={'\\u2000'}\r\n            showMask\r\n          />\r\n        );\r\n    }\r\n    componentDidMount(){\r\n        this.retrieveUserInfo();\r\n        this.getInsurance();\r\n    }\r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    editMode = _ => {\r\n        console.log(this.state)\r\n        this.setState({\r\n            editing: true\r\n        });\r\n    }\r\n    saveChanges = _ => {\r\n        this.updateUserInfo();\r\n        this.setState({\r\n            editing: false\r\n        });\r\n    }\r\n    revertChanges = _ => {\r\n        this.retrieveUserInfo();\r\n        this.setState({\r\n            editing: false\r\n        });\r\n    }\r\n//for implementation of user menu, Paper className will be removed and\r\n// user menu will define css styles. \r\n  render() { \r\n      const {classes}=this.props;\r\n    return (\r\n      <div>\r\n          <Paper className={classes.paperForm}>\r\n            <form  noValidate autoComplete=\"off\">\r\n                <div>\r\n                    {window.localStorage.userType=== \"2\" ? (\r\n                        <Typography variant=\"h5\">Welcome {this.state.first}</Typography>\r\n                    ):(\r\n                        <Typography variant=\"h5\">Welcome Dr. {this.state.last}</Typography>        \r\n                    )}\r\n                    <br/>\r\n                    <Divider variant=\"middle\"/>\r\n                    <br/>\r\n                </div>\r\n                <div>\r\n                    <Typography variant=\"h6\" >User Information</Typography>\r\n                    <Grid container spacing={8}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <FormControl  margin=\"dense\" fullWidth>\r\n                                <TextField disabled={!this.state.editing}\r\n                                    name=\"first\"\r\n                                    label=\"First Name\"\r\n                                    variant=\"outlined\"\r\n                                    value={this.state.first}\r\n                                    defaultValue={this.state.first}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <FormControl  margin=\"dense\" fullWidth>\r\n                                <TextField disabled={!this.state.editing}\r\n                                    name=\"last\"\r\n                                    label=\"Last Name\"\r\n                                    variant=\"outlined\"\r\n                                    value={this.state.last}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={5}>\r\n                            <FormControl  margin=\"dense\" fullWidth>\r\n                                <TextField disabled={!this.state.editing}\r\n                                    name=\"streetaddr\"\r\n                                    label=\"Street Address\"\r\n                                    variant=\"outlined\"\r\n                                    value={this.state.streetaddr}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <FormControl  margin=\"dense\" fullWidth>\r\n                                <TextField disabled={!this.state.editing}\r\n                                    name=\"cityaddr\"\r\n                                    label=\"City\"\r\n                                    variant=\"outlined\"\r\n                                    value={this.state.cityaddr}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={1}>\r\n                            <FormControl  margin=\"dense\" fullWidth>\r\n                                <TextField disabled={!this.state.editing}\r\n                                    name=\"stateaddr\"\r\n                                    label=\"State\"\r\n                                    variant=\"outlined\"\r\n                                    value={this.state.stateaddr}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={2}>\r\n                            <FormControl  margin=\"dense\" fullWidth>\r\n                                <TextField disabled={!this.state.editing}\r\n                                    name=\"zipaddr\"\r\n                                    label=\"Zip Code\"\r\n                                    variant=\"outlined\"\r\n                                    value={this.state.zipaddr}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <FormControl fullWidth margin=\"dense\">\r\n                                <TextField disabled\r\n                                    name=\"dob\"\r\n                                    label=\"Birthdate\"\r\n                                    variant=\"outlined\"\r\n                                    value={this.state.dob.substring(0,10)}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <FormControl fullWidth margin=\"dense\" >\r\n                                <TextField disabled={!this.state.editing}\r\n                                    name=\"cellnumber\"\r\n                                    label=\"Contact Phone\"\r\n                                    variant=\"outlined\"\r\n                                    value={this.state.cellnumber}\r\n                                    inputComponent={this.PhoneMaskCustom(classes)}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <FormControl fullWidth margin=\"dense\" >\r\n                                <TextField disabled\r\n                                    name=\"ssn\"\r\n                                    label=\"Last Four of SSN\"\r\n                                    variant=\"outlined\"\r\n                                    value={this.state.ssn}\r\n                                    inputComponent={this.SSNMaskCustom(classes)}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br/>\r\n                    <Divider variant=\"middle\" />\r\n                    <br/>\r\n                </div> \r\n                { window.localStorage.userType === \"2\" &&\r\n                    <div>\r\n                        <Typography variant=\"h6\">Insurance Information</Typography>\r\n                            <Grid container spacing= {8}>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <FormControl fullWidth margin=\"dense\" >\r\n                                        <TextField disabled={!this.state.editing}\r\n                                            name=\"company\"\r\n                                            label=\"Network\"\r\n                                            variant=\"outlined\"\r\n                                            value={this.state.company}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <FormControl fullWidth margin=\"dense\" >\r\n                                        <TextField disabled={!this.state.editing}\r\n                                            name=\"insuranceID\"\r\n                                            label=\"Insurance ID\"\r\n                                            variant=\"outlined\"\r\n                                            value={this.state.insuranceID}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <FormControl fullWidth margin=\"dense\" >\r\n                                        <TextField disabled={!this.state.editing}\r\n                                            name=\"deduct\"\r\n                                            label=\"Deductible\"\r\n                                            variant=\"outlined\"\r\n                                            value={this.state.deduct}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <FormControl fullWidth margin=\"dense\" >\r\n                                        <TextField disabled={!this.state.editing}\r\n                                            name=\"insuranceContact\"\r\n                                            label=\"Insurance Contact Number\"\r\n                                            variant=\"outlined\"\r\n                                            value={this.state.insuranceContact}\r\n                                            inputComponent={this.PhoneMaskCustom(classes)}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                        <br/>\r\n                        <Divider variant=\"middle\" />\r\n                        <br/>\r\n                    </div>\r\n                }\r\n\r\n                <div>\r\n                    <Typography variant=\"h6\">Account Information</Typography>\r\n                    <Grid container spacing={8}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <FormControl  margin=\"dense\" fullWidth>\r\n                                <TextField disabled={!this.state.editing}\r\n                                    name=\"user\" \r\n                                    label=\"Username\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.user}\r\n                                    error={!this.validateUsername()}\r\n                                    helperText={this.validateUsername() ? \"\":\"Username is not valid\"}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <FormControl  margin=\"dense\" fullWidth>\r\n                                <TextField disabled={!this.state.editing}\r\n                                    name=\"pass\"\r\n                                    type=\"password\" \r\n                                    label=\"Password\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.pass}\r\n                                    error={!this.validatePassword()}\r\n                                    helperText={this.validatePassword() ? \"\":\"Password is not valid\"}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <FormControl margin=\"dense\" fullWidth>\r\n                                <TextField disabled={!this.state.editing}\r\n                                    name=\"email\" \r\n                                    label=\"Email\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.email}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        \r\n                        <br/>\r\n                        <Divider variant=\"middle\"/>\r\n                        <br/>\r\n\r\n                    </Grid>\r\n                </div>\r\n                {!this.state.editing ? (\r\n                    <div>\r\n                        {this.retrieveUserInfo}\r\n                        <FormControl margin=\"none\">\r\n                         <Button variant=\"contained\" size=\"small\" className={classes.editerButtons} onClick={this.editMode}>\r\n                            <EditIcon />\r\n                                Edit\r\n                          </Button>\r\n                        </FormControl>\r\n                      </div>\r\n                  ):(\r\n                      <div>\r\n                          <FormControl margin=\"right\">\r\n                             <Button disabled={this.EmptyEntries()} variant=\"contained\" size=\"small\" className={classes.editerButtons} onClick={this.saveChanges}>\r\n                                <SaveIcon />\r\n                                    Save\r\n                              </Button>\r\n                              </FormControl>\r\n                              <FormControl margin=\"left\">\r\n                             <Button variant=\"contained\" size=\"small\" className={classes.editerButtons} onClick={this.revertChanges} >\r\n                                <CancelIcon />\r\n                                    Revert\r\n                              </Button>\r\n                          </FormControl>\r\n                      </div>\r\n                  )}  \r\n                        {/* //CLOSE HERER */}\r\n            </form>\r\n          </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProfileInfoTest.propTypes={\r\n    classes: PropTypes.object.isRequired\r\n};\r\n//PhoneMaskCustom.propTypes = {\r\n//    inputRef: PropTypes.func.isRequired,\r\n//};\r\nexport default withStyles (styles)(ProfileInfoTest);","import React, { Component } from 'react';\r\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\r\nimport MedicalInformation from '../Components/Profile/MedicalInformation';\r\n//import ProfileInfo from '../Components/Profile/ProfileInfo';\r\nimport { withStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport './Profile.css'\r\nimport ProfileInfoTest from '../Components/Profile/ProfileInfoTest';\r\n\r\nconst styles = theme =>({\r\n  root: {\r\n      height: \"200vh\",\r\n      backgroundImage: `url(${Image})`,\r\n  },\r\n});\r\n\r\nclass Profile extends Component {\r\n  render() { \r\n    return (\r\n      <div className='Profile-image'>\r\n        <NavigationBar title={\"My Profile\"} Tab={1}/>\r\n        <ProfileInfoTest/>\r\n        {window.localStorage.userType === \"2\" &&\r\n        <MedicalInformation/>}\r\n        <br/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProfile.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Profile);\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport WhichFacility from '../Appointments/WhichFacility';\r\n\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n      margin: theme.spacing.unit,\r\n      fontSize: 32,\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing.unit * 3,\r\n        overflowX: 'auto',\r\n      },\r\n      table: {\r\n        minWidth: 800,\r\n      },\r\n});\r\n\r\nclass ModifyFacility extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\topenForm: false,\r\n\t\t\tselectedFacility: \"\",\r\n\t\t\tFacilities: this.props.val.Facilities,\r\n\t\t\tFacilityID: \"\",\r\n\t\t}\r\n\t}\r\n\t\r\n\tcomponentDidMount(){\r\n\t\tthis.setState({FacilityID: this.props.Sub_FacilityID})\r\n        //this.getFacilities();\r\n    }\r\n\t\r\n\t// Get Facility information\r\n\t/*getFacilities=()=> {\r\n        fetch(`http://162.243.165.50:4000/Facilities`)\r\n        .then(result => result.json())\r\n        .then(res => this.setState({ Facilities:res.data }))\r\n        .catch(err => console.log(err))\r\n    };*/\r\n\t\r\n\tgetFacilityIDFromName(lookUpName){\r\n\t\tfor(var i = 0; i < this.state.Facilities.length; i++){\r\n\t\t\tif(this.state.Facilities[i].FacilityName === lookUpName){\r\n\t\t\t\treturn this.state.Facilities[i].FacilityID\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1\r\n\t}\r\n\t\r\n\thandleClickOpen = () => {\r\n        //this.getFacilities();\r\n        this.setState({ Facilities: this.props.val.Facilities,\r\n\t\t\t\t\t\topenForm: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ openForm: false });\r\n    };\r\n\t\r\n\thandleChange = e =>{\r\n        this.setState({\r\n\t\t\t[e.target.name] : e.target.value,\r\n\r\n\t\t})\r\n\t\tvar i;\r\n\t\tfor(i=0; i<this.state.Facilities.length;i++){\r\n\t\t\tif(this.state.Facilities[i].FacilityID === e.target.value){\r\n\t\t\t\tthis.setState({selectedFacility:this.state.Facilities[i].FacilityName})\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n\t\r\n\thandleDoneSelected = () =>{\r\n\t\tif(this.state.selectedFacility !== \"\"){\r\n\t\t\tfor(var i=0; i < this.props.val.WorkSchedule.length; i++){\r\n\t\t\t\tif(this.props.val.WorkSchedule[i].WeekDayID === this.props.Sub_DayID){\r\n\t\t\t\t\tconsole.log(\"Facility: \" + this.state.selectedFacility)\r\n\t\t\t\t\tconsole.log(this.props.val.WorkSchedule[i])\r\n\t\t\t\t\tthis.props.val.WorkSchedule[i].FacilityName = this.state.selectedFacility\r\n\t\t\t\t\tthis.props.val.WorkSchedule[i].FacilityID = this.getFacilityIDFromName(this.state.selectedFacility)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconsole.log(\"UPDATING\")\r\n\t\t\tfetch(`http://162.243.165.50:4000/UpdateWorkScheduleDay/`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                UpdateDayID: this.props.Sub_DayID,\r\n\t\t\t\tEmployeeID: window.localStorage.userID,\r\n\t\t\t\tNewFacilityID: this.getFacilityIDFromName(this.state.selectedFacility)\r\n            })\r\n        })\r\n        .then(this.grabAppointments)\r\n        .catch(err => console.log(err));\r\n\t\t}\r\n\t\tthis.handleClose()\r\n\t\tsetTimeout(function(){\r\n\t\t\twindow.location.replace('/Scheduling')\r\n\t\t}, 200);\r\n\t}\r\n\t\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<Button variant=\"contained\" color=\"inherit\" className={this.props.Button} fullWidth onClick={this.handleClickOpen}>\r\n                    Change Facility\r\n                </Button>\r\n\t\t\t\t<Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\r\n\t\t\t\t\t<DialogTitle id=\"form-dialog-title\"></DialogTitle>\r\n\t\t\t\t\t<DialogContent>\r\n                        <DialogContentText>\r\n                            Please select a new facilty for this weekday\r\n                        </DialogContentText>\r\n                        <WhichFacility val={this.state} handleChange={this.handleChange}/>\r\n                    </DialogContent>\r\n\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t<Button onClick={this.handleDoneSelected} disabled={this.state.FacilityID===\"\"} color=\"primary\">\r\n                            Done\r\n                        </Button>\r\n                    </DialogActions>\r\n\t\t\t\t</Dialog>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nModifyFacility.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ModifyFacility);\r\n\r\n","import { TextField, MenuItem } from \"@material-ui/core\";\r\nimport React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nfunction WhichDay(props){\r\n    \r\n    return(\r\n        <div>\r\n            <FormControl margin=\"normal\" fullWidth>\r\n                    <TextField\r\n                        id=\"DayID\"\r\n                        select\r\n                        label=\"Please Choose A Day\"\r\n                        name=\"DayID\"\r\n                        variant=\"standard\"\r\n                        onChange={props.handleChange}\r\n                        value={props.val.DayID}   \r\n                        required                   \r\n                    >\r\n                        {props.val.OpenDays.map(option => (\r\n                            <MenuItem key={option.DayID} value={option.DayID}>\r\n                                {option.WeekDay}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WhichDay;","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport WhichFacility from '../Appointments/WhichFacility';\r\nimport WhichDay from './WhichDay';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n      margin: theme.spacing.unit,\r\n      fontSize: 32,\r\n    },\r\n});\r\n\r\nclass AddNewDay extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n\t\t\topenForm: false,\r\n\t\t\tFacilities: [],\r\n\t\t\tOpenDays: [],\r\n\t\t\tDayID: -1,\r\n\t\t\tFacilityID: -1,\r\n\t\t}\r\n\t}\r\n\t\r\n\tgetOpenDaysList(){\r\n\t\tvar newDayList = []\r\n\t\tvar shouldAddNew = true\r\n\t\tfor(var i = 0; i < this.props.val.Weekdays.length; i++){\r\n\t\t\tfor(var k = 0; k < this.props.val.WorkSchedule.length; k++){\r\n\t\t\t\tif(this.props.val.WorkSchedule[k].WeekDayID === this.props.val.Weekdays[i].DayID)\r\n\t\t\t\t\tshouldAddNew = false\r\n\t\t\t}\r\n\t\t\tif(shouldAddNew){\r\n\t\t\t\tnewDayList.push(this.props.val.Weekdays[i])\r\n\t\t\t}\r\n\t\t\tshouldAddNew = true\r\n\t\t}\r\n\t\treturn newDayList\r\n\t}\r\n\t\r\n\thandleClickOpen = () => {\r\n        this.setState({ Facilities: this.props.val.Facilities,\r\n\t\t\t\t\t\tOpenDays : this.getOpenDaysList(),\r\n\t\t\t\t\t\topenForm: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ openForm: false,\r\n\t\t\t\t\t\tDayID: -1,\r\n\t\t\t\t\t\tFacilityID: -1 });\r\n    };\r\n\t\r\n\thandleChange = e =>{\r\n        this.setState({\r\n\t\t\t[e.target.name] : e.target.value\r\n        })\r\n    }\r\n\t\r\n\thandleConfirmChange = () => {\r\n\t\tfetch(`http://162.243.165.50:4000/AddNewWorkSchedule/`, {\r\n\t\tmethod:\"POST\",\r\n        headers: {\r\n            \"Content-Type\":\"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n            DayID: this.state.DayID,\r\n\t\t\tEmployeeID: window.localStorage.userID,\r\n\t\t\tFacilityID: this.state.FacilityID\r\n        })})\r\n\t\tconsole.log(\"DayID : \" + this.state.DayID)\r\n\t\tconsole.log(\"EmployeeID : \" + window.localStorage.userID)\r\n\t\tconsole.log(\"FacilityID : \" + this.state.FacilityID)\r\n\t\tthis.handleClose()\r\n\t\tsetTimeout(function(){\r\n\t\t\twindow.location.replace('/Scheduling')\r\n\t\t}, 1000);\r\n\t};\r\n\t\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>\r\n                    Add New Day\r\n                </Button>\r\n                <Dialog open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Add a new day</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Please fill out the information for a new day\r\n                        </DialogContentText>\r\n\t\t\t\t\t\t<WhichFacility val={this.state} handleChange={this.handleChange}/>\r\n\t\t\t\t\t\t<WhichDay val={this.state} handleChange={this.handleChange}/>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n\t\t\t\t\t\t<Button onClick={this.handleConfirmChange} color=\"primary\">\r\n                            Confirm\r\n                        </Button>\r\n                        <Button onClick={this.handleClose} color=\"secondary\">\r\n                            Cancel\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nAddNewDay.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  export default withStyles(styles)(AddNewDay);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Typography, FormControl, withStyles, Grid } from \"@material-ui/core\";\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ModifyFacility from './ModifyFacility';\r\nimport AddNewDay from './AddNewDay';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n//import WhichFacility from '../Appointments/WhichFacility';'\r\n\r\nconst styles = theme => ({\r\n\troot: {\r\n        width: '100%',\r\n        alignItems: \"center\",\r\n        display: \"flex\",\r\n        height: \"100vh\",\r\n        flexDirection: 'column',\r\n        backgroundColor: \"#a09d9d\",\r\n        padding: theme.spacing.unit*3,\r\n        margin:\"auto\",\r\n  \r\n    },\r\n    AdditionButton: {\r\n        marginLeft:\"70%\",\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        backgroundColor: \"#a09d9d\",\r\n        padding: theme.spacing.unit*3,\r\n  \r\n    },\r\n    Button: {\r\n        marginTop: '.5%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '20%',\r\n        flexShrink: 0,\r\n      },\r\n      secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n        flexBasis: '100%',\r\n        margin: 'auto'\r\n      },\r\n});\r\n\r\nclass DaySchedule extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\topenForm: false, // Toggle for dialog box when removing day\r\n\t\t\tselectedDayID: -1, // Selected day for removal assigned when opening remove day box\r\n\t\t\tFacilityID: \"\", // Selected facility to be changed\r\n\t\t\tWorkSchedule: [], // WorkSchedule for specified Employee\r\n            Facilities: [], // All Facility information\r\n            Weekdays: [] // All WeekDay information \r\n        };\r\n\t\tthis.handleChange=this.handleChange.bind(this);\r\n\t}\r\n\t\r\n\tcomponentDidMount(){\r\n        this.grabWorkSchedule();\r\n\t\tthis.getFacilities();\r\n\t\tthis.getWeekday();\r\n    }\r\n\t\r\n\t// Get the WorkSchedule list for specified employee\r\n\tgrabWorkSchedule=()=>{\r\n\t\tfetch(`http://162.243.165.50:4000/WorkSchdule/${window.localStorage.userID}`)\r\n        .then(result => result.json())\r\n        .then(res => this.setState({ WorkSchedule:res.data[0]}))\r\n        .catch(err => console.log(err));\r\n\t}\r\n\t\r\n\t// Get Facility information\r\n\tgetFacilities=()=> {\r\n        fetch(`http://162.243.165.50:4000/Facilities`)\r\n        .then(result => result.json())\r\n        .then(res => this.setState({ Facilities:res.data }))\r\n        .catch(err => console.log(err))\r\n    };\r\n\t\r\n\t// Get Weekday information\r\n\tgetWeekday=()=> {\r\n        fetch(`http://162.243.165.50:4000/Weekday`)\r\n        .then(result => result.json())\r\n        .then(res => this.setState({ Weekdays:res.data }))\r\n        .catch(err => console.log(err))\r\n    };\r\n\t\r\n\thandleChange = panel => (event, expanded) => {\r\n        this.setState({\r\n            expanded: expanded ? panel : false,\r\n        });\r\n    }\r\n\t\r\n\thandleClickOpen = (dayID) => {\r\n\t\tthis.setState({selectedDayID: dayID});\r\n        this.setState({ openForm: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ openForm: false });\r\n    };\r\n\t\r\n\thandleConfirmRemove = () => {\r\n\t\tconsole.log(this.state.selectedDayID)\r\n\t\tconsole.log(this.state.WorkSchedule)\r\n\t\tfetch(`http://162.243.165.50:4000/RemoveWorkScheduleDay/`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                RemoveDayID: this.state.selectedDayID,\r\n\t\t\t\tEmployeeID: window.localStorage.userID,\r\n            })\r\n        })\r\n        .then(this.grabAppointments)\r\n        .catch(err => console.log(err));\r\n\t\tthis.handleClose()\r\n\t\tsetTimeout(function(){\r\n\t\t\twindow.location.replace('/Scheduling')\r\n\t\t}, 200);\r\n\t}\r\n\t\r\n\tgetDayName(dayID){\r\n\t\tfor(var i = 0; i < this.state.Weekdays.length; i++){\r\n\t\t\tif(this.state.Weekdays[i].DayID === dayID){\r\n\t\t\t\treturn this.state.Weekdays[i].WeekDay\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\trender(){\r\n\t\tconst {classes}=this.props;\r\n\t\tconst { expanded } = this.state;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className={classes.root}>\r\n\t\t\t\t\t{this.state.WorkSchedule.map(option => (\r\n\t\t\t\t\t\t<FormControl key={option.WeekDayID} fullWidth>\r\n\t\t\t\t\t\t\t<ExpansionPanel square expanded={expanded === option.WeekDayID}  onChange={this.handleChange(option.WeekDayID)}>\r\n\t\t\t\t\t\t\t\t<ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n\t\t\t\t\t\t\t\t\t<Typography className={classes.heading}>Day:  <b>{option.WeekDay}</b></Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography className={classes.heading}>Facility:  <b>{option.FacilityName}</b></Typography>\r\n\t\t\t\t\t\t\t\t</ExpansionPanelSummary>\r\n\t\t\t\t\t\t\t\t<ExpansionPanelDetails>\r\n\t\t\t\t\t\t\t\t\t<Typography className={classes.secondaryHeading}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid container spacing={8}>\r\n\t\t\t\t                            <Grid item xs={12} sm={9}>\r\n                                                <ModifyFacility  val={this.state} Button={classes.Button} Sub_DayID={option.WeekDayID} Sub_FacilityID={option.FacilityID}/>\r\n                                            </Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm={3}>\r\n                                                <Button fullWidth variant=\"contained\" className={classes.Button} onClick={()=>this.handleClickOpen(option.WeekDayID)} color=\"secondary\" marginTop=\"10%\">\r\n                                                    Remove Day\r\n                                                </Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogTitle id=\"form-dialog-title\"></DialogTitle>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogContent>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogContentText>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAre you sure you want to remove {this.getDayName(this.state.selectedDayID)} from your Schedule?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DialogContentText>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</DialogContent>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button className={classes.Button} onClick={this.handleClose} color=\"primary\" variant=\"contained\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNo\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button className={classes.Button} onClick={this.handleConfirmRemove} color=\"secondary\" variant=\"contained\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tYes\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</DialogActions>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Dialog>\r\n                                            </Grid>\r\n                                        </Grid>\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</ExpansionPanelDetails>\r\n\t\t\t\t\t\t\t</ExpansionPanel>\r\n\t\t\t\t\t\t</FormControl>\t\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<div className={classes.AdditionButton}>\r\n                        <AddNewDay val={this.state} Button={classes.Button}/>\r\n                    </div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nDaySchedule.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DaySchedule);","import React, { Component } from 'react';\r\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\r\nimport DaySchedule from '../Components/Scheduling/DaySchedule';\r\n\r\nclass Scheduling extends Component {\r\n  render() { \r\n    return (\r\n      <div>\r\n        <NavigationBar title={\"My Schedule\"} Tab={2}/>\r\n        <DaySchedule/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Scheduling;\r\n","import React from 'react';\r\nimport RegistrationForm from '../Components/Registration/RegistrationForm';\r\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\r\nimport './Home.css';\r\n\r\nclass DoctorRegistration extends React.Component{\r\n    render() {\r\n        return(\r\n            <div className='Home-image'>\r\n                <div className='Home-overlay'>\r\n                    <NavigationBar title={\"Register A New User\"} Tab={4}/>\r\n                    <RegistrationForm/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default DoctorRegistration;","import React from 'react';\r\nimport { GoogleApiWrapper, Marker, Map } from 'google-maps-react';\r\n\r\n\r\nexport class Mapper extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    const { lat, lng } = this.props.initialCenter;\r\n    this.state = {\r\n      currentLocation: {\r\n        lat: lat,\r\n        lng: lng\r\n      },\r\n      isCurrMarkerShown:false,\r\n      showingInfoWindow: false,\r\n      activeMarker: {},\r\n      selectedPlace: {},\r\n      Facilities: [],\r\n      FacilitiesGeoCode:[],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n      //upon initialization, get browser geolocation\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(\r\n          position => {\r\n            this.setState(prevState => ({\r\n              currentLocation: {\r\n                ...prevState.currentLatLng,\r\n                lat: position.coords.latitude,\r\n                lng: position.coords.longitude\r\n              },\r\n              isCurrMarkerShown: true\r\n            }))\r\n          }\r\n        )\r\n      } else {\r\n        console.log(\"Failed to mount current location\")\r\n      }\r\n  }\r\n \r\n  onMarkerClick = (props, marker, e) =>\r\n    this.setState({\r\n      selectedPlace: props,\r\n      activeMarker: marker,\r\n      showingInfoWindow: true,\r\n  });\r\n\r\n  onClose = props => {\r\n        if (this.state.showingInfoWindow) {\r\n          this.setState({\r\n            showingInfoWindow: false,\r\n            activeMarker: null\r\n          });\r\n        }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Map google={this.props.google}\r\n          style={{width: '100vw', height: '100vh', position: 'center', margin: 'auto'}}\r\n          className={'map'}\r\n          zoom={12}\r\n          center={{\r\n            lat: this.state.currentLocation.lat,\r\n            lng: this.state.currentLocation.lng\r\n          }}\r\n        >\r\n          <Marker\r\n                name={'Your location'}\r\n                onClick={this.onMarkerClick}\r\n                position={{\r\n                  lat: this.state.currentLocation.lat,\r\n                  lng: this.state.currentLocation.lng\r\n                }}\r\n          />\r\n          <Marker\r\n                name={'Your location'}\r\n                onClick={this.onMarkerClick}\r\n                position={{\r\n                  lat: '29.705566',\r\n                  lng: '-95.474180'\r\n                }}\r\n          />\r\n          <Marker\r\n                name={'Your location'}\r\n                onClick={this.onMarkerClick}\r\n                position={{\r\n                  lat: '29.761526',\r\n                  lng: '-95.365127'\r\n                }}\r\n          />\r\n          <Marker\r\n                name={'Your location'}\r\n                onClick={this.onMarkerClick}\r\n                position={{\r\n                  lat: '29.760987',\r\n                  lng: '-95.367759'\r\n                }}\r\n          />\r\n        </Map>\r\n      </div>\r\n      )\r\n   }\r\n}\r\n\r\n//initial centering positioned at UH.\r\nMapper.defaultProps = {\r\n  zoom: 14,\r\n  initialCenter: {\r\n    lat: -29.41,\r\n    lng: 95.38\r\n  },\r\n  centerAroundCurrentLocation: false,\r\n  visible: true\r\n};\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyDKOXGgce4aWbeOHVnhgD8S0NJJph3ShCc'\r\n})(Mapper)\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport HomeLogo  from '@material-ui/icons/KeyboardArrowLeftRounded';\r\nimport { Mapper } from '../Components/Locator/Mapper';\r\n\r\nconst styles = theme => ({\r\n    background: {\r\n      backgroundImage: '../Components/Home/BackgroundPicture.jpg',\r\n      /* Full height */\r\n      height: '100vh',\r\n      /* Center and scale the image nicely */\r\n      backgroundPosition: 'center',\r\n      backgroundRepeat: 'repeat',\r\n      backgroundSize: 'cover',\r\n    },\r\n    mapContainer: {\r\n      width: '100vw',\r\n      height: '100vh',\r\n      flexDirection: 'column',\r\n      backgroundColor: \"#a09d9d\",\r\n      margin:\"auto\",\r\n      display: 'flex',\r\n\r\n    },\r\n    icon: {\r\n      fontSize: \"150%\",\r\n  },\r\n});\r\n\r\nexport class Locator extends React.Component {\r\n\r\n  redirect(){\r\n    if(window.localStorage.loggedIn !== \"true\"){\r\n      window.location.replace('/')\r\n    }\r\n    else{\r\n      window.location.replace('/Appointments')\r\n    }\r\n  }\r\n  render() { \r\n    const{classes}=this.props;\r\n    return (\r\n      <div className={classes.mapContainer}>\r\n      <Mapper/>\r\n        <IconButton onClick={this.redirect}>\r\n            <HomeLogo style={{color: \"#212121\"}} className={classes.icon} />\r\n        </IconButton>\r\n         \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLocator.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Locator);","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles, Typography, Checkbox, FormControlLabel } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nconst styles = theme =>({\r\n    Button: {\r\n        marginTop: '2%',\r\n    },\r\n});\r\n\r\n\r\nclass FacilityReports extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            openForm: false,\r\n            checkAllDates: false,\r\n            ChosenFacility: \"\",\r\n            MinimumDate: null,\r\n            MaximumDate: null,\r\n            MinimumDateDB: \"null\",\r\n            MaximumDateDB: \"null\",\r\n            Facilities: [],\r\n            Report:[],\r\n\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.uploadFacilities();\r\n    }\r\n    uploadDoctors(){\r\n\r\n    }\r\n    fetchFacilityReport(){\r\n        \r\n        fetch(`http://162.243.165.50:4000/FacilityAppointmentReport/${this.state.ChosenFacility}/${this.state.MinimumDateDB}/${this.state.MaximumDateDB}`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Report:Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    fetchDoctorReport(){\r\n        fetch(`http://162.243.165.50:4000/DoctorReport/${this.state.ChosenFacility}`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ DoctorsCount:Response.data[0].Count }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    uploadFacilities(){\r\n        fetch(`http://162.243.165.50:4000/Facilities`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Facilities:Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    MinDateChange = (d) =>{\r\n        let ApptDate=new Date(d)\r\n        ApptDate = this.FormatDate(ApptDate);\r\n        this.setState({MinimumDateDB:ApptDate});\r\n        this.setState({\r\n            MinimumDate: d\r\n        })\r\n    }\r\n    MaxDateChange = (d) =>{\r\n        let ApptDate=new Date(d)\r\n        ApptDate = this.FormatDate(ApptDate);\r\n        this.setState({MaximumDateDB:ApptDate});\r\n        this.setState({\r\n            MaximumDate: d\r\n        })\r\n    }\r\n    FormatDate=(date)=>{\r\n        date = date.getFullYear() + '-' + (this.fixMonth(date)) + '-' + date.getDate();\r\n        return date;\r\n    }\r\n\r\n    fixMonth=(date)=>{\r\n        if(date.getMonth() + 1 < 10){\r\n            return \"0\" +(date.getMonth() +1);\r\n        }\r\n        else{\r\n            return date.getMonth()+1;\r\n        }\r\n    }\r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    handlechoseChange = name => event =>{\r\n        this.setState({ \r\n            [name]: event.target.checked,\r\n            MinimumDate: null,\r\n            MaximumDate: null,\r\n            MinimumDateDB: \"null\",\r\n            MaximumDateDB: \"null\"});\r\n      };\r\n    handleClickOpen = () => {\r\n        this.fetchFacilityReport();\r\n        this.setState({ openForm: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ \r\n            openForm: false,\r\n            checkAllDates: false,\r\n            ChosenFacility: \"\",\r\n            MinimumDate: null,\r\n            MaximumDate: null,\r\n            MinimumDateDB: \"null\",\r\n            MaximumDateDB: \"null\", \r\n            Report:[],\r\n        });\r\n    };\r\n    render(){\r\n        const {classes} = this.props;\r\n        return(\r\n            <div>\r\n            <Typography variant=\"h5\">Facility Report</Typography>\r\n                <FormControl margin=\"normal\" fullWidth>\r\n                    <TextField\r\n                        id=\"ChosenFacility\"\r\n                        select\r\n                        label=\"Please Choose A Facility\"\r\n                        name=\"ChosenFacility\"\r\n                        variant=\"standard\"\r\n                        onChange={this.handleChange}\r\n                        value={this.state.ChosenFacility}   \r\n                        required                   \r\n                    >\r\n                        <MenuItem key=\"-1\" value=\"-1\">\r\n                            All Facilities\r\n                        </MenuItem>\r\n                        {this.state.Facilities.map(option => (\r\n                            <MenuItem key={option.FacilityID} value={option.FacilityID}>\r\n                                {option.FacilityName}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                </FormControl>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox\r\n                        checked={this.state.checkAllDates}\r\n                        onChange={this.handlechoseChange('checkAllDates')}\r\n                        value=\"checkAllDates\"\r\n                        />\r\n                    }\r\n                    label=\"Generate Report for all Dates\"\r\n                />\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <DatePicker\r\n                        label=\"From Date\"\r\n                        name=\"MinimumDate\"\r\n                        value={this.state.MinimumDate}\r\n                        onChange={this.MinDateChange}\r\n                        fullWidth\r\n                        disabled={this.state.checkAllDates}\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <DatePicker\r\n                        label=\"To Date\"\r\n                        name=\"MaximumDate\"\r\n                        value={this.state.MaximumDate}\r\n                        onChange={this.MaxDateChange}\r\n                        fullWidth\r\n                        disabled={this.state.checkAllDates}\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n                <Button variant=\"contained\" color=\"inherit\" fullWidth className={classes.Button} onClick={this.handleClickOpen} disabled={((this.state.MinimumDate === null || this.state.MaximumDate === null) && !this.state.checkAllDates) || this.state.ChosenFacility === \"\"}>\r\n                    Show reports for the Chosen Facility\r\n                </Button>\r\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Here is the Facility Report</DialogTitle>\r\n                    <DialogContent>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>FacilityID</TableCell>\r\n                                    <TableCell align=\"center\">Number of Doctors</TableCell>\r\n                                    <TableCell align=\"center\">Upcoming Appointments</TableCell>\r\n                                    <TableCell align=\"center\">Cancelled Appointments</TableCell>\r\n                                    <TableCell align=\"center\">Completed Appointments</TableCell>\r\n                                    <TableCell align=\"center\">Total Appointments</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {this.state.Report.map(Each => (\r\n                                    <TableRow key={Each.FacilityID}>\r\n                                        <TableCell align=\"center\">{Each.FacilityID}</TableCell>\r\n                                        <TableCell align=\"center\">{Each.DoctorsWorking}</TableCell>\r\n                                        <TableCell align=\"center\">{Each.UpcomingApps}</TableCell>\r\n                                        <TableCell align=\"center\">{Each.CancelledApps}</TableCell>\r\n                                        <TableCell align=\"center\">{Each.CompletedApps}</TableCell>\r\n                                        <TableCell align=\"center\">{Each.totalApps}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>                        \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nFacilityReports.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  \r\nexport default withStyles(styles)(FacilityReports);\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles, Typography, Checkbox, FormControlLabel } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nconst styles = theme =>({\r\n    Button: {\r\n        marginTop: '2%',\r\n    },\r\n});\r\n\r\n\r\nclass DoctorsReport extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            openForm: false,\r\n            checkAllDates: false,\r\n            ChosenDoctor: \"\",\r\n            MinimumDate: null,\r\n            MaximumDate: null,\r\n            MinimumDateDB: \"null\",\r\n            MaximumDateDB: \"null\",\r\n            Doctors: [],\r\n            Report:[],\r\n\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.uploadDoctors();\r\n    }\r\n    fetchDoctorReport(){\r\n        fetch(`http://162.243.165.50:4000/DoctorReport/${this.state.ChosenDoctor}/${this.state.MinimumDateDB}/${this.state.MaximumDateDB}`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Report:Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    uploadDoctors(){\r\n        fetch(`http://162.243.165.50:4000/AllDoctors`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Doctors:Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    MinDateChange = (d) =>{\r\n        let ApptDate=new Date(d)\r\n        ApptDate = this.FormatDate(ApptDate);\r\n        this.setState({MinimumDateDB:ApptDate});\r\n        this.setState({\r\n            MinimumDate: d\r\n        })\r\n    }\r\n    MaxDateChange = (d) =>{\r\n        let ApptDate=new Date(d)\r\n        ApptDate = this.FormatDate(ApptDate);\r\n        this.setState({MaximumDateDB:ApptDate});\r\n        this.setState({\r\n            MaximumDate: d\r\n        })\r\n    }\r\n    FormatDate=(date)=>{\r\n        date = date.getFullYear() + '-' + (this.fixMonth(date)) + '-' + date.getDate();\r\n        return date;\r\n    }\r\n\r\n    fixMonth=(date)=>{\r\n        if(date.getMonth() + 1 < 10){\r\n            return \"0\" +(date.getMonth() +1);\r\n        }\r\n        else{\r\n            return date.getMonth()+1;\r\n        }\r\n    }\r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    handlechoseChange = name => event =>{\r\n        this.setState({ \r\n            [name]: event.target.checked,\r\n            MinimumDate: null,\r\n            MaximumDate: null,\r\n            MinimumDateDB: \"null\",\r\n            MaximumDateDB: \"null\"});\r\n      };\r\n    handleClickOpen = () => {\r\n        this.fetchDoctorReport();\r\n        this.setState({ openForm: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ \r\n            openForm: false,\r\n            checkAllDates: false,\r\n            ChosenDoctor: \"\",\r\n            MinimumDate: null,\r\n            MaximumDate: null,\r\n            MinimumDateDB: \"null\",\r\n            MaximumDateDB: \"null\", \r\n            Report:[],\r\n        });\r\n    };\r\n    render(){\r\n        const {classes} = this.props;\r\n        return(\r\n            <div>\r\n            <Typography variant=\"h5\">Doctor Report</Typography>\r\n                <FormControl margin=\"normal\" fullWidth>\r\n                    <TextField\r\n                        id=\"ChosenDoctor\"\r\n                        select\r\n                        label=\"Please Choose A Facility\"\r\n                        name=\"ChosenDoctor\"\r\n                        variant=\"standard\"\r\n                        onChange={this.handleChange}\r\n                        value={this.state.ChosenDoctor}   \r\n                        required                   \r\n                    >\r\n                        <MenuItem key=\"-1\" value=\"-1\">\r\n                            All Doctors\r\n                        </MenuItem>\r\n                        {this.state.Doctors.map(option => (\r\n                            <MenuItem key={option.EmployeeID} value={option.EmployeeID}>\r\n                                Dr. {option.FirstName} {option.LastName}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                </FormControl>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox\r\n                        checked={this.state.checkAllDates}\r\n                        onChange={this.handlechoseChange('checkAllDates')}\r\n                        value=\"checkAllDates\"\r\n                        />\r\n                    }\r\n                    label=\"Generate Report for all Dates\"\r\n                />\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <DatePicker\r\n                        label=\"From Date\"\r\n                        name=\"MinimumDate\"\r\n                        value={this.state.MinimumDate}\r\n                        onChange={this.MinDateChange}\r\n                        fullWidth\r\n                        disabled={this.state.checkAllDates}\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <DatePicker\r\n                        label=\"To Date\"\r\n                        name=\"MaximumDate\"\r\n                        value={this.state.MaximumDate}\r\n                        onChange={this.MaxDateChange}\r\n                        fullWidth\r\n                        disabled={this.state.checkAllDates}\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n                <Button variant=\"contained\" color=\"inherit\" fullWidth className={classes.Button} onClick={this.handleClickOpen} disabled={((this.state.MinimumDate === null || this.state.MaximumDate === null) && !this.state.checkAllDates) || this.state.ChosenDoctor === \"\"}>\r\n                    Show reports for the Chosen Doctor\r\n                </Button>\r\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Here is the Doctor Report</DialogTitle>\r\n                    <DialogContent>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">EmployeeID</TableCell>\r\n                                    <TableCell align=\"center\">Number of Appointments</TableCell>\r\n                                    <TableCell align=\"center\">Number of Diagnoses</TableCell>\r\n                                    <TableCell align=\"center\">Number of Cancelled Appointments</TableCell>\r\n                                    <TableCell align=\"center\">Number of Days Working in a week</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {this.state.Report.map(Each => (\r\n                                    <TableRow key={Each.EmployeeID}>\r\n                                        <TableCell align=\"center\">{Each.EmployeeID}</TableCell>\r\n                                        <TableCell align=\"center\">{Each.Apps}</TableCell>\r\n                                        <TableCell align=\"center\">{Each.Diagnoses}</TableCell>\r\n                                        <TableCell align=\"center\">{Each.CancelledApps}</TableCell>\r\n                                        <TableCell align=\"center\">{Each.DaysWorking}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>                        \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nDoctorsReport.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  \r\nexport default withStyles(styles)(DoctorsReport);\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles, Typography,} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst styles = theme =>({\r\n    Button: {\r\n        marginTop: '2%',\r\n    },\r\n});\r\n\r\n\r\nclass CheckUpReport extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            Report: [],\r\n        };\r\n    }\r\n    fetchCheckUps(){\r\n        fetch(`http://162.243.165.50:4000/CheckUp`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Report:Response.data }))\r\n        .catch(err => console.log(err))\r\n    };\r\n \r\n    handleClickOpen = () => {\r\n        this.fetchCheckUps();\r\n        this.setState({ openForm: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ \r\n            Report: [],\r\n            openForm:false,\r\n        });\r\n    };\r\n    render(){\r\n        const {classes} = this.props;\r\n        return(\r\n            <div>\r\n            <Typography variant=\"h5\">Six Month Check Up Report</Typography>\r\n               \r\n                <Button variant=\"contained\" color=\"inherit\" fullWidth className={classes.Button} onClick={this.handleClickOpen}>\r\n                    Show Patients Who need a 6-Month CheckUp\r\n                </Button>\r\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Patients that need to be contacted</DialogTitle>\r\n                    <DialogContent>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">Name </TableCell>\r\n                                    <TableCell align=\"center\">Contact Number</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                        {this.state.Report.map(Each => (\r\n                                            <TableRow key={Each.FirstName}>\r\n                                                <TableCell align=\"center\">{Each.FirstName} {Each.LastName}</TableCell>\r\n                                                <TableCell align=\"center\">{Each.CellNumber}</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                \r\n                            </TableBody>\r\n                        </Table>                        \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nCheckUpReport.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  \r\nexport default withStyles(styles)(CheckUpReport);\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles, FormControl, InputLabel, Input, Grid, TextField, MenuItem,} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst styles = theme =>({\r\n    Button: {\r\n        marginTop: '2%',\r\n    },\r\n});\r\n\r\n\r\nclass AddAFacility extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            States: [],\r\n            openForm: false,\r\n            Administrators:[],\r\n            AdminID:\"\",\r\n            FacilityName:\"\",\r\n            Street:\"\",\r\n            City:\"\",\r\n            StateID:\"\",\r\n            ZipCode:\"\",\r\n\r\n        };\r\n        this.handleChange=this.handleChange.bind(this);\r\n        this.AddFacility=this.AddFacility.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        this.fetchStates();\r\n        this.fetchAdministrators();\r\n    }\r\n    fetchStates(){\r\n        fetch(`http://162.243.165.50:4000/states`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ States:Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    fetchAdministrators(){\r\n        fetch(`http://162.243.165.50:4000/Administrators`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Administrators:Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    AddFacility(){\r\n        this.setState({openForm: false})\r\n        fetch(`http://162.243.165.50:4000/AddFacility`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                Admin: this.state.AdminID,\r\n                FName:   this.state.FacilityName,\r\n                Street:  this.props.Street,\r\n                City:     this.state.City,\r\n                StateID:     this.state.StateID,\r\n                ZipCode:    this.state.ZipCode\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n    };\r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    handleClickOpen = () => {\r\n        this.setState({ openForm: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ \r\n            States: [],\r\n            openForm: false,\r\n            Administrators:[],\r\n            AdminID:\"\",\r\n            FacilityName:\"\",\r\n            Street:\"\",\r\n            City:\"\",\r\n            StateID:\"\",\r\n            ZipCode:\"\",\r\n        });\r\n    };\r\n    render(){\r\n        const {classes} = this.props;\r\n        return(\r\n            <div>\r\n                <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.Button} onClick={this.handleClickOpen}>\r\n                    Add A New Facility\r\n                </Button>\r\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Add A New Facility</DialogTitle>\r\n                    <DialogContent>\r\n                        <FormControl margin=\"auto\" fullWidth required>\r\n                            <InputLabel htmlFor=\"FacilityName\">Facility Name</InputLabel>\r\n                            <Input name=\"FacilityName\" autoFocus value={this.state.FacilityName} onChange={this.handleChange}></Input>\r\n                        </FormControl>\r\n                        <FormControl margin=\"normal\" fullWidth>\r\n                                    <TextField\r\n                                        id=\"AdminID\"\r\n                                        select\r\n                                        label=\"Administrator\"\r\n                                        name=\"AdminID\"\r\n                                        variant=\"standard\"\r\n                                        value={this.state.AdminID} \r\n                                        onChange={this.handleChange}  \r\n                                        required                   \r\n                                    >\r\n                                        {this.state.Administrators.map(option => (\r\n                                            <MenuItem key={option.EmployeeID} value={option.EmployeeID}>\r\n                                                {option.EmployeeID}:{option.FirstName} {option.LastName}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField>\r\n                                </FormControl>\r\n                        <FormControl margin=\"auto\" fullWidth required>\r\n                            <InputLabel htmlFor=\"Street\">Street Address</InputLabel>\r\n                            <Input name=\"Street\" value={this.state.Street} onChange={this.handleChange}></Input>\r\n                        </FormControl>\r\n                        <Grid container spacing={8}>\r\n                            <Grid item xs={12} sm={5}>\r\n                                <FormControl margin=\"normal\" fullWidth required>\r\n                                    <InputLabel htmlFor=\"City\">City</InputLabel>\r\n                                    <Input name=\"City\" value={this.state.City} onChange={this.handleChange}></Input>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={2}>\r\n                                <FormControl margin=\"normal\" fullWidth>\r\n                                    <TextField\r\n                                        id=\"State\"\r\n                                        select\r\n                                        label=\"State\"\r\n                                        name=\"StateID\"\r\n                                        variant=\"standard\"\r\n                                        value={this.state.StateID} \r\n                                        onChange={this.handleChange}  \r\n                                        required                   \r\n                                    >\r\n                                        {this.state.States.map(option => (\r\n                                            <MenuItem key={option.StateID} value={option.StateID}>\r\n                                                {option.StateString}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={5}>\r\n                                <FormControl margin=\"normal\" fullWidth required>\r\n                                    <InputLabel htmlFor=\"ZipCode\">Zip Code</InputLabel>\r\n                                    <Input name=\"ZipCode\"  value={this.state.ZipCode} onChange={this.handleChange}></Input>\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>           \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.AddFacility} color=\"primary\">\r\n                            Add The Facility\r\n                        </Button>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nAddAFacility.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  \r\nexport default withStyles(styles)(AddAFacility);\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles, FormControl, InputLabel, Input, Grid, TextField, MenuItem,} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst styles = theme =>({\r\n    Button: {\r\n        marginTop: '2%',\r\n    },\r\n});\r\n\r\n\r\nclass ChangeAFacility extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            Facilities: [],\r\n            openForm: false,\r\n            Administrators:[],\r\n            AdminID:\"\",\r\n            ChosenFacility:\"\",\r\n\r\n        };\r\n        this.handleChange=this.handleChange.bind(this);\r\n        this.ChangeFacility=this.ChangeFacility.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        this.fetchFacilities();\r\n        this.fetchAdministrators();\r\n    }\r\n    fetchFacilities(){\r\n        fetch(`http://162.243.165.50:4000/Facilities`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Facilities:Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    fetchAdministrators(){\r\n        fetch(`http://162.243.165.50:4000/Administrators`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Administrators:Response.data }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    ChangeFacility(){\r\n        this.setState({openForm:false})\r\n        fetch(`http://162.243.165.50:4000/ChangeAdmin`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                AdministratorID: this.state.AdminID,\r\n                FacilityID:   this.state.ChosenFacility,\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n    };\r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    handleClickOpen = () => {\r\n        this.setState({ openForm: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ \r\n            Facilities: [],\r\n            openForm: false,\r\n            Administrators:[],\r\n            AdminID:\"\",\r\n            ChosenFacility:\"\",\r\n        });\r\n    };\r\n    render(){\r\n        const {classes} = this.props;\r\n        return(\r\n            <div>\r\n                <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.Button} onClick={this.handleClickOpen}>\r\n                    Change A Facility Administrator\r\n                </Button>\r\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Change Facility Administrator</DialogTitle>\r\n                    <DialogContent>\r\n                        <FormControl margin=\"normal\" fullWidth>\r\n                            <TextField\r\n                                id=\"ChosenFacility\"\r\n                                select\r\n                                label=\"Select Facility\"\r\n                                name=\"ChosenFacility\"\r\n                                variant=\"standard\"\r\n                                value={this.state.ChosenFacility} \r\n                                onChange={this.handleChange}  \r\n                                required                   \r\n                            >\r\n                                {this.state.Facilities.map(option => (\r\n                                    <MenuItem key={option.FacilityID} value={option.FacilityID}>\r\n                                        {option.FacilityID}: {option.FacilityName}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                        </FormControl>\r\n                        <FormControl margin=\"normal\" fullWidth>\r\n                            <TextField\r\n                                id=\"AdminID\"\r\n                                select\r\n                                label=\"Select New Admin\"\r\n                                name=\"AdminID\"\r\n                                variant=\"standard\"\r\n                                value={this.state.AdminID} \r\n                                onChange={this.handleChange}  \r\n                                required                   \r\n                            >\r\n                                {this.state.Administrators.map(option => (\r\n                                    <MenuItem key={option.EmployeeID} value={option.EmployeeID}>\r\n                                        {option.EmployeeID}:{option.FirstName} {option.LastName}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                        </FormControl>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.ChangeFacility} disabled={this.state.AdminID === \"\" || this.state.ChosenFacility === \"\"} color=\"primary\">\r\n                            Change Facility Admin \r\n                        </Button>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nChangeAFacility.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  \r\nexport default withStyles(styles)(ChangeAFacility);\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles, Typography,} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport AddAFacility from './AddAFacility';\r\nimport ChangeAFacility from './ChangeAFacility';\r\n\r\nconst styles = theme =>({\r\n    Button: {\r\n        marginTop: '2%',\r\n    },\r\n});\r\n\r\n\r\nclass Administration extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            Report: [],\r\n            openForm:false\r\n        };\r\n    }\r\n    fetchFacilities(){\r\n        fetch(`http://162.243.165.50:4000/FacilitiesAdmin`)\r\n        .then(result => result.json())\r\n        .then(Response => this.setState({ Report:Response.data }))\r\n        .catch(err => console.log(err))\r\n    };\r\n \r\n    handleClickOpen = () => {\r\n        this.fetchFacilities();\r\n        this.setState({ openForm: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ \r\n            Report: [],\r\n            openForm:false,\r\n        });\r\n    };\r\n    render(){\r\n        const {classes} = this.props;\r\n        return(\r\n            <div>\r\n            <Typography variant=\"h5\">Facilities</Typography>\r\n            {window.localStorage.userID === \"222\" &&\r\n                <AddAFacility/>\r\n            }\r\n            {window.localStorage.userID === \"222\" &&\r\n                <ChangeAFacility/>\r\n            }\r\n                \r\n                <Button variant=\"contained\" color=\"inherit\" fullWidth className={classes.Button} onClick={this.handleClickOpen}>\r\n                    See All Facilty Information\r\n                </Button>\r\n                <Dialog maxWidth=\"md\" open={this.state.openForm} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Facility Information</DialogTitle>\r\n                    <DialogContent>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">FacilityID </TableCell>\r\n                                    <TableCell align=\"center\">Facility Name</TableCell>\r\n                                    <TableCell align=\"center\">Facility Address</TableCell>\r\n                                    <TableCell align=\"center\">Facility Administrator</TableCell>\r\n                                    <TableCell align=\"center\">Administrator Contact</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                        {this.state.Report.map(Each => (\r\n                                            <TableRow key={Each.FacilityID}>\r\n                                                <TableCell align=\"center\">{Each.FacilityID}</TableCell>\r\n                                                <TableCell align=\"center\">{Each.FacilityName}</TableCell>\r\n                                                <TableCell align=\"center\">{Each.Street}, {Each.City}, {Each.State} {Each.Zip}</TableCell>\r\n                                                <TableCell align=\"center\">{Each.FirstName} {Each.LastName}</TableCell>\r\n                                                <TableCell align=\"center\">{Each.Contact}</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                \r\n                            </TableBody>\r\n                        </Table>                        \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nAdministration.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  \r\nexport default withStyles(styles)(Administration);\r\n","import React, { Component } from 'react';\r\nimport FacilityReports from './FacilityReports';\r\nimport { Paper, withStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport DoctorsReport from './DoctorsReport';\r\nimport CheckUpReport from './CheckUpReport';\r\nimport Facilities from './Facilities';\r\n\r\nconst styles = theme =>({\r\n    root: {\r\n        width: '55%',\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        padding: theme.spacing.unit*3,\r\n        marginTop:\"5%\",\r\n        marginBottom:\"5%\",\r\n        margin:\"auto\"\r\n  \r\n    },\r\n    checkUp: {\r\n      width: '55%',\r\n      display: \"flex\",\r\n      flexDirection: 'column',\r\n      padding: theme.spacing.unit*3,\r\n      marginTop:\"5%\",\r\n      marginBottom:\"5%\",\r\n      margin:\"auto\"\r\n\r\n  },\r\n});\r\n\r\nclass ReportsGenerator extends Component {\r\n  render() { \r\n    const{classes}=this.props;\r\n    return (\r\n      <div>\r\n          <Paper className={classes.root}>\r\n            <FacilityReports/>\r\n          </Paper>\r\n          <Paper className={classes.root}>\r\n            <DoctorsReport/>\r\n          </Paper>\r\n          <Paper className={classes.checkUp}>\r\n            <CheckUpReport/>\r\n          </Paper>\r\n          <Paper className={classes.checkUp}>\r\n            <Facilities/>\r\n          </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReportsGenerator.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  \r\nexport default withStyles(styles)(ReportsGenerator);\r\n","import React, { Component } from 'react';\r\nimport NavigationBar from '../Components/GeneralComponents/NavigationBar';\r\nimport ReportsGenerator from '../Components/Administration/ReportsGenerator';\r\nimport '../Components/Administration/Report.css';\r\n\r\nclass Report extends Component {\r\n  render() { \r\n    return (\r\n      <div className='ReportsPage-image'><div/>\r\n        <div className='ReportsPage-overlay'>\r\n          <NavigationBar title={\"Administration\"} Tab={3}/>\r\n          <ReportsGenerator/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Report;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport {Route} from 'react-router-dom';\r\nimport Home from './Pages/Home';\r\nimport Appointments from './Pages/Appointments';\r\nimport Registration from './Pages/Registration';\r\nimport Profile from './Pages/Profile';\r\nimport Scheduling from './Pages/Scheduling';\r\nimport DoctorRegistration from './Pages/DoctorRegistration';\r\nimport Locator from './Pages/Locator';\r\nimport Administration from './Pages/Administration';\r\n\r\nclass Paths extends Component{\r\n    state = {\r\n        loggedIn: true,\r\n    }\r\n    render() {\r\n        return(\r\n            <BrowserRouter>\r\n                <div className=\"Routes\">\r\n                    <Route path=\"/\" exact component={Home}/>\r\n                    <Route path=\"/Appointments\" exact component={Appointments}/>\r\n                    <Route path=\"/Registration\" exact component={Registration}/>\r\n                    <Route path=\"/Profile\" exact component={Profile}/>\r\n                    <Route path=\"/Locator\" exact component={Locator}/>\r\n                    <Route path=\"/Scheduling\" exact component={Scheduling}/>\r\n                    <Route path=\"/Administration\" exact component={Administration}/>\r\n                    <Route path=\"/DoctorRegistration\" exact component={DoctorRegistration}/>\r\n                </div>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Paths;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Paths from './Paths';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Paths />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}